# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Tests

on:
  pull_request:
    branches: [ "*" ]

permissions:
  contents: write
  pull-requests: write
  actions: write
  checks: write
  statuses: write
  issues: write
  discussions: write

jobs:
  Run-tests-on-Ubuntu:
    name: Run tests on Ubuntu-latest
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ "3.10",  ]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m venv ./venv
        . ./venv/bin/activate
        python -m pip install --upgrade pip
        pip install poetry
        poetry install --with=dev --no-interaction --no-ansi
    - name: Test Linting
      run: |
        . ./venv/bin/activate
        black src --check --diff
        black tests --check --diff
    - name: Test Typing
      run: |
        . ./venv/bin/activate
#         TODO: Enable mypy check
#        mypy src
#        mypy tests
    - name: Test Notebooks
      run: |
        . ./venv/bin/activate
        poetry install --with=tutorials --no-interaction --no-ansi
        pytest --nbmake tutorials --nbmake-timeout=600  # 10 minutes timeout

    - name: Test Unittests with pytest
      run: |
        . ./venv/bin/activate
        pytest tests --cov-report=xml:tests/.tmp/coverage.xml --cov=src --cov-report=term-missing

    - name: Code Coverage
      uses: orgoro/coverage@v3.2
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        coverageFile: tests/.tmp/coverage.xml
        thresholdAll: 0.0
        thresholdNew: 0.98
        thresholdModified: 0.98

    - name: Test Build
      run: |
        . ./venv/bin/activate
        python -m build
        twine check dist/*

  Run-tests-on-Windows:
    name: Run tests on Windows-latest
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m venv ./venv
        . ./venv/Scripts/activate
        python -m pip install --upgrade pip
        pip install poetry
        poetry install --with=dev --no-interaction --no-ansi
    - name: Test Unittests with pytest
      run: |
        . ./venv/Scripts/activate
        pytest tests
