Search.setIndex({"docnames": ["index", "modules", "neurotorch", "neurotorch.callbacks", "neurotorch.init", "neurotorch.learning_algorithms", "neurotorch.metrics", "neurotorch.modules", "neurotorch.modules.layers", "neurotorch.regularization", "neurotorch.rl", "neurotorch.trainers", "neurotorch.transforms", "neurotorch.utils", "neurotorch.visualisation", "readme"], "filenames": ["index.rst", "modules.rst", "neurotorch.rst", "neurotorch.callbacks.rst", "neurotorch.init.rst", "neurotorch.learning_algorithms.rst", "neurotorch.metrics.rst", "neurotorch.modules.rst", "neurotorch.modules.layers.rst", "neurotorch.regularization.rst", "neurotorch.rl.rst", "neurotorch.trainers.rst", "neurotorch.transforms.rst", "neurotorch.utils.rst", "neurotorch.visualisation.rst", "readme.rst"], "titles": ["Welcome to NeuroTorch\u2019s documentation!", "neurotorch", "neurotorch package", "neurotorch.callbacks package", "neurotorch.init package", "neurotorch.learning_algorithms package", "neurotorch.metrics package", "neurotorch.modules package", "neurotorch.modules.layers package", "neurotorch.regularization package", "neurotorch.rl package", "neurotorch.trainers package", "neurotorch.transforms package", "neurotorch.utils package", "neurotorch.visualisation package", "1. Description"], "terms": {"packag": [0, 1, 15], "subpackag": [0, 1], "callback": [0, 1, 2, 5, 10, 11, 15], "submodul": [0, 1], "base_callback": [0, 1, 2], "checkpoints_manag": [0, 1, 2], "converg": [0, 1, 2, 5], "early_stop": [0, 1, 2], "event": [0, 1, 2], "histori": [0, 1, 2, 10, 11], "lr_schedul": [0, 1, 2], "training_visu": [0, 1, 2], "init": [0, 1, 2], "learning_algorithm": [0, 1, 2, 10, 11, 15], "bptt": [0, 1, 2, 15], "eprop": [0, 1, 2], "rl": [0, 1, 2, 15], "tbptt": [0, 1, 2, 15], "metric": [0, 1, 2, 3, 5, 10, 11, 15], "base": [0, 1, 2, 3, 5, 9, 10, 11, 13, 14], "classif": [0, 1, 2, 5, 7, 15], "loss": [0, 1, 2, 3, 5, 7, 8, 9, 10, 11, 12, 13], "regress": [0, 1, 2], "function": [0, 1, 2, 5, 6, 8, 9, 10, 11, 12, 13], "sequenti": [0, 1, 2, 10, 13], "sequential_rnn": [0, 1, 2], "spike_func": [0, 1, 2, 8], "util": [0, 1, 2], "wrapper": [0, 1, 2], "regular": [0, 1, 2, 7, 8, 10, 11, 12], "connectom": [0, 1, 2], "agent": [0, 1, 2], "buffer": [0, 1, 2, 5, 7, 12], "curriculum": [0, 1, 2], "ppo": [0, 1, 2], "rl_academi": [0, 1, 2], "trainer": [0, 1, 2, 3, 5, 9, 10, 15], "transform": [0, 1, 2, 7, 10, 11, 13], "spikes_auto_encod": [0, 1, 2], "spikes_decod": [0, 1, 2], "spikes_encod": [0, 1, 2], "vision": [0, 1, 2], "autograd": [0, 1, 2, 7], "collect": [0, 1, 2, 3], "format": [0, 1, 2, 5, 7, 10, 12], "random": [0, 1, 2, 4, 5, 8, 9, 10, 14], "visualis": [0, 1, 2], "report": [0, 1, 2, 10], "time_series_visualis": [0, 1, 2], "dimens": [0, 1, 6, 7, 8, 10, 13, 14, 15], "size": [0, 1, 2, 3, 7, 8, 9, 10, 12, 14, 15], "dtype": [0, 1, 2, 7, 10, 11, 12, 14], "name": [0, 1, 2, 3, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15], "__init__": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 14], "from_int": [0, 1, 2], "from_int_or_dimens": [0, 1, 2], "dimensionproperti": [0, 1, 2, 15], "none": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], "spatial": [0, 1, 2], "time": [0, 1, 2, 3, 5, 7, 8, 10, 11, 12, 13, 14, 15], "It": [0, 5, 7, 10, 11, 13, 15], "bring": [0, 7, 15], "deep": [0, 7, 15], "learn": [0, 2, 3, 5, 7, 8, 10, 11, 12, 15], "neurosci": [0, 2, 7, 15], "togeth": [0, 13, 15], "With": [0, 8, 15], "thi": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], "librari": [0, 2, 8, 15], "we": [0, 5, 7, 8, 14, 15], "offer": [0, 13, 15], "machin": [0, 2, 15], "tool": [0, 15], "neuroscientist": [0, 15], "comput": [0, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15], "scientist": [0, 15], "These": [0, 15], "two": [0, 7, 8, 10, 11, 14, 15], "domain": [0, 15], "were": [0, 7, 13, 15], "creat": [0, 2, 3, 5, 7, 8, 9, 10, 14, 15], "one": [0, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], "wa": [0, 3, 7, 15], "develop": [0, 5, 15], "easi": [0, 15], "us": [0, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], "you": [0, 5, 7, 8, 9, 10, 11, 12, 14, 15], "can": [0, 2, 3, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15], "do": [0, 5, 10, 11, 15], "simpl": [0, 15], "thing": [0, 15], "few": [0, 15], "line": [0, 3, 8, 12, 15], "code": [0, 13, 14, 15], "moreov": [0, 15], "i": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], "modular": [0, 15], "so": [0, 3, 7, 8, 9, 14, 15], "adapt": [0, 8, 15], "your": [0, 8, 12, 15], "need": [0, 5, 6, 7, 8, 10, 12, 15], "rel": [0, 15], "quickli": [0, 15], "stai": [0, 8, 15], "tune": [0, 8, 15], "becaus": [0, 15], "more": [0, 6, 7, 8, 10, 11, 13, 14, 15], "come": [0, 7, 8, 10, 11, 15], "what": [0, 10, 11, 15], "done": [0, 5, 7, 8, 10, 15], "imag": [0, 2, 15], "spike": [0, 2, 7, 12, 14, 15], "network": [0, 2, 3, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15], "seri": [0, 2, 7, 8, 14, 15], "wilson": [0, 7, 8, 15], "cowan": [0, 7, 8, 15], "reconstruct": [0, 15], "predict": [0, 3, 5, 6, 7, 8, 10, 11, 12, 14, 15], "continu": [0, 8, 10, 15], "backpropag": [0, 5, 15], "through": [0, 3, 5, 10, 15], "truncat": [0, 5, 7, 10, 15], "algorithm": [0, 3, 5, 10, 11, 14, 15], "elig": [0, 5, 15], "propag": [0, 2, 5, 10, 15], "anyth": [0, 15], "ar": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], "abl": [0, 15], "alreadi": [0, 5, 10, 13, 14, 15], "reinforc": [0, 3, 10, 11, 15], "recurs": [0, 5, 7, 13, 15], "least": [0, 5, 7, 15], "squar": [0, 5, 7, 15], "method": [0, 3, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15], "command": [0, 15], "pypi": [0, 15], "pip": [0, 15], "sourc": [0, 15], "git": [0, 15], "http": [0, 7, 8, 10, 13, 14, 15], "github": [0, 5, 8, 15], "com": [0, 7, 8, 13, 15], "To": [0, 7, 8, 12, 15], "download": [0, 15], "whl": [0, 15], "file": [0, 3, 5, 7, 10, 13, 14, 15], "follow": [0, 3, 5, 7, 8, 9, 11, 13, 14, 15], "instruct": [0, 15], "abov": [0, 15], "see": [0, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], "readm": [0, 15], "folder": [0, 3, 7, 10, 11, 12, 15], "here": [0, 5, 7, 10, 11, 15], "project": [0, 15], "jupyt": [0, 15], "notebook": [0, 15], "repositori": [0, 15], "mnist": [0, 15], "fashion": [0, 15], "heidelberg": [0, 15], "forecast": [0, 7, 15], "neuron": [0, 2, 4, 7, 8, 9, 10, 12, 13, 14, 15], "activ": [0, 5, 8, 10, 12, 14, 15], "br": [0, 15], "sorri": [0, 15], "progress": [0, 3, 6, 9, 10, 11, 15], "publish": [0, 15], "yet": [0, 15], "null": [0, 15], "nt": [0, 5, 9, 10, 11, 15], "torch": [0, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15], "pprint": [0, 15], "n_hidden_neuron": [0, 15], "128": [0, 15], "checkpoint_fold": [0, 3, 7, 12, 15], "checkpoint": [0, 3, 5, 7, 10, 11, 12, 15], "checkpoint_000": [0, 15], "checkpoint_manag": [0, 2, 11, 15], "checkpointmanag": [0, 2, 3, 11, 15], "dataload": [0, 6, 10, 11, 15], "get_dataload": [0, 15], "batch_siz": [0, 7, 8, 10, 12, 13, 15], "256": [0, 10, 15], "train_val_split_ratio": [0, 15], "0": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], "95": [0, 10, 15], "sequentialrnn": [0, 2, 7, 15], "layer": [0, 2, 5, 7, 9, 10, 11, 12, 15], "liflay": [0, 7, 8, 12, 15], "input_s": [0, 2, 7, 8, 10, 12, 15], "test": [0, 15], "dataset": [0, 3, 5, 10, 11, 15], "n_unit": [0, 12, 15], "output_s": [0, 2, 7, 8, 10, 12, 15], "use_recurrent_connect": [0, 8, 10, 12, 15], "true": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], "spylilay": [0, 7, 8, 15], "n_class": [0, 15], "f": [0, 7, 8, 13, 15], "build": [0, 2, 7, 8, 10, 15], "optim": [0, 3, 5, 7, 9, 10, 11, 13, 15], "adam": [0, 5, 15], "paramet": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], "lr": [0, 3, 5, 10, 11, 15], "1e": [0, 3, 5, 6, 7, 8, 10, 11, 12, 15], "classificationtrain": [0, 2, 11, 15], "model": [0, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15], "verbos": [0, 3, 6, 7, 10, 11, 15], "training_histori": [0, 2, 3, 11, 15], "train": [0, 2, 3, 5, 7, 8, 10, 11, 15], "val": [0, 15], "n_iter": [0, 2, 3, 10, 11, 15], "100": [0, 3, 8, 15], "load_checkpoint_mod": [0, 2, 3, 7, 10, 11, 15], "loadcheckpointmod": [0, 2, 3, 7, 10, 11, 15], "last_itr": [0, 2, 3, 15], "plot": [0, 2, 3, 10, 14, 15], "show": [0, 3, 9, 10, 14, 15], "load_checkpoint": [0, 2, 3, 7, 10, 15], "checkpoints_meta_path": [0, 2, 3, 7, 10, 15], "best_itr": [0, 2, 3, 7, 10, 15], "k": [0, 5, 7, 14, 15], "classificationmetr": [0, 2, 6, 15], "compute_y_true_y_pr": [0, 2, 6, 15], "desc": [0, 6, 14, 15], "item": [0, 2, 3, 7, 10, 13, 15], "accuraci": [0, 2, 6, 15], "y_true": [0, 6, 15], "y_pred": [0, 6, 15], "On": [0, 15], "hand": [0, 15], "increasingli": [0, 15], "ml": [0, 15], "without": [0, 7, 8, 13, 14, 15], "necessarili": [0, 15], "expertis": [0, 15], "pipelin": [0, 15], "other": [0, 3, 5, 7, 8, 9, 10, 11, 13, 15], "most": [0, 15], "expert": [0, 15], "lack": [0, 15], "background": [0, 15], "implement": [0, 3, 5, 6, 7, 8, 10, 12, 13, 15], "biolog": [0, 15], "inspir": [0, 5, 8, 15], "There": [0, 15], "thu": [0, 8, 15], "provid": [0, 5, 8, 9, 10, 15], "complet": [0, 10, 15], "origin": [0, 5, 15], "from": [0, 2, 3, 5, 7, 8, 10, 11, 13, 14, 15], "while": [0, 6, 7, 8, 10, 11, 12, 15], "intuit": [0, 15], "interfac": [0, 15], "The": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], "goal": [0, 15], "python": [0, 2, 15], "flexibl": [0, 15], "constrain": [0, 7, 15], "dynam": [0, 7, 8, 12, 15], "includ": [0, 15], "sever": [0, 15], "strategi": [0, 3, 5, 10, 13, 15], "highli": [0, 15], "both": [0, 6, 7, 8, 9, 12, 15], "ensur": [0, 5, 8, 12, 15], "field": [0, 10, 11, 15], "benefit": [0, 15], "nors": [0, 15], "neural": [0, 7, 8, 15], "pytorch": [0, 6, 13, 15], "In": [0, 3, 5, 7, 8, 9, 10, 11, 12, 13, 15], "fact": [0, 8, 15], "seem": [0, 5, 10, 15], "veri": [0, 8, 15], "first": [0, 3, 4, 5, 6, 7, 9, 10, 12, 14, 15], "glanc": [0, 15], "howev": [0, 5, 7, 15], "main": [0, 10, 11, 15], "differ": [0, 3, 5, 6, 8, 10, 11, 13, 15], "focus": [0, 15], "bio": [0, 15], "like": [0, 2, 8, 15], "itself": [0, 8, 10, 15], "addit": [0, 3, 5, 7, 8, 9, 10, 11, 12, 14, 15], "soon": [0, 15], "allow": [0, 6, 8, 9, 13, 15], "easili": [0, 15], "spytorch": [0, 8, 15], "present": [0, 3, 8, 15], "set": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], "snn": [0, 8, 15], "surrog": [0, 7, 8, 15], "gradient": [0, 5, 7, 8, 10, 13, 15], "approach": [0, 15], "superspik": [0, 15], "zenk": [0, 7, 15], "ganguli": [0, 7, 15], "2017": [0, 15], "prefix": [0, 3, 15], "spy": [0, 15], "certain": [0, 8, 15], "refer": [0, 8, 9, 14, 15], "pysnn": [0, 15], "extens": [0, 14, 15], "lightn": [0, 15], "framework": [0, 15], "deploi": [0, 15], "ship": [0, 15], "ai": [0, 15], "product": [0, 15], "fast": [0, 7, 13, 15], "poutyn": [0, 15], "simplifi": [0, 15], "handl": [0, 15], "much": [0, 15], "boilerpl": [0, 15], "classic": [0, 2, 7, 15], "part": [0, 7, 15], "postgradu": [0, 15], "research": [0, 15], "realiz": [0, 15], "j\u00e9r\u00e9mie": [0, 15], "ginc": [0, 15], "supervis": [0, 15], "simon": [0, 15], "v": [0, 14, 15], "hardi": [0, 15], "_": [0, 8, 9, 13, 15], "patrick": [0, 7, 15], "desrosi": [0, 7, 15], "our": [0, 5, 15], "support": [0, 15], "uniqu": [0, 6, 13, 15], "frqnt": [0, 15], "fund": [0, 15], "center": [0, 15], "sentinel": [0, 15], "nord": [0, 15], "program": [0, 15], "universit\u00e9": [0, 15], "laval": [0, 15], "canada": [0, 15], "excel": [0, 15], "nserc": [0, 15], "io": [0, 15], "click": [0, 15], "new": [0, 3, 7, 9, 10, 14, 15], "issu": [0, 5, 15], "anthoni": [0, 15], "drouin": [0, 15], "who": [0, 15], "help": [0, 5, 15], "dure": [0, 3, 10, 11, 15], "hi": [0, 15], "2022": [0, 7, 15], "summer": [0, 15], "internship": [0, 15], "now": [0, 8, 15], "collabor": [0, 15], "antoin": [0, 15], "l\u00e9gar\u00e9": [0, 15], "thoma": [0, 15], "charland": [0, 15], "made": [0, 15], "awesom": [0, 15], "logo": [0, 15], "my": [0, 15], "dog": [0, 15], "chewi": [0, 15], "ha": [0, 5, 7, 8, 12, 13, 15], "been": [0, 7, 10, 15], "great": [0, 8, 15], "whole": [0, 15], "apach": [0, 15], "articl": [0, 7, 15], "gince2024neurotorch": [0, 15], "titl": [0, 14, 15], "A": [0, 2, 3, 7, 8, 9, 10, 12, 13, 15], "orient": [0, 15], "author": [0, 15], "j": [0, 4, 7, 8, 10, 12, 13, 15], "e": [0, 3, 5, 7, 8, 10, 12, 15], "r": [0, 7, 8, 15], "mie": [0, 15], "journal": [0, 7, 15], "biorxiv": [0, 7, 15], "page": [0, 7, 15], "2024": [0, 15], "year": [0, 15], "cold": [0, 15], "spring": [0, 14, 15], "harbor": [0, 15], "laboratori": [0, 15], "index": [0, 3, 5, 10, 13, 14], "search": 0, "modul": [1, 15], "content": 1, "basecallback": [2, 3, 5, 9, 10, 11], "default_high_prior": [2, 3], "default_low_prior": [2, 3], "default_medium_prior": [2, 3], "default_prior": [2, 3, 5], "unpickeable_attribut": [2, 3], "close": [2, 3, 5, 10, 14], "extra_repr": [2, 3, 5, 7, 8, 12], "get_checkpoint_st": [2, 3, 5, 10], "instance_count": [2, 3], "load_checkpoint_st": [2, 3, 5, 10], "on_batch_begin": [2, 3, 5], "on_batch_end": [2, 3, 5], "on_epoch_begin": [2, 3], "on_epoch_end": [2, 3], "on_iteration_begin": [2, 3, 10], "on_iteration_end": [2, 3, 10], "on_optimization_begin": [2, 3, 5, 10], "on_optimization_end": [2, 3, 5, 9, 10], "on_pbar_upd": [2, 3, 9, 10], "on_train_begin": [2, 3], "on_train_end": [2, 3], "on_trajectory_end": [2, 3, 10], "on_validation_batch_begin": [2, 3, 5], "on_validation_batch_end": [2, 3], "on_validation_begin": [2, 3], "on_validation_end": [2, 3], "start": [2, 3, 5, 8, 10, 14], "callbackslist": [2, 3, 10, 11], "append": [2, 3, 10, 13], "remov": [2, 3, 10, 11], "sort_callbacks_": [2, 3, 11], "checkpoints_meta_suffix": [2, 3], "checkpoint_best_kei": [2, 3], "checkpoint_file_struct": [2, 3], "checkpoint_itrs_kei": [2, 3], "checkpoint_itr_kei": [2, 3], "checkpoint_metrics_kei": [2, 3], "checkpoint_optimizer_state_dict_kei": [2, 3, 5, 10], "checkpoint_save_path_kei": [2, 3], "checkpoint_state_dict_kei": [2, 3], "checkpoint_training_history_kei": [2, 3], "save_ext": [2, 3], "suffix_sep": [2, 3], "get_checkpoint_filenam": [2, 3], "get_save_name_from_checkpoint": [2, 3], "load_mode_to_suffix": [2, 3], "save_checkpoint": [2, 3], "save_checkpoints_meta": [2, 3], "save_on": [2, 3], "from_str": [2, 3, 7, 8, 13], "convergencetimegett": [2, 3], "earlystop": [2, 3], "earlystoppingonnan": [2, 3], "earlystoppingonstagn": [2, 3], "get_valu": [2, 3, 10], "earlystoppingontimelimit": [2, 3], "current_seconds_count_kei": [2, 3], "delta_seconds_kei": [2, 3], "update_flag": [2, 3], "earlystoppingthreshold": [2, 3], "eventonmetricthreshold": [2, 3], "traininghistori": [2, 3, 10, 11], "concat": [2, 3, 10], "create_plot": [2, 3], "get": [2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13], "get_item_at": [2, 3], "insert": [2, 3, 5, 13], "kei": [2, 3, 5, 7, 10, 13], "max": [2, 3, 7, 10, 13], "max_item": [2, 3], "min": [2, 3], "min_item": [2, 3], "update_fig": [2, 3], "lrscheduleronmetr": [2, 3], "default_lr_start": [2, 3], "default_min_lr": [2, 3], "update_step": [2, 3], "linearlrschedul": [2, 3], "traininghistoryvisualizationcallback": [2, 3], "foresighttimestepupdaterontarget": [2, 3], "get_hh_memory_size_from_y_batch": [2, 3], "dale_": [2, 4, 9], "default_optimizer_cl": [2, 5], "optimizer_params_group_idx": [2, 5], "apply_criterion": [2, 5], "create_default_optim": [2, 5], "initialize_param_group": [2, 5], "checkpoint_feedback_weights_kei": [2, 5], "default_feedbacks_gen_strategi": [2, 5], "default_feedbacks_str_norm_clip_valu": [2, 5], "default_y_kei": [2, 5], "feedbacks_gen_func": [2, 5], "optimizer_output_params_group_idx": [2, 5], "compute_error": [2, 5], "compute_learning_sign": [2, 5], "decorate_forward": [2, 5], "eligibility_traces_zeros_": [2, 5], "initialize_feedback_weight": [2, 5], "initialize_lay": [2, 5], "initialize_output_lay": [2, 5], "initialize_output_param": [2, 5], "initialize_param": [2, 5], "make_feedback_weight": [2, 5], "update_grad": [2, 5], "learningalgorithm": [2, 5, 10, 11], "checkpoint_p_states_dict_kei": [2, 5], "curbd_step_method": [2, 5], "grad_mth_step": [2, 5], "initialize_p_list": [2, 5], "inputs_mth_step": [2, 5], "jacobian_mth_step": [2, 5], "optimization_step": [2, 5], "outputs_mth_step": [2, 5], "scaled_jacobian_mth_step": [2, 5], "undecorate_forward": [2, 5], "basemetr": [2, 6], "metrics_names_sep": [2, 6], "__call__": [2, 6, 7, 8, 9, 10, 11, 12], "get_all_metrics_nam": [2, 6], "get_all_metrics_names_to_func": [2, 6], "get_unique_metrics_nam": [2, 6], "get_unwrap_all_metrics_names_to_func": [2, 6], "metrics_funct": [2, 6], "auc": [2, 6], "confusion_matrix": [2, 6], "f1": [2, 6], "precis": [2, 6], "recal": [2, 6], "nllloss": [2, 5, 6], "forward": [2, 3, 5, 6, 7, 8, 9, 10, 12], "pvarianceloss": [2, 6], "mean_std_over_batch": [2, 6], "rmseloss": [2, 6], "smseloss": [2, 6], "regressionmetr": [2, 6], "epsilon": [2, 5, 6, 7, 10, 12], "compute_p_var": [2, 6], "d2_tweedi": [2, 6], "mean_absolute_error": [2, 6], "mean_squared_error": [2, 6], "p_var": [2, 6], "r2": [2, 6], "leaky_integr": [2, 7], "spiking_lpf": [2, 7], "wilson_cowan": [2, 7], "basemodel": [2, 6, 7, 10, 12], "apply_input_transform": [2, 7], "apply_output_transform": [2, 7], "devic": [2, 6, 7, 8, 10, 11, 12], "get_default_input_transform": [2, 7], "get_default_output_transform": [2, 7], "get_prediction_log_proba": [2, 7], "get_prediction_proba": [2, 7], "get_prediction_trac": [2, 7, 12], "get_raw_predict": [2, 7, 12], "hard_upd": [2, 7, 10], "infer_sizes_from_input": [2, 7, 8], "is_built": [2, 7, 8], "soft_upd": [2, 7, 10], "to_onnx": [2, 7], "namedmodul": [2, 7], "name_is_set": [2, 7], "sizedmodul": [2, 7, 8], "psigmoid": [2, 7], "p": [2, 5, 6, 7, 8, 9, 13], "weirdtanh": [2, 7], "build_lay": [2, 7], "get_all_lay": [2, 7], "get_all_layers_nam": [2, 7], "get_and_reset_regularization_loss": [2, 7, 8, 12], "get_dict_of_lay": [2, 7], "get_lay": [2, 7], "initialize_weights_": [2, 7, 8, 10], "get_fmt_predict": [2, 7], "get_last_predict": [2, 7], "get_max_predict": [2, 7], "get_mean_predict": [2, 7], "hh_memory_s": [2, 7], "out_memory_s": [2, 3, 7], "heavisidephiapprox": [2, 7, 8], "backward": [2, 5, 7, 13], "pseudo_deriv": [2, 7], "heavisidesigmoidapprox": [2, 7, 8], "spikefunctyp": [2, 7], "fastsigmoid": [2, 7], "phi": [2, 5, 7], "spikefunct": [2, 7, 8], "dimensionscat": [2, 7], "ax": [2, 3, 7, 10, 13, 14], "namedmodulewrapp": [2, 7], "sizedmodulewrapp": [2, 7], "infer_input_s": [2, 7], "infer_output_s": [2, 7], "dalelaw": [2, 9], "dalelawl2": [2, 9], "excratiotargetregular": [2, 9], "get_params_exc_ratio": [2, 9], "get_params_inh_ratio": [2, 9], "inhratiotargetregular": [2, 9], "weightsdist": [2, 9], "baseregular": [2, 9, 11], "l1": [2, 9, 13], "l2": [2, 9, 10], "lp": [2, 9], "regularizationlist": [2, 9, 11], "action_spec": [2, 10], "continuous_act": [2, 10], "copi": [2, 7, 10], "copy_crit": [2, 10], "copy_from_ag": [2, 10], "copy_polici": [2, 10], "decay_continuous_action_vari": [2, 10], "discrete_act": [2, 10], "format_batch_discrete_act": [2, 10], "get_act": [2, 10], "get_continuous_action_covari": [2, 10], "get_default_checkpoints_meta_path": [2, 10], "get_random_act": [2, 10], "observation_spec": [2, 10], "set_continuous_action_variances_with_itr": [2, 10], "set_default_critic_kwarg": [2, 10], "set_default_policy_kwarg": [2, 10], "agentshistorymap": [2, 10], "trajectori": [2, 3, 10, 14], "cumulative_reward": [2, 10], "clear": [2, 5, 10], "cumulative_rewards_as_arrai": [2, 10], "experience_count": [2, 10], "max_abs_reward": [2, 10], "mean_cumulative_reward": [2, 10], "propagate_al": [2, 10], "propagate_and_get_al": [2, 10], "terminals_count": [2, 10], "update_trajectories_": [2, 10], "batchexperi": [2, 10], "experi": [2, 3, 10], "advantag": [2, 10], "discounted_reward": [2, 10], "observ": [2, 10], "replaybuff": [2, 10], "capac": [2, 10], "counter": [2, 10], "empti": [2, 8, 10], "extend": [2, 10], "full": [2, 3, 10], "get_batch_gener": [2, 10], "get_batch_tensor": [2, 10], "get_random_batch": [2, 10], "increase_capac": [2, 10], "increment_count": [2, 10], "load": [2, 3, 5, 7, 10, 11], "reset_count": [2, 10], "save": [2, 3, 5, 7, 10, 11, 12, 13, 14], "set_se": [2, 10, 13], "start_count": [2, 10], "stop_count": [2, 10], "store": [2, 3, 5, 7, 10, 11], "append_and_propag": [2, 10], "compute_horizon_reward": [2, 10], "is_empti": [2, 10], "make_rewards_horizon": [2, 10], "propagate_reward": [2, 10], "propagate_valu": [2, 10], "termin": [2, 10], "terminal_reward": [2, 10], "update_oth": [2, 10], "completioncriteria": [2, 10], "default_criteria": [2, 10], "measur": [2, 10], "min_lesson_length": [2, 10], "threshold": [2, 3, 7, 8, 10, 12], "add_lesson": [2, 10], "channel": [2, 10], "current_lesson": [2, 10], "is_complet": [2, 10], "lesson": [2, 10], "map_repr": [2, 10], "on_iteration_start": [2, 10], "teacher_buff": [2, 10], "teacher": [2, 10], "update_channel": [2, 10], "update_teach": [2, 10], "update_teachers_and_channel": [2, 10], "curriculumenditerationoutput": [2, 10], "lesson_complet": [2, 10], "messag": [2, 10], "unpicklable_attribut": [2, 10], "check_completion_criteria": [2, 10], "set_result": [2, 10], "critic": [2, 10], "get_actions_from_batch": [2, 10], "get_advantages_from_batch": [2, 10], "get_returns_from_batch": [2, 10], "get_values_from_batch": [2, 10], "last_polici": [2, 10], "polici": [2, 10], "update_param": [2, 10], "gentrajectoriesoutput": [2, 10], "agents_history_map": [2, 10], "rlacademi": [2, 10], "cum_rewards_metric_kei": [2, 10], "terminal_rewards_metric_kei": [2, 10], "copy_ag": [2, 10], "env": [2, 7, 10, 12], "generate_trajectori": [2, 10], "reset_agents_history_maps_meta": [2, 10], "set_default_academy_kwarg": [2, 10], "linear": [2, 3, 7, 8, 10, 12], "create_empty_st": [2, 7, 8, 10], "traininghistoriesmap": [2, 10], "report_kei": [2, 10], "plot_histori": [2, 10], "report_histori": [2, 10], "trajectoryrender": [2, 10], "check_simulate_is_need": [2, 10], "render": [2, 10], "simul": [2, 10, 12], "to_fil": [2, 10], "to_gif": [2, 10], "to_mp4": [2, 10], "batch_dict_of_item": [2, 10], "batch_numpy_act": [2, 10], "continuous_actions_distribut": [2, 10], "discounted_cumulative_sum": [2, 10], "env_batch_rend": [2, 10], "env_batch_reset": [2, 10], "env_batch_step": [2, 10], "format_numpy_act": [2, 10], "get_item_from_batch": [2, 10], "get_single_action_spac": [2, 10], "get_single_observation_spac": [2, 10], "obs_batch_to_sequ": [2, 10], "obs_sequence_to_batch": [2, 10], "sample_action_spac": [2, 10], "space_to_continuous_shap": [2, 10], "space_to_spec": [2, 10], "regressiontrain": [2, 11], "currenttrainingst": [2, 11], "batch": [2, 3, 5, 6, 7, 8, 10, 11, 12, 13, 14], "batch_is_train": [2, 11], "batch_loss": [2, 11], "epoch": [2, 3, 10, 11], "epoch_loss": [2, 11], "get_null_st": [2, 11], "hh_batch": [2, 11], "info": [2, 10, 11], "iter": [2, 3, 5, 7, 8, 9, 10, 11, 13, 14], "itr_metr": [2, 3, 11], "n_epoch": [2, 3, 10, 11], "object": [2, 3, 5, 6, 7, 10, 11, 12, 13, 14], "pred_batch": [2, 5, 11], "stop_training_flag": [2, 3, 11], "train_loss": [2, 11], "train_metr": [2, 11], "updat": [2, 3, 5, 8, 9, 10, 11, 13], "val_loss": [2, 3, 11], "val_metr": [2, 11], "x_batch": [2, 5, 11], "y_batch": [2, 3, 5, 11, 13], "apply_criterion_on_batch": [2, 11], "force_overwrit": [2, 10, 11], "get_pred_batch": [2, 11], "load_stat": [2, 3, 5, 11], "state": [2, 3, 5, 6, 7, 8, 10, 11, 12, 13], "update_info_state_": [2, 11], "update_itr_metrics_state_": [2, 11], "update_objects_state_": [2, 11], "update_state_": [2, 11], "trainingst": [2, 11], "constantvaluestransform": [2, 12], "identitytransform": [2, 12], "linearratetospik": [2, 12], "firing_periods_to_spik": [2, 12], "maybesoftmax": [2, 12], "reducefunctanh": [2, 12], "reducemax": [2, 12], "reducemean": [2, 12], "reducesum": [2, 12], "todevic": [2, 12], "totensor": [2, 10, 11, 12], "to_numpi": [2, 12], "to_tensor": [2, 12, 13], "spikesautoencod": [2, 12], "decod": [2, 12], "encod": [2, 5, 6, 10, 11, 12], "meanconv": [2, 12], "alifencod": [2, 12], "lifencod": [2, 12], "spikesencod": [2, 12], "spylifencod": [2, 12], "imgtospik": [2, 12], "firing_periods_to_spikes_clip": [2, 12], "firing_periods_to_spikes_loop": [2, 12], "firing_times_to_spik": [2, 12], "pixels_to_firing_period": [2, 12], "callabletomodulewrapp": [2, 12], "compute_jacobian": [2, 13], "dy_dw_loc": [2, 13], "filter_paramet": [2, 13], "get_contributing_param": [2, 13], "recursive_detach": [2, 13], "recursive_detach_": [2, 13], "vmap": [2, 13], "zero_grad_param": [2, 13], "get_all_params_combin": [2, 13], "get_meta_nam": [2, 13], "get_meta_str": [2, 13], "hash_meta_str": [2, 13], "hash_param": [2, 13], "list_insert_replace_at": [2, 13], "list_of_callable_to_sequenti": [2, 13], "mapping_update_recurs": [2, 13], "maybe_unpack_singleton_dict": [2, 13], "save_param": [2, 13], "sequence_get": [2, 13], "unpack_out_hh": [2, 13], "unpack_singleton_dict": [2, 13], "unpack_tupl": [2, 13], "unpack_x_hh_i": [2, 13], "format_pred_batch": [2, 13], "format_pseudo_rn_se": [2, 13], "unitary_rn_normal_matrix": [2, 13], "legend_without_duplicate_labels_": [2, 13], "plot_confusion_matrix": [2, 13], "connectivityconvent": [2, 5, 8, 13], "itoj": [2, 5, 13], "jtoi": [2, 13], "from_oth": [2, 13], "batchwise_temporal_decai": [2, 13], "batchwise_temporal_filt": [2, 13], "batchwise_temporal_recursive_filt": [2, 13], "clip_tensors_norm_": [2, 13], "linear_decai": [2, 13], "maybe_apply_softmax": [2, 13], "ravel_compose_transform": [2, 13], "visualize_init_final_weight": [2, 14], "umap_pca_report": [2, 14], "mix_report": [2, 14], "anim": [2, 14], "heatmap": [2, 14], "number_ax": [2, 14], "plot_single_timeseries_comparison": [2, 14], "plot_timeseri": [2, 14], "plot_timeseries_comparison": [2, 14], "plot_timeseries_comparison_report": [2, 14], "rigidplot": [2, 14], "visualisedbscan": [2, 14], "visualisekmean": [2, 14], "permute_timeseri": [2, 14], "visualisepca": [2, 14], "scatter_pca": [2, 14], "trajectory_pca": [2, 14], "with_kmean": [2, 14], "visualiseumap": [2, 14], "compute_umap_transform": [2, 14], "reduce_timeseri": [2, 14], "scatter_umap": [2, 14], "trajectory_umap": [2, 14], "class": [2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "int": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "str": [2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "repres": 2, "type": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "constructor": [2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 14], "static": [2, 3, 5, 6, 7, 10, 11, 14], "an": [2, 3, 5, 7, 8, 9, 10, 11, 13, 14], "integ": [2, 3], "return": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "given": [2, 3, 5, 6, 7, 10, 11, 12, 13], "convert": [2, 3, 6, 7, 10, 11, 12, 13], "input": [2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13], "rtype": [2, 7, 12], "valu": [2, 3, 5, 6, 7, 8, 9, 10, 12, 13, 14], "enum": [2, 3, 7, 8, 13], "properti": [2, 3, 6, 7, 8, 10, 11, 12], "No": 2, "featur": [2, 6, 13, 14], "unknown": 2, "etc": [2, 8, 10], "data": [2, 3, 5, 6, 7, 8, 10, 11, 13, 14], "video": 2, "2": [2, 6, 7, 8, 9, 10, 11, 12, 13, 14], "1": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "space": [2, 10, 14], "attribut": [2, 3, 5, 6, 7, 8, 9, 10, 11, 13], "list": [2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "prioriti": [3, 11], "save_st": [3, 5], "bool": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "kwarg": [3, 5, 6, 7, 8, 9, 10, 11, 12, 14], "monitor": 3, "modifi": [3, 4, 5, 7, 8, 9, 10, 12, 13], "process": [3, 5, 7, 11], "phase": [3, 5, 9, 10], "One": [3, 7], "pass": [3, 5, 6, 7, 8, 9, 10, 11, 12, 13], "valid": [3, 5, 10, 11, 12], "call": [3, 5, 6, 7, 8, 9, 10, 11, 12], "order": [3, 5, 7, 8, 11], "execut": 3, "n_batch": [3, 10], "note": [3, 5, 7, 9, 10, 11, 13, 14], "special": 3, "when": [3, 5, 7, 8, 9, 10, 11, 12], "determin": [3, 5, 14], "same": [3, 5, 6, 7, 8, 9, 10, 11, 13], "wai": [3, 5, 8, 10, 11, 14], "__del__": 3, "delet": [3, 10], "befor": [3, 5, 10, 11, 13], "lower": [3, 7, 13], "earlier": [3, 11], "default": [3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14], "10": [3, 7, 8, 9, 10, 11, 14], "50": [3, 5, 8, 14], "option": [3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14], "At": [3, 13], "begin": [3, 7, 8, 9, 13], "revers": [3, 11], "If": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "equal": [3, 5], "end": [3, 5, 7, 8, 9, 10, 13], "last": [3, 5, 6, 7], "manag": [3, 5, 10, 11], "Then": [3, 5, 7, 10, 12], "pickleabl": [3, 5, 10], "dict": [3, 5, 6, 7, 8, 9, 10, 11, 12, 13], "dictionari": [3, 5, 7, 9, 10, 12, 13], "contain": [3, 5, 7, 8, 9, 10, 11, 12], "all": [3, 5, 6, 7, 8, 10, 12, 13, 14], "defin": [3, 5, 6, 7, 8, 9, 10, 12, 13], "moment": [3, 5, 9, 10, 11], "where": [3, 5, 7, 8, 9, 10, 12, 13, 14], "weight": [3, 5, 7, 8, 9, 10, 11, 12, 14], "argument": [3, 5, 6, 7, 8, 9, 10, 11, 12, 14], "keyword": [3, 5, 6, 7, 8, 9, 10, 11, 12, 14], "x": [3, 5, 6, 7, 8, 9, 10, 12, 13, 14], "y": [3, 5, 6, 7, 10, 13, 14], "target": [3, 5, 6, 9, 10, 11, 13, 14], "pred": [3, 5, 10, 13], "bar": [3, 6, 9, 10, 11], "inform": [3, 7, 8, 9, 10, 11, 12, 14], "ani": [3, 5, 6, 7, 8, 10, 11, 12, 13, 14], "must": [3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14], "have": [3, 5, 7, 8, 9, 10, 13, 14], "length": [3, 7, 10, 13, 14], "each": [3, 5, 6, 7, 8, 9, 10, 11, 12], "correspond": [3, 10], "sequenc": [3, 5, 10, 13, 14], "thei": [3, 7, 13], "collat": 3, "those": [3, 5, 10, 11, 14], "prevail": 3, "fals": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "sort": [3, 11, 13], "descend": 3, "self": [3, 7, 8, 10, 12, 13], "meta_path_prefix": 3, "minimise_metr": 3, "save_freq": 3, "save_best_onli": 3, "start_save_at": 3, "": [3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 15], "metadata": 3, "best": [3, 14], "whether": [3, 5, 6, 7, 8, 10, 11, 12, 13, 14], "minimis": 3, "maximis": 3, "curr_best_metr": 3, "float": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "current": [3, 5, 8, 10, 11, 12], "save_path": [3, 10, 13], "itr": [3, 10], "optimizer_state_dict": [3, 5, 10], "model_state_dict": 3, "pt": 3, "initialis": 3, "path": [3, 7, 10, 13], "frequenc": [3, 5], "which": [3, 5, 6, 7, 8, 9, 10, 13, 14], "onli": [3, 5, 7, 8, 9, 10, 11, 12, 13, 14], "print": [3, 6, 7, 8, 10, 11, 12], "out": [3, 13], "trace": [3, 5, 7, 12, 14], "show_best_metric_on_p_bar": 3, "finish": [3, 10], "than": [3, 7, 8, 10, 13], "number": [3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14], "stuff": 3, "gener": [3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14], "filenam": [3, 10, 14], "checkpoints_meta": 3, "mode": [3, 7, 10, 11, 12], "union": [3, 5, 6, 7, 8, 9, 10, 11, 12], "constraint": [3, 9], "met": 3, "add": [3, 5, 11, 14], "state_dict": 3, "other_st": 3, "far": 3, "new_info": 3, "current_training_st": [3, 11], "indic": [3, 6, 14], "mode_nam": 3, "string": [3, 8, 12, 13], "instanc": [3, 6, 7, 8, 10, 12], "minimize_metr": 3, "took": 3, "minim": [3, 5], "maxim": [3, 5], "patienc": 3, "5": [3, 4, 6, 8, 10, 11, 13, 14], "tol": 3, "01": [3, 7], "nan": [3, 5, 13], "0001": 3, "start_with_histori": 3, "stagnat": 3, "consid": [3, 4, 7, 8, 10, 13], "mean": [3, 5, 6, 7, 8, 9, 10, 12, 14], "absolut": [3, 10], "between": [3, 4, 5, 6, 9, 10, 11, 12, 14], "less": [3, 7, 8, 10], "wait": 3, "stop": [3, 10, 11], "toler": 3, "delta_second": 3, "600": 3, "resume_on_load": 3, "current_seconds_count": 3, "second": [3, 6, 7, 14], "resum": 3, "reset": [3, 7, 8, 10, 12], "metric_nam": 3, "callabl": [3, 5, 6, 7, 8, 10, 11, 12, 13], "event_arg": 3, "tupl": [3, 5, 6, 7, 8, 10, 12, 13, 14], "event_kwarg": 3, "do_onc": 3, "reach": [3, 10], "final": [3, 8, 10], "output": [3, 5, 6, 7, 8, 10, 11, 12, 13], "check": [3, 5, 10, 13], "default_valu": 3, "some": 3, "over": [3, 6, 8, 10, 11, 13, 14], "initi": [3, 4, 5, 6, 7, 8, 10, 12, 14], "increas": [3, 7, 8], "figur": [3, 10, 14], "line2d": 3, "figsiz": [3, 14], "linewidth": 3, "width": 3, "plt": [3, 14], "idx": [3, 13], "rais": [3, 5, 6, 13], "valueerror": [3, 13], "bound": 3, "inf": [3, 5, 7, 10, 13], "maximum": [3, 10], "minimum": [3, 10], "dpi": [3, 14], "resolut": 3, "block": [3, 8], "until": [3, 10, 11], "fig": [3, 14], "metric_schedul": 3, "lr_decai": 3, "min_lr": [3, 10], "lr_start": 3, "retain_progress": 3, "schedul": 3, "rate": [3, 5, 8, 10, 11], "next": [3, 10], "multipli": [3, 8, 9], "decai": [3, 8, 10, 11, 13], "also": [3, 5, 7, 8], "cap": 3, "factor": [3, 5, 7, 8, 9, 10, 12, 13], "step": [3, 5, 7, 8, 10, 12, 14], "decreas": [3, 8], "depend": [3, 9, 10, 11], "001": [3, 8, 12], "12": [3, 6, 7, 11, 14], "infer": [3, 7, 8, 14], "automat": [3, 8, 9], "len": 3, "param": [3, 5, 6, 9, 10, 12, 13, 14], "group": [3, 5], "whose": [3, 7, 10, 12], "case": [3, 5, 9, 10, 11, 13], "log_lr_to_histori": 3, "log": [3, 5, 6, 7], "displai": [3, 14], "necessari": 3, "last_metr": 3, "lr_end": 3, "n_step": [3, 12], "linearli": 3, "per": [3, 14], "construcor": 3, "entri": [3, 13], "temp_fold": 3, "temp": 3, "visual": [3, 7], "real": 3, "adn": 3, "temporari": 3, "foresight": 3, "fix": [3, 8, 10], "evalu": [3, 6, 10], "time_steps_multipli": 3, "target_skip_first": 3, "skip": 3, "update_val_loss_freq": 3, "start_intensive_val_at": 3, "fraction": 3, "intens": 3, "perform": [3, 6, 7, 8, 10, 11, 12], "interpret": 3, "hh_memory_size_strategi": 3, "hidden": [3, 5, 7, 8, 10, 11, 12, 13], "memori": [3, 7, 8, 10, 12], "avail": [3, 5, 8, 10, 14], "foresight_time_step": [3, 7], "specifi": [3, 7, 8, 10, 11, 13], "tensor": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13], "inh_ratio": [4, 9], "rho": [4, 8, 9], "99": [4, 10], "inh_first": [4, 9], "seed": [4, 8, 9, 10, 13], "dale": [4, 8, 9, 10], "law": [4, 8, 9, 10], "As": 4, "half": [4, 7, 9, 10, 12], "excitatori": [4, 7, 8, 9], "inhibitori": [4, 7, 8, 9, 10], "connect": [4, 8, 9, 10, 12, 13, 14], "row": 4, "col": 4, "inplac": 4, "ratio": [4, 5, 9, 10], "fulli": [4, 9], "shuffl": [4, 9], "criterion": [5, 6, 10, 11], "appli": [5, 7, 9, 10, 11, 12, 13, 14], "alia": [5, 10, 11], "adamw": 5, "nn": [5, 6, 7, 8, 9, 10, 12, 13], "mseloss": [5, 6], "user": [5, 10, 11], "output_param": 5, "output_lay": [5, 7], "prop": 5, "bellec": [5, 7, 8], "et": [5, 7, 8], "al": [5, 7, 8], "bss": [5, 7, 8], "20": [5, 7, 8], "should": [5, 6, 7, 8, 10, 11, 12, 14], "softmax": [5, 7, 13], "hot": [5, 6, 10, 11], "neg": [5, 6, 7, 8], "likelihood": [5, 6], "target_as_one_hot": [5, 6], "feedback_weight": 5, "xavier_norm": 5, "kaiming_norm": 5, "ones": [5, 7, 10, 12, 13, 14], "orthogon": 5, "rand": 5, "randn": 5, "unitari": 5, "default_kei": 5, "lambda": [5, 7, 9, 10], "try": [5, 8, 10], "find": [5, 13], "look": 5, "parent": 5, "configur": 5, "make": [5, 7, 8, 10, 11, 14], "sure": [5, 7, 8, 10, 11, 14], "param_group": 5, "params_lr": 5, "output_params_lr": 5, "constant": [5, 8, 12], "respect": [5, 7, 10, 12, 13], "signal": [5, 7], "4": [5, 7, 8, 11, 13, 14], "2e": 5, "eligibility_traces_norm_clip_valu": 5, "clip": [5, 10, 13], "norm": [5, 9, 10, 13], "grad_norm_clip_valu": 5, "normal": [5, 7, 12, 13], "avoid": 5, "overflow": 5, "feedbacks_gen_strategi": 5, "feedback": 5, "distribut": [5, 10], "varianc": [5, 6, 10], "xavier": 5, "uniform": 5, "matrix": [5, 7, 8, 9, 10, 13, 14], "replac": [5, 13], "posinf": 5, "neginf": 5, "raise_non_finite_error": 5, "non": [5, 7, 8, 10, 12], "finit": 5, "error": [5, 13], "detect": 5, "further": [5, 14], "todo": [5, 8, 10, 11, 13, 14], "multipl": [5, 7, 9, 10, 11, 12], "sum": [5, 7, 8, 12], "averag": [5, 6], "them": [5, 6, 7, 8, 10, 12, 14], "reduc": [5, 7, 9], "n": [5, 6, 8, 9, 13], "kind": 5, "result": [5, 7, 10, 14], "chang": [5, 8, 13], "equat": [5, 7, 8, 9, 13], "28": [5, 7], "decor": 5, "THe": 5, "meth": [5, 8], "_decorate_hidden_forward": 5, "_decorate_output_forward": 5, "introduc": [5, 10], "specif": [5, 13], "behavior": [5, 10], "For": [5, 8, 10, 11, 13, 14], "t": [5, 7, 8, 9, 10, 13, 14], "achiev": 5, "keep": 5, "storag": 5, "previou": [5, 10, 11], "perman": 5, "zero": [5, 6, 7, 8, 10, 13], "w_out": 5, "b_": 5, "ij": [5, 8], "paper": [5, 8, 10], "identifi": [5, 14], "after": [5, 8, 10, 14], "arg": [5, 7, 8, 9, 10, 11, 12], "remain": [5, 7], "undecor": 5, "seen": 5, "backward_time_step": 5, "is_recurr": 5, "work": [5, 7, 8, 12, 13, 14], "perich": [5, 7], "pa": [5, 7], "curbd": 5, "grad": [5, 13], "zhang": [5, 7], "zsz": [5, 7], "jacobian": [5, 13], "batah": 5, "abmiza": [5, 7], "scaled_jacobian": 5, "scale": [5, 9], "limit": 5, "unfortun": 5, "expect": [5, 7, 13], "want": [5, 7, 10, 11, 14], "pleas": [5, 7, 8, 13, 14], "open": 5, "p_list": 5, "ad": [5, 10, 11, 14], "optimis": 5, "recurr": [5, 7, 8, 10, 12, 13], "inv_corr": 5, "post_activ": 5, "connectivity_convent": [5, 7, 8], "doe": [5, 7], "shape": [5, 6, 7, 8, 12, 13, 14], "b": [5, 7, 13], "f_in": 5, "f_out": 5, "h": [5, 7, 8], "labda": 5, "kappa": [5, 8], "n_in": 5, "n_out": 5, "m": [5, 7, 8, 9, 13], "theta": 5, "ell": 5, "psi": 5, "l": [5, 7, 9], "optim_time_step": 5, "auto_backward_time_steps_ratio": 5, "auto_optim_time_steps_ratio": 5, "alpha": [5, 7, 8, 9, 12, 13, 14], "exponenti": 5, "move": [5, 7, 8, 10, 12], "assertionerror": 5, "metrics_nam": 6, "data_load": 6, "loader": 6, "singl": [6, 7, 8, 10, 12, 13], "classmethod": [6, 8, 13], "associ": 6, "notimplementederror": 6, "child": [6, 7, 8, 10], "unwrap": 6, "ndarrai": [6, 8, 10, 12, 14], "p_bar_posit": [6, 10, 11], "text": [6, 7, 8, 9, 14], "sum_": [6, 8, 9], "y_i": 6, "x_i": [6, 8, 9], "nd": 6, "flatten": 6, "2d": [6, 14], "1d": 6, "mark": 6, "take": [6, 7, 8, 10, 12], "argmax": [6, 10], "document": [6, 10, 11, 14, 15], "detail": [6, 8, 10], "calcul": [6, 10], "nll": 6, "reduct": [6, 9, 12, 14], "frac": [6, 7, 8], "mse": 6, "var": 6, "prevent": 6, "divis": 6, "standard": [6, 8, 10], "deviat": [6, 8, 10], "rmse": 6, "sqrt": 6, "intern": [6, 7, 12], "share": [6, 7, 12], "scriptmodul": [6, 7, 12], "everi": [6, 7, 8, 10, 12], "overridden": [6, 7, 8, 10, 12], "subclass": [6, 7, 8, 10, 12], "although": [6, 7, 8, 10, 12], "recip": [6, 7, 8, 10, 12], "within": [6, 7, 8, 10, 12], "afterward": [6, 7, 8, 10, 12], "instead": [6, 7, 8, 10, 11, 12, 13], "sinc": [6, 7, 8, 10, 12], "former": [6, 7, 8, 10, 12], "care": [6, 7, 8, 10, 11, 12], "run": [6, 7, 8, 10, 12], "regist": [6, 7, 8, 10, 12], "hook": [6, 7, 8, 10, 12], "latter": [6, 7, 8, 10, 12], "silent": [6, 7, 8, 10, 12], "ignor": [6, 7, 8, 10, 12], "descript": [6, 10, 14], "posit": [6, 8, 10, 11, 14], "baselay": [7, 8, 10], "freeze_weight": [7, 8], "get_regularization_loss": [7, 8], "is_ready_to_build": [7, 8], "requires_grad": [7, 8, 10, 13], "reset_regularization_loss": [7, 8], "update_regularization_loss": [7, 8, 10, 11], "baseneuronslay": [7, 8, 10], "force_dale_law": [7, 8, 9, 10], "forward_sign": [7, 8, 10], "forward_weight": [7, 8, 10, 12], "get_forward_sign_paramet": [7, 8], "get_forward_weights_data": [7, 8], "get_forward_weights_paramet": [7, 8], "get_recurrent_sign_paramet": [7, 8], "get_recurrent_weights_data": [7, 8], "get_recurrent_weights_paramet": [7, 8], "get_sign_paramet": [7, 8, 9], "get_weights_paramet": [7, 8], "recurrent_sign": [7, 8, 10], "recurrent_weight": [7, 8, 10], "set_forward_sign_paramet": [7, 8], "set_forward_weights_data": [7, 8], "set_forward_weights_paramet": [7, 8], "set_recurrent_sign_paramet": [7, 8], "set_recurrent_weights_data": [7, 8], "set_recurrent_weights_paramet": [7, 8], "linearrnn": [7, 8], "lilay": [7, 8], "aliflay": [7, 8, 12], "bellecliflay": [7, 8], "izhikevichlay": [7, 8], "spyaliflay": [7, 8], "spyliflay": [7, 8, 12], "aliflayerlpf": [7, 8], "liflayerlpf": [7, 8], "spyaliflayerlpf": [7, 8], "spyliflayerlpf": [7, 8], "wilsoncowancurbdlay": [7, 8], "wilsoncowanlay": [7, 8, 9], "tau": [7, 8, 10, 12], "layertyp": [7, 8], "alif": [7, 8], "izhikevich": [7, 8], "li": [7, 8], "lif": [7, 8, 12], "spyalif": [7, 8], "spyli": [7, 8], "spylif": [7, 8], "input_transform": [7, 12], "output_transform": [7, 12], "moduledict": 7, "dimensionlik": [7, 12], "sizetyp": [7, 8, 10, 12], "wise": [7, 12], "Not": [7, 8], "meta": [7, 10, 13], "ident": [7, 10, 12], "re_outputs_trac": [7, 12], "re_hidden_st": [7, 12], "probabl": [7, 10], "raw": [7, 10, 12, 13], "non_block": [7, 8, 10, 12], "cast": [7, 10, 12, 13], "memory_format": [7, 10, 12], "channels_last": [7, 10, 12], "Its": [7, 10, 12], "signatur": [7, 10, 12], "similar": [7, 8, 10, 12], "accept": [7, 8, 10, 12, 13], "point": [7, 10, 12], "complex": [7, 8, 10, 12], "integr": [7, 8, 10, 12], "unchang": [7, 10, 12], "tri": [7, 10, 12], "asynchron": [7, 10, 12], "host": [7, 10, 12], "possibl": [7, 10, 11, 12, 13], "g": [7, 8, 10, 12], "cpu": [7, 10, 12], "pin": [7, 10, 12], "cuda": [7, 10, 12], "below": [7, 10, 12], "exampl": [7, 9, 10, 11, 12, 13, 14], "place": [7, 10, 12], "desir": [7, 10, 12], "4d": [7, 10, 12], "xdoctest": [7, 10, 12], "ignore_w": [7, 10, 12], "determinist": [7, 10, 12, 14], "1913": [7, 10, 12], "3420": [7, 10, 12], "5113": [7, 10, 12], "2325": [7, 10, 12], "doubl": [7, 10, 12], "in_featur": [7, 10, 12], "out_featur": [7, 10, 12], "bia": [7, 8, 10, 12], "float64": [7, 10, 12], "requir": [7, 10, 12, 13, 14], "torch_doctest_cuda1": [7, 10, 12], "gpu1": [7, 10, 12], "1914": [7, 10, 12], "5112": [7, 10, 12], "2324": [7, 10, 12], "float16": [7, 10, 12], "cdoubl": [7, 10, 12], "3741": [7, 10, 12], "2382": [7, 10, 12], "5593": [7, 10, 12], "4443": [7, 10, 12], "complex128": [7, 10, 12], "3": [7, 8, 9, 10, 11, 12, 13, 14], "6122": [7, 10, 12], "1150": [7, 10, 12], "in_viz": 7, "onnx": 7, "learn_p": 7, "pseudo": [7, 13], "sigmoid": [7, 8], "element": [7, 9, 10, 13], "exp": [7, 8], "odot": 7, "c": 7, "d": [7, 13], "beta": [7, 8], "gamma": [7, 8, 10], "delta": [7, 8], "hyperbol": 7, "tangent": 7, "tanh": [7, 8, 10, 12], "construct": 7, "stack": 7, "input_lay": 7, "hidden_lay": 7, "modulelist": [7, 13], "structur": 7, "inputs_lay": 7, "datum": 7, "its": [7, 8], "input_nam": 7, "layer_nam": 7, "task": 7, "sequentialmodel": 7, "futur": [7, 10, 11], "word": [7, 9, 10, 11], "fewer": 7, "fed": 7, "memory_s": 7, "otherwis": [7, 8, 10, 13], "infin": [7, 13], "don": 7, "intermedi": 7, "memory_devic": 7, "slow": [7, 13], "down": 7, "init_hidden_st": 7, "condit": [7, 14], "time_step": [7, 13], "forward_sight_time_step": 7, "AND": 7, "time_seri": 7, "t_0": 7, "t_1": 7, "t_n": 7, "t_2": 7, "t_3": 7, "pad": [7, 12], "h_0": 7, "hidden_size_0": 7, "h_k": 7, "hidden_size_k": 7, "lambda_func": 7, "oper": [7, 12], "correctli": 7, "return_hidden_st": 7, "trunc_time_step": 7, "differenti": [7, 8], "version": [7, 8, 10, 11, 13], "heavisid": [7, 8], "doc": 7, "approxim": 7, "psi_j": 7, "gamma_": 7, "pd": 7, "v_": [7, 8], "th": [7, 8], "left": [7, 8, 9, 12, 13], "vert": 7, "v_j": [7, 8], "a_j": [7, 8], "right": [7, 8, 9, 12, 13, 14], "miss": 7, "batah_modified_2010": 7, "guillaum": 7, "franz": 7, "scherr": 7, "anand": 7, "subramonei": 7, "elia": 7, "hajek": 7, "darjan": 7, "salaj": 7, "robert": 7, "legenstein": 7, "wolfgang": 7, "maass": 7, "solut": [7, 8], "dilemma": [7, 8], "natur": 7, "commun": [7, 11], "11": [7, 11], "3625": 7, "2020": [7, 8], "url": 7, "www": 7, "s41467": 7, "020": 7, "17236": 7, "visit": 7, "2021": 7, "18": [7, 11], "doi": 7, "1038": 7, "gro88": [7, 8], "stephen": 7, "grossberg": [7, 8], "nonlinear": [7, 8], "principl": [7, 8], "mechan": [7, 8], "architectur": [7, 8], "17": [7, 11], "61": 7, "1988": 7, "sciencedirect": 7, "scienc": 7, "pii": 7, "0893608088900214": 7, "org": [7, 10, 13, 14], "1016": 7, "0893": 7, "6080": 7, "88": 7, "90021": 7, "izh07": [7, 8], "eugen": 7, "system": 7, "mit": 7, "press": 7, "2007": 7, "isbn": 7, "978": 7, "262": 7, "09043": 7, "8": [7, 9, 11, 14], "nmz19": [7, 8], "emr": 7, "o": 7, "neftci": [7, 8], "hesham": 7, "mostafa": 7, "friedemann": 7, "power": [7, 8], "ieee": 7, "magazin": 7, "36": [7, 8], "6": [7, 8, 11, 13], "51": 7, "63": 7, "2019": 7, "confer": 7, "1109": 7, "msp": 7, "2931595": 7, "pdd22": [7, 8], "vincent": 7, "painchaud": [7, 8], "nicola": 7, "doyon": 7, "beyond": [7, 8], "oscil": [7, 8], "chao": [7, 8], "inhibit": [7, 8], "arxiv": [7, 10], "ab": [7, 10], "2204": 7, "00583": 7, "48550": 7, "matthew": 7, "charlott": 7, "arlt": 7, "sofia": 7, "soar": 7, "megan": 7, "young": 7, "clayton": 7, "mosher": 7, "juri": 7, "minxha": 7, "carter": 7, "ueli": 7, "rutishaus": 7, "peter": 7, "rudebeck": 7, "christoph": 7, "harvei": 7, "kanaka": 7, "rajan": 7, "brain": 7, "wide": 7, "interact": [7, 8], "423348": 7, "section": 7, "1101": 7, "423348v2": 7, "06": [7, 12], "vra05": [7, 8], "tim": 7, "vogel": [7, 8], "abbott": 7, "annual": 7, "review": 7, "357": 7, "376": 7, "2005": 7, "pmid": 7, "16022600": 7, "1146": 7, "annurev": 7, "neuro": 7, "061604": 7, "135637": 7, "wc72": [7, 8], "hugh": 7, "jack": 7, "local": [7, 8], "popul": [7, 8], "biophys": 7, "24": 7, "1972": 7, "chunyuan": 7, "qi": 7, "song": 7, "hui": 7, "zhou": 7, "yigui": 7, "ou": 7, "hongyao": 7, "deng": 7, "laurenc": 7, "tianruo": 7, "yang": 7, "revisit": 7, "2109": 7, "03220": 7, "ctx": 7, "functionctx": 7, "grad_output": [7, 13], "context": 7, "retriev": 7, "05": 7, "deriv": [7, 8, 13], "shown": [7, 9], "2018": 7, "approx": [7, 8], "thr": [7, 12], "enumer": [7, 8], "els": [7, 13], "receiv": 7, "save_for_backward": 7, "start_axi": 7, "end_axi": 7, "inherit": 7, "built": 8, "freez": 8, "readi": [8, 10], "warn": 8, "caus": 8, "leak": 8, "increment": [8, 10], "use_rec_eye_mask": [8, 10], "dt": [8, 10, 12, 14], "import": [8, 9, 10, 11], "mth": [8, 10], "ey": [8, 10, 12], "mask": [8, 10], "rec_mask": [8, 10], "diagon": [8, 10], "hh_init": [8, 10], "hh_init_mu": [8, 10], "hh_init_std": [8, 10], "hh_init_se": [8, 10], "forc": [8, 10, 11, 14], "vector": [8, 10, 13], "ration": [8, 10], "sign_activ": [8, 10], "sign": [8, 9, 10], "attr": [8, 10], "convent": [8, 13], "extra": [8, 12], "represent": [8, 12, 13], "custom": [8, 12], "re": [8, 12], "own": [8, 12], "multi": [8, 12], "w_": [8, 9], "b_j": 8, "tau_": 8, "mem": 8, "synapt": [8, 13], "potenti": 8, "rec": 8, "bias_weight": 8, "form": [8, 14], "membran": [8, 12], "variant": 8, "greater": [8, 13], "express": 8, "euler": 8, "i_": 8, "syn": 8, "ext": 8, "sum_i": 8, "being": [8, 13], "variabl": [8, 14], "describ": [8, 10], "definit": 8, "slope": 8, "textit": 8, "exactli": 8, "vari": [8, 13], "inde": 8, "puls": 8, "back": 8, "slightli": 8, "denot": 8, "z_j": 8, "redefin": 8, "27": 8, "42": 8, "43": 8, "amplif": 8, "typic": [8, 14], "equival": 8, "tau_a": 8, "tau_m": 8, "33": 8, "gain": 8, "spikes_regularization_factor": 8, "274": 8, "usabl": 8, "impuls": 8, "realist": 8, "exce": 8, "found": 8, "32": 8, "z_i": 8, "34": 8, "cdot": [8, 9], "geq": 8, "bye": [8, 13], "40": 8, "37": 8, "47": 8, "48": 8, "38": 8, "39": 8, "learning_typ": 8, "learningtyp": 8, "discretis": 8, "tau_syn": 8, "tau_mem": 8, "higher": [8, 11, 14], "tend": 8, "45": 8, "46": 8, "49": 8, "lpf": 8, "filter": [8, 12, 13], "low": [8, 13], "mathcal": [8, 9, 13], "lpf_alpha": 8, "np": [8, 10], "descent": 8, "std_weight": 8, "instabl": 8, "mu": 8, "mean_mu": 8, "learn_mu": 8, "std_mu": 8, "rnn": 8, "unit": [8, 10, 12], "learn_tau": 8, "transit": [8, 10], "mean_r": 8, "learn_r": 8, "std_r": 8, "remark": 8, "becom": 8, "fire": [8, 12], "calcium": 8, "2n": 8, "read": 8, "mani": 8, "explor": 8, "never": 8, "reference_weight": 9, "dale_kwarg": 9, "compar": 9, "coeffici": 9, "regularis": 9, "nutshel": 9, "stipul": 9, "either": [9, 14], "energi": 9, "tr": 9, "w": [9, 13], "ref": 9, "favor": 9, "cancel": 9, "exc_target_ratio": 9, "9": [9, 10, 11, 13], "inh_target_ratio": 9, "parameterlist": [9, 13], "0d": 9, "observation_spac": 10, "action_spac": 10, "behavior_nam": 10, "policy_predict_method": 10, "policy_kwarg": 10, "critic_predict_method": 10, "critic_kwarg": 10, "baseag": 10, "gym": 10, "environ": 10, "action": 10, "default_hidden_unit": 10, "default_activ": 10, "relu": 10, "default_output_activ": 10, "default_dropout": 10, "dropout": 10, "default_n_valu": 10, "re_format": 10, "logit": 10, "assum": [10, 12, 13, 14], "fragment": 10, "smaller": 10, "reformat": 10, "prob": 10, "one_hot": 10, "ob": 10, "discret": 10, "as_numpi": 10, "numpi": [10, 12], "arrai": 10, "n_sampl": 10, "map": [10, 13], "id": [10, 13], "cumul": 10, "reward": 10, "next_observ": 10, "next_ob": 10, "rewards_horizon": 10, "flag": 10, "use_prior": 10, "replai": 10, "oldest": 10, "lmbda": 10, "others_list": 10, "namedtupl": [10, 11], "criteria": 10, "completion_criteria": 10, "teacher_strength": 10, "_teacher": 10, "_channel": 10, "proxim": 10, "1707": 10, "06347": 10, "clip_ratio": 10, "smooth": [10, 14], "discount": 10, "gae_lambda": 10, "estim": 10, "gae": 10, "critic_weight": 10, "entropy_weight": 10, "entropi": 10, "critic_criterion": 10, "bug": 10, "minu": 10, "recommend": 10, "doesn": 10, "max_grad_norm": 10, "predict_method": [10, 11], "cum_reward": 10, "deprec": [10, 11], "separ": [10, 11], "regularization_optim": [10, 11], "control": [10, 11], "independ": [10, 11], "well": [10, 11], "twice": [10, 11], "reg_lr": [10, 11], "weight_decai": [10, 11], "exec_metrics_on_train": [10, 11], "x_transform": [10, 11], "y_transform": [10, 11], "long": [10, 11], "n_trajectori": 10, "n_experi": 10, "chosen": 10, "sampl": [10, 14], "choos": 10, "Will": 10, "current_st": 10, "academi": 10, "fit": 10, "close_env": 10, "init_lr": 10, "init_epsilon": 10, "epsilon_decai": 10, "min_epsilon": 10, "update_freq": 10, "curriculum_strength": 10, "strength": 10, "p_bar_leav": [10, 11], "train_dataload": [10, 11], "val_dataload": [10, 11], "nomenclatur": [10, 11], "usual": [10, 11], "elsewher": [10, 11], "constitut": [10, 11], "nuanc": [10, 11], "term": [10, 11], "realli": [10, 11], "overwrit": [10, 11], "Be": [10, 11], "destroi": [10, 11], "tqdm": [10, 11], "leav": [10, 11], "lesson_idx": 10, "history_nam": 10, "funcanim": 10, "file_path": 10, "fp": [10, 14], "30": [10, 14], "covari": 10, "axi": [10, 14], "flatten_spac": 10, "extrem": 11, "access": 11, "person": 11, "total": [11, 13], "7": [11, 13], "16": 11, "19": 11, "14": 11, "13": [11, 14], "15": 11, "batch_wis": 12, "data_min": 12, "data_max": 12, "firing_period": 12, "dim": [12, 13], "reduce_func": 12, "seq_len": 12, "hidden_s": 12, "float32": 12, "n_encoder_step": 12, "encoder_typ": 12, "kernel_s": 12, "learn_alpha": 12, "learn_kernel": 12, "pad_valu": 12, "pad_mod": 12, "convolut": 12, "kernel": 12, "side": 12, "spikes_layer_kwarg": 12, "spikes_layer_typ": 12, "t_max": 12, "02": 12, "use_period": 12, "07": 12, "charg": 12, "small": [12, 14], "firing_tim": 12, "latenc": 12, "pixel": 12, "callable_object": 12, "medium": 13, "monadsblog": 13, "e5e2b7e60140": 13, "tutori": 13, "beginn": 13, "blitz": 13, "autograd_tutori": 13, "html": [13, 14], "sphx": 13, "glr": 13, "py": 13, "retain_graph": 13, "allow_unus": 13, "z": [13, 14], "graph": 13, "retain": 13, "top_level": 13, "contribut": 13, "taken": 13, "stackoverflow": 13, "question": 13, "72301628": 13, "dont": 13, "top": 13, "level": 13, "params_spac": 13, "combin": 13, "__obj": 13, "1_2_3": 13, "1_b": 13, "2_1": 13, "2_3": 13, "customobject": 13, "def": 13, "__repr__": 13, "my_repr": 13, "4_5_6_7_my_repr": 13, "hash_mth": 13, "md5": 13, "out_typ": 13, "hex": 13, "hash": 13, "persist": 13, "obtain": [13, 14], "hashlib": 13, "algorithms_avail": 13, "old": 13, "kept": 13, "compat": 13, "hash_dict": 13, "__list": 13, "callable_list": 13, "u": 13, "3232943": 13, "nest": 13, "depth": 13, "wil": 13, "singleton": 13, "unpack": 13, "__sequenc": 13, "expected_length": 13, "fill_valu": 13, "fill_method": 13, "middl": 13, "aggregate_method": 13, "aggregate_typ": 13, "pack": 13, "fill": 13, "aggreg": 13, "__input": 13, "raw_pred_batch": 13, "hidden_st": 13, "cm": 13, "pre": 13, "post": 13, "along": 13, "tempor": 13, "label": 13, "eqn": 13, "qty": 13, "max_norm": 13, "norm_typ": 13, "error_if_nonfinit": 13, "clone": 13, "clip_grad_norm_": 13, "concaten": 13, "thrown": 13, "view": 13, "init_valu": 13, "min_valu": 13, "decay_valu": 13, "current_itr": 13, "compos": 13, "initial_wight": 14, "final_weight": 14, "pred_viz": 14, "target_viz": 14, "timeseri": 14, "apply_zscor": 14, "cluster": 14, "rigid": 14, "scatter": 14, "dimension": 14, "time_interv": 14, "node_s": 14, "file_extens": 14, "node": 14, "layout": 14, "fruchterman": 14, "reingold": 14, "direct": 14, "networkx": 14, "stabl": 14, "draw": 14, "spring_layout": 14, "frame": 14, "plai": 14, "interv": 14, "millisecond": 14, "densiti": 14, "applic": 14, "imagemagick": 14, "mp4": 14, "gif": 14, "show_axi": 14, "interpol": 14, "nearest": 14, "cmap": 14, "rdbu_r": 14, "colormap": 14, "rang": 14, "colorbar": 14, "300": 14, "num_typ": 14, "numer": 14, "coordin": 14, "transax": 14, "fontsiz": 14, "font": 14, "fontweight": 14, "bold": 14, "set_titl": 14, "exist": 14, "overwritten": 14, "feature_index": 14, "n_spikes_step": 14, "comparison": 14, "n_time_step": 14, "n_featur": 14, "latent": 14, "n_spike": 14, "legend_loc": 14, "locat": 14, "legend": 14, "upper": 14, "traces_to_show": 14, "error_quad": 14, "most_var": 14, "worst": 14, "typical_": 14, "closest": 14, "pvar": 14, "ep": 14, "25": 14, "min_sampl": 14, "generalis": 14, "n_cluster": 14, "random_st": 14, "n_neuron": 14, "score": 14, "centroid": 14, "n_pc": 14, "pca": 14, "princip": 14, "compon": 14, "pc": 14, "color_sampl": 14, "3d": 14, "alwai": 14, "color": 14, "with_smooth": 14, "degre": 14, "polynomi": 14, "divid": 14, "pca_spac": 14, "pca_wrt_tim": 14, "n_neighbor": 14, "min_dist": 14, "n_compon": 14, "umap_transform": 14, "umap": 14, "clean": 14, "up": 14, "umap_spac": 14, "umap_wrt_tim": 14}, "objects": {"": [[2, 0, 0, "-", "neurotorch"]], "neurotorch": [[3, 0, 0, "-", "callbacks"], [2, 0, 0, "-", "dimension"], [4, 0, 0, "-", "init"], [5, 0, 0, "-", "learning_algorithms"], [6, 0, 0, "-", "metrics"], [7, 0, 0, "-", "modules"], [9, 0, 0, "-", "regularization"], [10, 0, 0, "-", "rl"], [11, 0, 0, "-", "trainers"], [12, 0, 0, "-", "transforms"], [13, 0, 0, "-", "utils"], [14, 0, 0, "-", "visualisation"]], "neurotorch.callbacks": [[3, 1, 1, "", "ForesightTimeStepUpdaterOnTarget"], [3, 0, 0, "-", "base_callback"], [3, 0, 0, "-", "checkpoints_manager"], [3, 0, 0, "-", "convergence"], [3, 0, 0, "-", "early_stopping"], [3, 0, 0, "-", "events"], [3, 0, 0, "-", "history"], [3, 0, 0, "-", "lr_schedulers"], [3, 0, 0, "-", "training_visualization"]], "neurotorch.callbacks.ForesightTimeStepUpdaterOnTarget": [[3, 2, 1, "", "DEFAULT_PRIORITY"], [3, 3, 1, "", "__init__"], [3, 3, 1, "", "get_hh_memory_size_from_y_batch"], [3, 3, 1, "", "on_batch_begin"], [3, 3, 1, "", "on_batch_end"], [3, 3, 1, "", "on_train_end"], [3, 3, 1, "", "start"]], "neurotorch.callbacks.base_callback": [[3, 1, 1, "", "BaseCallback"], [3, 1, 1, "", "CallbacksList"]], "neurotorch.callbacks.base_callback.BaseCallback": [[3, 2, 1, "", "DEFAULT_HIGH_PRIORITY"], [3, 2, 1, "", "DEFAULT_LOW_PRIORITY"], [3, 2, 1, "", "DEFAULT_MEDIUM_PRIORITY"], [3, 2, 1, "", "DEFAULT_PRIORITY"], [3, 2, 1, "", "UNPICKEABLE_ATTRIBUTES"], [3, 3, 1, "", "__init__"], [3, 3, 1, "", "close"], [3, 3, 1, "", "extra_repr"], [3, 3, 1, "", "get_checkpoint_state"], [3, 2, 1, "", "instance_counter"], [3, 3, 1, "", "load_checkpoint_state"], [3, 3, 1, "", "on_batch_begin"], [3, 3, 1, "", "on_batch_end"], [3, 3, 1, "", "on_epoch_begin"], [3, 3, 1, "", "on_epoch_end"], [3, 3, 1, "", "on_iteration_begin"], [3, 3, 1, "", "on_iteration_end"], [3, 3, 1, "", "on_optimization_begin"], [3, 3, 1, "", "on_optimization_end"], [3, 3, 1, "", "on_pbar_update"], [3, 3, 1, "", "on_train_begin"], [3, 3, 1, "", "on_train_end"], [3, 3, 1, "", "on_trajectory_end"], [3, 3, 1, "", "on_validation_batch_begin"], [3, 3, 1, "", "on_validation_batch_end"], [3, 3, 1, "", "on_validation_begin"], [3, 3, 1, "", "on_validation_end"], [3, 3, 1, "", "start"]], "neurotorch.callbacks.base_callback.CallbacksList": [[3, 3, 1, "", "__init__"], [3, 3, 1, "", "append"], [3, 3, 1, "", "close"], [3, 3, 1, "", "get_checkpoint_state"], [3, 3, 1, "", "load_checkpoint_state"], [3, 3, 1, "", "on_batch_begin"], [3, 3, 1, "", "on_batch_end"], [3, 3, 1, "", "on_epoch_begin"], [3, 3, 1, "", "on_epoch_end"], [3, 3, 1, "", "on_iteration_begin"], [3, 3, 1, "", "on_iteration_end"], [3, 3, 1, "", "on_optimization_begin"], [3, 3, 1, "", "on_optimization_end"], [3, 3, 1, "", "on_pbar_update"], [3, 3, 1, "", "on_train_begin"], [3, 3, 1, "", "on_train_end"], [3, 3, 1, "", "on_trajectory_end"], [3, 3, 1, "", "on_validation_batch_begin"], [3, 3, 1, "", "on_validation_batch_end"], [3, 3, 1, "", "on_validation_begin"], [3, 3, 1, "", "on_validation_end"], [3, 3, 1, "", "remove"], [3, 3, 1, "", "sort_callbacks_"], [3, 3, 1, "", "start"]], "neurotorch.callbacks.checkpoints_manager": [[3, 1, 1, "", "CheckpointManager"], [3, 1, 1, "", "LoadCheckpointMode"]], "neurotorch.callbacks.checkpoints_manager.CheckpointManager": [[3, 2, 1, "", "CHECKPOINTS_META_SUFFIX"], [3, 2, 1, "", "CHECKPOINT_BEST_KEY"], [3, 2, 1, "", "CHECKPOINT_FILE_STRUCT"], [3, 2, 1, "", "CHECKPOINT_ITRS_KEY"], [3, 2, 1, "", "CHECKPOINT_ITR_KEY"], [3, 2, 1, "", "CHECKPOINT_METRICS_KEY"], [3, 2, 1, "", "CHECKPOINT_OPTIMIZER_STATE_DICT_KEY"], [3, 2, 1, "", "CHECKPOINT_SAVE_PATH_KEY"], [3, 2, 1, "", "CHECKPOINT_STATE_DICT_KEY"], [3, 2, 1, "", "CHECKPOINT_TRAINING_HISTORY_KEY"], [3, 2, 1, "", "DEFAULT_PRIORITY"], [3, 2, 1, "", "SAVE_EXT"], [3, 2, 1, "", "SUFFIX_SEP"], [3, 3, 1, "", "__init__"], [3, 4, 1, "", "checkpoints_meta_path"], [3, 3, 1, "", "close"], [3, 3, 1, "", "extra_repr"], [3, 3, 1, "", "get_checkpoint_filename"], [3, 3, 1, "", "get_save_name_from_checkpoints"], [3, 3, 1, "", "load_checkpoint"], [3, 2, 1, "", "load_mode_to_suffix"], [3, 3, 1, "", "on_iteration_end"], [3, 3, 1, "", "on_pbar_update"], [3, 3, 1, "", "save_checkpoint"], [3, 3, 1, "", "save_checkpoints_meta"], [3, 3, 1, "", "save_on"], [3, 3, 1, "", "start"]], "neurotorch.callbacks.checkpoints_manager.LoadCheckpointMode": [[3, 2, 1, "", "BEST_ITR"], [3, 2, 1, "", "LAST_ITR"], [3, 3, 1, "", "from_str"]], "neurotorch.callbacks.convergence": [[3, 1, 1, "", "ConvergenceTimeGetter"]], "neurotorch.callbacks.convergence.ConvergenceTimeGetter": [[3, 3, 1, "", "__init__"], [3, 3, 1, "", "close"], [3, 3, 1, "", "load_checkpoint_state"], [3, 3, 1, "", "on_iteration_end"], [3, 3, 1, "", "save_on"], [3, 3, 1, "", "start"]], "neurotorch.callbacks.early_stopping": [[3, 1, 1, "", "EarlyStopping"], [3, 1, 1, "", "EarlyStoppingOnNaN"], [3, 1, 1, "", "EarlyStoppingOnStagnation"], [3, 1, 1, "", "EarlyStoppingOnTimeLimit"], [3, 1, 1, "", "EarlyStoppingThreshold"]], "neurotorch.callbacks.early_stopping.EarlyStopping": [[3, 3, 1, "", "__init__"]], "neurotorch.callbacks.early_stopping.EarlyStoppingOnNaN": [[3, 2, 1, "", "DEFAULT_PRIORITY"], [3, 3, 1, "", "__init__"], [3, 3, 1, "", "extra_repr"], [3, 3, 1, "", "on_iteration_end"]], "neurotorch.callbacks.early_stopping.EarlyStoppingOnStagnation": [[3, 2, 1, "", "DEFAULT_PRIORITY"], [3, 3, 1, "", "__init__"], [3, 3, 1, "", "extra_repr"], [3, 3, 1, "", "get_value"], [3, 3, 1, "", "on_iteration_end"], [3, 3, 1, "", "start"]], "neurotorch.callbacks.early_stopping.EarlyStoppingOnTimeLimit": [[3, 2, 1, "", "CURRENT_SECONDS_COUNT_KEY"], [3, 2, 1, "", "DELTA_SECONDS_KEY"], [3, 3, 1, "", "__init__"], [3, 3, 1, "", "extra_repr"], [3, 3, 1, "", "get_checkpoint_state"], [3, 3, 1, "", "load_checkpoint_state"], [3, 3, 1, "", "on_iteration_end"], [3, 3, 1, "", "start"], [3, 3, 1, "", "update_flags"]], "neurotorch.callbacks.early_stopping.EarlyStoppingThreshold": [[3, 3, 1, "", "__init__"], [3, 3, 1, "", "on_iteration_end"]], "neurotorch.callbacks.events": [[3, 1, 1, "", "EventOnMetricThreshold"]], "neurotorch.callbacks.events.EventOnMetricThreshold": [[3, 3, 1, "", "__init__"], [3, 3, 1, "", "on_iteration_end"], [3, 3, 1, "", "on_pbar_update"]], "neurotorch.callbacks.history": [[3, 1, 1, "", "TrainingHistory"]], "neurotorch.callbacks.history.TrainingHistory": [[3, 2, 1, "", "DEFAULT_PRIORITY"], [3, 3, 1, "", "__init__"], [3, 3, 1, "", "append"], [3, 3, 1, "", "concat"], [3, 3, 1, "", "create_plot"], [3, 3, 1, "", "extra_repr"], [3, 3, 1, "", "get"], [3, 3, 1, "", "get_item_at"], [3, 3, 1, "", "insert"], [3, 3, 1, "", "items"], [3, 3, 1, "", "keys"], [3, 3, 1, "", "max"], [3, 3, 1, "", "max_item"], [3, 3, 1, "", "min"], [3, 3, 1, "", "min_item"], [3, 3, 1, "", "on_iteration_end"], [3, 3, 1, "", "plot"], [3, 3, 1, "", "update_fig"]], "neurotorch.callbacks.lr_schedulers": [[3, 1, 1, "", "LRSchedulerOnMetric"], [3, 1, 1, "", "LinearLRScheduler"]], "neurotorch.callbacks.lr_schedulers.LRSchedulerOnMetric": [[3, 2, 1, "", "DEFAULT_LR_START"], [3, 2, 1, "", "DEFAULT_MIN_LR"], [3, 3, 1, "", "__init__"], [3, 3, 1, "", "extra_repr"], [3, 3, 1, "", "on_iteration_end"], [3, 3, 1, "", "on_pbar_update"], [3, 3, 1, "", "start"], [3, 3, 1, "", "update_step"]], "neurotorch.callbacks.lr_schedulers.LinearLRScheduler": [[3, 2, 1, "", "DEFAULT_LR_START"], [3, 2, 1, "", "DEFAULT_MIN_LR"], [3, 3, 1, "", "__init__"], [3, 3, 1, "", "extra_repr"], [3, 3, 1, "", "on_iteration_end"], [3, 3, 1, "", "start"]], "neurotorch.callbacks.training_visualization": [[3, 1, 1, "", "TrainingHistoryVisualizationCallback"]], "neurotorch.callbacks.training_visualization.TrainingHistoryVisualizationCallback": [[3, 3, 1, "", "__init__"], [3, 3, 1, "", "close"], [3, 3, 1, "", "on_iteration_end"], [3, 3, 1, "", "start"]], "neurotorch.dimension": [[2, 1, 1, "", "Dimension"], [2, 1, 1, "", "DimensionProperty"], [2, 1, 1, "", "Size"]], "neurotorch.dimension.Dimension": [[2, 3, 1, "", "__init__"], [2, 2, 1, "", "dtype"], [2, 3, 1, "", "from_int"], [2, 3, 1, "", "from_int_or_dimension"], [2, 2, 1, "", "name"], [2, 2, 1, "", "size"]], "neurotorch.dimension.DimensionProperty": [[2, 2, 1, "", "NONE"], [2, 2, 1, "", "SPATIAL"], [2, 2, 1, "", "TIME"]], "neurotorch.dimension.Size": [[2, 3, 1, "", "__init__"]], "neurotorch.init": [[4, 5, 1, "", "dale_"]], "neurotorch.learning_algorithms": [[5, 0, 0, "-", "bptt"], [5, 0, 0, "-", "eprop"], [5, 0, 0, "-", "learning_algorithm"], [5, 0, 0, "-", "rls"], [5, 0, 0, "-", "tbptt"]], "neurotorch.learning_algorithms.bptt": [[5, 1, 1, "", "BPTT"]], "neurotorch.learning_algorithms.bptt.BPTT": [[5, 2, 1, "", "CHECKPOINT_OPTIMIZER_STATE_DICT_KEY"], [5, 2, 1, "", "DEFAULT_OPTIMIZER_CLS"], [5, 2, 1, "", "OPTIMIZER_PARAMS_GROUP_IDX"], [5, 3, 1, "", "__init__"], [5, 3, 1, "", "apply_criterion"], [5, 3, 1, "", "create_default_optimizer"], [5, 3, 1, "", "extra_repr"], [5, 3, 1, "", "get_checkpoint_state"], [5, 3, 1, "", "initialize_param_groups"], [5, 3, 1, "", "load_checkpoint_state"], [5, 3, 1, "", "on_optimization_begin"], [5, 3, 1, "", "on_optimization_end"], [5, 3, 1, "", "on_validation_batch_begin"], [5, 3, 1, "", "start"]], "neurotorch.learning_algorithms.eprop": [[5, 1, 1, "", "Eprop"]], "neurotorch.learning_algorithms.eprop.Eprop": [[5, 2, 1, "", "CHECKPOINT_FEEDBACK_WEIGHTS_KEY"], [5, 2, 1, "", "CHECKPOINT_OPTIMIZER_STATE_DICT_KEY"], [5, 2, 1, "", "DEFAULT_FEEDBACKS_GEN_STRATEGY"], [5, 2, 1, "", "DEFAULT_FEEDBACKS_STR_NORM_CLIP_VALUE"], [5, 2, 1, "", "DEFAULT_OPTIMIZER_CLS"], [5, 2, 1, "", "DEFAULT_Y_KEY"], [5, 2, 1, "", "FEEDBACKS_GEN_FUNCS"], [5, 2, 1, "", "OPTIMIZER_OUTPUT_PARAMS_GROUP_IDX"], [5, 2, 1, "", "OPTIMIZER_PARAMS_GROUP_IDX"], [5, 3, 1, "", "__init__"], [5, 3, 1, "", "compute_errors"], [5, 3, 1, "", "compute_learning_signals"], [5, 3, 1, "", "decorate_forwards"], [5, 3, 1, "", "eligibility_traces_zeros_"], [5, 3, 1, "", "get_checkpoint_state"], [5, 3, 1, "", "initialize_feedback_weights"], [5, 3, 1, "", "initialize_layers"], [5, 3, 1, "", "initialize_output_layers"], [5, 3, 1, "", "initialize_output_params"], [5, 3, 1, "", "initialize_param_groups"], [5, 3, 1, "", "initialize_params"], [5, 3, 1, "", "load_checkpoint_state"], [5, 3, 1, "", "make_feedback_weights"], [5, 3, 1, "", "on_batch_begin"], [5, 3, 1, "", "on_batch_end"], [5, 3, 1, "", "start"], [5, 3, 1, "", "update_grads"]], "neurotorch.learning_algorithms.learning_algorithm": [[5, 1, 1, "", "LearningAlgorithm"]], "neurotorch.learning_algorithms.learning_algorithm.LearningAlgorithm": [[5, 2, 1, "", "DEFAULT_PRIORITY"], [5, 3, 1, "", "__init__"]], "neurotorch.learning_algorithms.rls": [[5, 1, 1, "", "RLS"]], "neurotorch.learning_algorithms.rls.RLS": [[5, 2, 1, "", "CHECKPOINT_OPTIMIZER_STATE_DICT_KEY"], [5, 2, 1, "", "CHECKPOINT_P_STATES_DICT_KEY"], [5, 3, 1, "", "__init__"], [5, 3, 1, "", "curbd_step_method"], [5, 3, 1, "", "get_checkpoint_state"], [5, 3, 1, "", "grad_mth_step"], [5, 3, 1, "", "initialize_P_list"], [5, 3, 1, "", "inputs_mth_step"], [5, 3, 1, "", "jacobian_mth_step"], [5, 3, 1, "", "load_checkpoint_state"], [5, 3, 1, "", "on_batch_begin"], [5, 3, 1, "", "on_batch_end"], [5, 3, 1, "", "on_optimization_begin"], [5, 3, 1, "", "optimization_step"], [5, 3, 1, "", "outputs_mth_step"], [5, 3, 1, "", "scaled_jacobian_mth_step"], [5, 3, 1, "", "start"]], "neurotorch.learning_algorithms.tbptt": [[5, 1, 1, "", "TBPTT"]], "neurotorch.learning_algorithms.tbptt.TBPTT": [[5, 3, 1, "", "__init__"], [5, 3, 1, "", "close"], [5, 3, 1, "", "decorate_forwards"], [5, 3, 1, "", "extra_repr"], [5, 3, 1, "", "initialize_layers"], [5, 3, 1, "", "initialize_output_layers"], [5, 3, 1, "", "on_batch_begin"], [5, 3, 1, "", "on_batch_end"], [5, 3, 1, "", "on_optimization_begin"], [5, 3, 1, "", "on_optimization_end"], [5, 3, 1, "", "start"], [5, 3, 1, "", "undecorate_forwards"]], "neurotorch.metrics": [[6, 0, 0, "-", "base"], [6, 0, 0, "-", "classification"], [6, 0, 0, "-", "losses"], [6, 0, 0, "-", "regression"]], "neurotorch.metrics.base": [[6, 1, 1, "", "BaseMetrics"]], "neurotorch.metrics.base.BaseMetrics": [[6, 2, 1, "", "METRICS_NAMES_SEP"], [6, 3, 1, "", "__call__"], [6, 3, 1, "", "__init__"], [6, 3, 1, "", "get_all_metrics_names"], [6, 3, 1, "", "get_all_metrics_names_to_func"], [6, 3, 1, "", "get_unique_metrics_names"], [6, 3, 1, "", "get_unwrap_all_metrics_names_to_func"], [6, 4, 1, "", "metrics_functions"]], "neurotorch.metrics.classification": [[6, 1, 1, "", "ClassificationMetrics"]], "neurotorch.metrics.classification.ClassificationMetrics": [[6, 3, 1, "", "__call__"], [6, 3, 1, "", "accuracy"], [6, 3, 1, "", "auc"], [6, 3, 1, "", "compute_y_true_y_pred"], [6, 3, 1, "", "confusion_matrix"], [6, 3, 1, "", "f1"], [6, 3, 1, "", "get_all_metrics_names_to_func"], [6, 3, 1, "", "precision"], [6, 3, 1, "", "recall"]], "neurotorch.metrics.losses": [[6, 1, 1, "", "NLLLoss"], [6, 1, 1, "", "PVarianceLoss"], [6, 1, 1, "", "RMSELoss"], [6, 1, 1, "", "SMSEloss"]], "neurotorch.metrics.losses.NLLLoss": [[6, 3, 1, "", "__init__"], [6, 3, 1, "", "forward"]], "neurotorch.metrics.losses.PVarianceLoss": [[6, 3, 1, "", "__init__"], [6, 3, 1, "", "forward"], [6, 3, 1, "", "mean_std_over_batch"]], "neurotorch.metrics.losses.RMSELoss": [[6, 3, 1, "", "__init__"], [6, 3, 1, "", "forward"]], "neurotorch.metrics.losses.SMSEloss": [[6, 3, 1, "", "__init__"], [6, 3, 1, "", "forward"]], "neurotorch.metrics.regression": [[6, 1, 1, "", "RegressionMetrics"]], "neurotorch.metrics.regression.RegressionMetrics": [[6, 2, 1, "", "EPSILON"], [6, 3, 1, "", "__call__"], [6, 3, 1, "", "compute_p_var"], [6, 3, 1, "", "compute_y_true_y_pred"], [6, 3, 1, "", "d2_tweedie"], [6, 3, 1, "", "get_all_metrics_names_to_func"], [6, 3, 1, "", "mean_absolute_error"], [6, 3, 1, "", "mean_squared_error"], [6, 3, 1, "", "p_var"], [6, 3, 1, "", "r2"]], "neurotorch.modules": [[7, 0, 0, "-", "base"], [7, 0, 0, "-", "functions"], [8, 0, 0, "-", "layers"], [7, 0, 0, "-", "sequential"], [7, 0, 0, "-", "sequential_rnn"], [7, 0, 0, "-", "spike_funcs"], [7, 0, 0, "-", "utils"], [7, 0, 0, "-", "wrappers"]], "neurotorch.modules.base": [[7, 1, 1, "", "BaseModel"], [7, 1, 1, "", "NamedModule"], [7, 1, 1, "", "SizedModule"]], "neurotorch.modules.base.BaseModel": [[7, 3, 1, "", "__call__"], [7, 3, 1, "", "__init__"], [7, 3, 1, "", "apply_input_transform"], [7, 3, 1, "", "apply_output_transform"], [7, 3, 1, "", "build"], [7, 4, 1, "", "checkpoints_meta_path"], [7, 4, 1, "", "device"], [7, 3, 1, "", "forward"], [7, 3, 1, "", "get_default_input_transform"], [7, 3, 1, "", "get_default_output_transform"], [7, 3, 1, "", "get_prediction_log_proba"], [7, 3, 1, "", "get_prediction_proba"], [7, 3, 1, "", "get_prediction_trace"], [7, 3, 1, "", "get_raw_prediction"], [7, 3, 1, "", "hard_update"], [7, 3, 1, "", "infer_sizes_from_inputs"], [7, 4, 1, "", "input_sizes"], [7, 4, 1, "", "is_built"], [7, 3, 1, "", "load_checkpoint"], [7, 4, 1, "", "output_sizes"], [7, 3, 1, "", "soft_update"], [7, 3, 1, "", "to"], [7, 3, 1, "", "to_onnx"]], "neurotorch.modules.base.NamedModule": [[7, 3, 1, "", "__init__"], [7, 4, 1, "", "name"], [7, 4, 1, "", "name_is_set"]], "neurotorch.modules.base.SizedModule": [[7, 3, 1, "", "__init__"], [7, 4, 1, "", "input_size"], [7, 4, 1, "", "output_size"]], "neurotorch.modules.functions": [[7, 1, 1, "", "PSigmoid"], [7, 1, 1, "", "WeirdTanh"]], "neurotorch.modules.functions.PSigmoid": [[7, 3, 1, "", "__init__"], [7, 3, 1, "", "forward"], [7, 4, 1, "", "p"]], "neurotorch.modules.functions.WeirdTanh": [[7, 3, 1, "", "__init__"], [7, 3, 1, "", "forward"]], "neurotorch.modules.layers": [[8, 1, 1, "", "LayerType"], [8, 0, 0, "-", "base"], [8, 0, 0, "-", "classical"], [8, 0, 0, "-", "leaky_integrate"], [8, 0, 0, "-", "spiking"], [8, 0, 0, "-", "spiking_lpf"], [8, 0, 0, "-", "wilson_cowan"]], "neurotorch.modules.layers.LayerType": [[8, 2, 1, "", "ALIF"], [8, 2, 1, "", "Izhikevich"], [8, 2, 1, "", "LI"], [8, 2, 1, "", "LIF"], [8, 2, 1, "", "SpyALIF"], [8, 2, 1, "", "SpyLI"], [8, 2, 1, "", "SpyLIF"], [8, 3, 1, "", "from_str"]], "neurotorch.modules.layers.base": [[8, 1, 1, "", "BaseLayer"], [8, 1, 1, "", "BaseNeuronsLayer"]], "neurotorch.modules.layers.base.BaseLayer": [[8, 3, 1, "", "__call__"], [8, 3, 1, "", "__init__"], [8, 3, 1, "", "build"], [8, 3, 1, "", "create_empty_state"], [8, 4, 1, "", "device"], [8, 3, 1, "", "forward"], [8, 4, 1, "", "freeze_weights"], [8, 3, 1, "", "get_and_reset_regularization_loss"], [8, 3, 1, "", "get_regularization_loss"], [8, 3, 1, "", "infer_sizes_from_inputs"], [8, 3, 1, "", "initialize_weights_"], [8, 4, 1, "", "is_built"], [8, 4, 1, "", "is_ready_to_build"], [8, 4, 1, "", "requires_grad"], [8, 3, 1, "", "reset_regularization_loss"], [8, 3, 1, "", "to"], [8, 3, 1, "", "update_regularization_loss"]], "neurotorch.modules.layers.base.BaseNeuronsLayer": [[8, 3, 1, "", "__init__"], [8, 3, 1, "", "build"], [8, 4, 1, "", "connectivity_convention"], [8, 3, 1, "", "create_empty_state"], [8, 4, 1, "", "force_dale_law"], [8, 3, 1, "", "forward"], [8, 4, 1, "", "forward_sign"], [8, 4, 1, "", "forward_weights"], [8, 3, 1, "", "get_forward_sign_parameter"], [8, 3, 1, "", "get_forward_weights_data"], [8, 3, 1, "", "get_forward_weights_parameter"], [8, 3, 1, "", "get_recurrent_sign_parameter"], [8, 3, 1, "", "get_recurrent_weights_data"], [8, 3, 1, "", "get_recurrent_weights_parameter"], [8, 3, 1, "", "get_sign_parameters"], [8, 3, 1, "", "get_weights_parameters"], [8, 3, 1, "", "initialize_weights_"], [8, 4, 1, "", "recurrent_sign"], [8, 4, 1, "", "recurrent_weights"], [8, 3, 1, "", "set_forward_sign_parameter"], [8, 3, 1, "", "set_forward_weights_data"], [8, 3, 1, "", "set_forward_weights_parameter"], [8, 3, 1, "", "set_recurrent_sign_parameter"], [8, 3, 1, "", "set_recurrent_weights_data"], [8, 3, 1, "", "set_recurrent_weights_parameter"]], "neurotorch.modules.layers.classical": [[8, 1, 1, "", "Linear"], [8, 1, 1, "", "LinearRNN"]], "neurotorch.modules.layers.classical.Linear": [[8, 3, 1, "", "__init__"], [8, 3, 1, "", "build"], [8, 3, 1, "", "create_empty_state"], [8, 3, 1, "", "extra_repr"], [8, 3, 1, "", "forward"], [8, 3, 1, "", "initialize_weights_"]], "neurotorch.modules.layers.classical.LinearRNN": [[8, 3, 1, "", "__init__"], [8, 3, 1, "", "build"], [8, 3, 1, "", "create_empty_state"], [8, 3, 1, "", "extra_repr"], [8, 3, 1, "", "forward"], [8, 3, 1, "", "initialize_weights_"]], "neurotorch.modules.layers.leaky_integrate": [[8, 1, 1, "", "LILayer"], [8, 1, 1, "", "SpyLILayer"]], "neurotorch.modules.layers.leaky_integrate.LILayer": [[8, 3, 1, "", "__init__"], [8, 3, 1, "", "build"], [8, 3, 1, "", "create_empty_state"], [8, 3, 1, "", "extra_repr"], [8, 3, 1, "", "forward"], [8, 3, 1, "", "initialize_weights_"]], "neurotorch.modules.layers.leaky_integrate.SpyLILayer": [[8, 3, 1, "", "__init__"], [8, 3, 1, "", "build"], [8, 3, 1, "", "create_empty_state"], [8, 3, 1, "", "extra_repr"], [8, 3, 1, "", "forward"], [8, 3, 1, "", "initialize_weights_"]], "neurotorch.modules.layers.spiking": [[8, 1, 1, "", "ALIFLayer"], [8, 1, 1, "", "BellecLIFLayer"], [8, 1, 1, "", "IzhikevichLayer"], [8, 1, 1, "", "LIFLayer"], [8, 1, 1, "", "SpyALIFLayer"], [8, 1, 1, "", "SpyLIFLayer"]], "neurotorch.modules.layers.spiking.ALIFLayer": [[8, 3, 1, "", "__init__"], [8, 3, 1, "", "create_empty_state"], [8, 3, 1, "", "forward"], [8, 3, 1, "", "update_regularization_loss"]], "neurotorch.modules.layers.spiking.BellecLIFLayer": [[8, 3, 1, "", "__init__"], [8, 3, 1, "", "forward"]], "neurotorch.modules.layers.spiking.IzhikevichLayer": [[8, 3, 1, "", "__init__"], [8, 3, 1, "", "create_empty_state"], [8, 3, 1, "", "forward"], [8, 3, 1, "", "initialize_weights_"]], "neurotorch.modules.layers.spiking.LIFLayer": [[8, 3, 1, "", "__init__"], [8, 3, 1, "", "create_empty_state"], [8, 3, 1, "", "forward"], [8, 3, 1, "", "initialize_weights_"], [8, 3, 1, "", "update_regularization_loss"]], "neurotorch.modules.layers.spiking.SpyALIFLayer": [[8, 3, 1, "", "__init__"], [8, 3, 1, "", "create_empty_state"], [8, 3, 1, "", "forward"], [8, 3, 1, "", "initialize_weights_"], [8, 3, 1, "", "reset_regularization_loss"], [8, 3, 1, "", "update_regularization_loss"]], "neurotorch.modules.layers.spiking.SpyLIFLayer": [[8, 3, 1, "", "__init__"], [8, 3, 1, "", "create_empty_state"], [8, 3, 1, "", "forward"], [8, 3, 1, "", "initialize_weights_"], [8, 3, 1, "", "reset_regularization_loss"], [8, 3, 1, "", "update_regularization_loss"]], "neurotorch.modules.layers.spiking_lpf": [[8, 1, 1, "", "ALIFLayerLPF"], [8, 1, 1, "", "LIFLayerLPF"], [8, 1, 1, "", "SpyALIFLayerLPF"], [8, 1, 1, "", "SpyLIFLayerLPF"]], "neurotorch.modules.layers.spiking_lpf.ALIFLayerLPF": [[8, 3, 1, "", "__init__"], [8, 3, 1, "", "create_empty_state"], [8, 3, 1, "", "extra_repr"], [8, 3, 1, "", "forward"]], "neurotorch.modules.layers.spiking_lpf.LIFLayerLPF": [[8, 3, 1, "", "__init__"], [8, 3, 1, "", "create_empty_state"], [8, 3, 1, "", "extra_repr"], [8, 3, 1, "", "forward"]], "neurotorch.modules.layers.spiking_lpf.SpyALIFLayerLPF": [[8, 3, 1, "", "__init__"], [8, 3, 1, "", "create_empty_state"], [8, 3, 1, "", "extra_repr"], [8, 3, 1, "", "forward"]], "neurotorch.modules.layers.spiking_lpf.SpyLIFLayerLPF": [[8, 3, 1, "", "__init__"], [8, 3, 1, "", "create_empty_state"], [8, 3, 1, "", "extra_repr"], [8, 3, 1, "", "forward"]], "neurotorch.modules.layers.wilson_cowan": [[8, 1, 1, "", "WilsonCowanCURBDLayer"], [8, 1, 1, "", "WilsonCowanLayer"]], "neurotorch.modules.layers.wilson_cowan.WilsonCowanCURBDLayer": [[8, 3, 1, "", "__init__"], [8, 3, 1, "", "create_empty_state"], [8, 3, 1, "", "forward"]], "neurotorch.modules.layers.wilson_cowan.WilsonCowanLayer": [[8, 3, 1, "", "__init__"], [8, 3, 1, "", "create_empty_state"], [8, 3, 1, "", "forward"], [8, 3, 1, "", "initialize_weights_"], [8, 4, 1, "", "r"], [8, 4, 1, "", "tau"]], "neurotorch.modules.sequential": [[7, 1, 1, "", "Sequential"]], "neurotorch.modules.sequential.Sequential": [[7, 3, 1, "", "__init__"], [7, 3, 1, "", "build"], [7, 3, 1, "", "build_layers"], [7, 4, 1, "", "device"], [7, 3, 1, "", "forward"], [7, 3, 1, "", "get_all_layers"], [7, 3, 1, "", "get_all_layers_names"], [7, 3, 1, "", "get_and_reset_regularization_loss"], [7, 3, 1, "", "get_dict_of_layers"], [7, 3, 1, "", "get_layer"], [7, 3, 1, "", "get_layers"], [7, 3, 1, "", "get_prediction_log_proba"], [7, 3, 1, "", "get_prediction_proba"], [7, 3, 1, "", "get_raw_prediction"], [7, 3, 1, "", "infer_sizes_from_inputs"], [7, 3, 1, "", "initialize_weights_"]], "neurotorch.modules.sequential_rnn": [[7, 1, 1, "", "SequentialRNN"]], "neurotorch.modules.sequential_rnn.SequentialRNN": [[7, 3, 1, "", "__init__"], [7, 3, 1, "", "build"], [7, 3, 1, "", "forward"], [7, 3, 1, "", "get_and_reset_regularization_loss"], [7, 3, 1, "", "get_fmt_prediction"], [7, 3, 1, "", "get_last_prediction"], [7, 3, 1, "", "get_max_prediction"], [7, 3, 1, "", "get_mean_prediction"], [7, 3, 1, "", "get_prediction_log_proba"], [7, 3, 1, "", "get_prediction_proba"], [7, 3, 1, "", "get_prediction_trace"], [7, 3, 1, "", "get_raw_prediction"], [7, 4, 1, "", "hh_memory_size"], [7, 4, 1, "", "out_memory_size"]], "neurotorch.modules.spike_funcs": [[7, 1, 1, "", "HeavisidePhiApprox"], [7, 1, 1, "", "HeavisideSigmoidApprox"], [7, 1, 1, "", "SpikeFuncType"], [7, 1, 1, "", "SpikeFunction"]], "neurotorch.modules.spike_funcs.HeavisidePhiApprox": [[7, 3, 1, "", "backward"], [7, 2, 1, "", "epsilon"], [7, 3, 1, "", "pseudo_derivative"]], "neurotorch.modules.spike_funcs.HeavisideSigmoidApprox": [[7, 3, 1, "", "backward"]], "neurotorch.modules.spike_funcs.SpikeFuncType": [[7, 2, 1, "", "FastSigmoid"], [7, 2, 1, "", "Phi"]], "neurotorch.modules.spike_funcs.SpikeFunction": [[7, 3, 1, "", "backward"], [7, 3, 1, "", "forward"]], "neurotorch.modules.utils": [[7, 1, 1, "", "DimensionsCat"]], "neurotorch.modules.utils.DimensionsCat": [[7, 3, 1, "", "__call__"], [7, 3, 1, "", "__init__"], [7, 4, 1, "", "axes"]], "neurotorch.modules.wrappers": [[7, 1, 1, "", "NamedModuleWrapper"], [7, 1, 1, "", "SizedModuleWrapper"]], "neurotorch.modules.wrappers.NamedModuleWrapper": [[7, 3, 1, "", "__init__"], [7, 3, 1, "", "forward"]], "neurotorch.modules.wrappers.SizedModuleWrapper": [[7, 3, 1, "", "__init__"], [7, 3, 1, "", "forward"], [7, 3, 1, "", "infer_input_size"], [7, 3, 1, "", "infer_output_size"]], "neurotorch.regularization": [[9, 1, 1, "", "BaseRegularization"], [9, 1, 1, "", "L1"], [9, 1, 1, "", "L2"], [9, 1, 1, "", "Lp"], [9, 1, 1, "", "RegularizationList"], [9, 0, 0, "-", "connectome"]], "neurotorch.regularization.BaseRegularization": [[9, 3, 1, "", "__call__"], [9, 3, 1, "", "__init__"], [9, 3, 1, "", "forward"], [9, 3, 1, "", "on_optimization_end"]], "neurotorch.regularization.L1": [[9, 3, 1, "", "__init__"]], "neurotorch.regularization.L2": [[9, 3, 1, "", "__init__"]], "neurotorch.regularization.Lp": [[9, 3, 1, "", "__init__"], [9, 3, 1, "", "forward"]], "neurotorch.regularization.RegularizationList": [[9, 3, 1, "", "__init__"], [9, 3, 1, "", "forward"]], "neurotorch.regularization.connectome": [[9, 1, 1, "", "DaleLaw"], [9, 1, 1, "", "DaleLawL2"], [9, 1, 1, "", "ExcRatioTargetRegularization"], [9, 1, 1, "", "InhRatioTargetRegularization"], [9, 1, 1, "", "WeightsDistance"]], "neurotorch.regularization.connectome.DaleLaw": [[9, 3, 1, "", "__init__"]], "neurotorch.regularization.connectome.DaleLawL2": [[9, 3, 1, "", "__init__"], [9, 3, 1, "", "forward"]], "neurotorch.regularization.connectome.ExcRatioTargetRegularization": [[9, 3, 1, "", "__init__"], [9, 3, 1, "", "forward"], [9, 3, 1, "", "get_params_exc_ratio"], [9, 3, 1, "", "get_params_inh_ratio"], [9, 3, 1, "", "on_pbar_update"]], "neurotorch.regularization.connectome.InhRatioTargetRegularization": [[9, 3, 1, "", "__init__"], [9, 3, 1, "", "on_pbar_update"]], "neurotorch.regularization.connectome.WeightsDistance": [[9, 3, 1, "", "__init__"], [9, 3, 1, "", "forward"]], "neurotorch.rl": [[10, 0, 0, "-", "agent"], [10, 0, 0, "-", "buffers"], [10, 0, 0, "-", "curriculum"], [10, 0, 0, "-", "ppo"], [10, 0, 0, "-", "rl_academy"], [10, 0, 0, "-", "utils"]], "neurotorch.rl.agent": [[10, 1, 1, "", "Agent"]], "neurotorch.rl.agent.Agent": [[10, 3, 1, "", "__init__"], [10, 4, 1, "", "action_spec"], [10, 4, 1, "", "continuous_actions"], [10, 3, 1, "", "copy"], [10, 3, 1, "", "copy_critic"], [10, 3, 1, "", "copy_from_agent"], [10, 3, 1, "", "copy_policy"], [10, 3, 1, "", "decay_continuous_action_variances"], [10, 4, 1, "", "device"], [10, 4, 1, "", "discrete_actions"], [10, 3, 1, "", "format_batch_discrete_actions"], [10, 3, 1, "", "forward"], [10, 3, 1, "", "get_actions"], [10, 3, 1, "", "get_continuous_action_covariances"], [10, 3, 1, "", "get_default_checkpoints_meta_path"], [10, 3, 1, "", "get_random_actions"], [10, 3, 1, "", "get_values"], [10, 3, 1, "", "hard_update"], [10, 3, 1, "", "load_checkpoint"], [10, 4, 1, "", "observation_spec"], [10, 3, 1, "", "set_continuous_action_variances_with_itr"], [10, 3, 1, "", "set_default_critic_kwargs"], [10, 3, 1, "", "set_default_policy_kwargs"], [10, 3, 1, "", "soft_update"], [10, 3, 1, "", "to"]], "neurotorch.rl.buffers": [[10, 1, 1, "", "AgentsHistoryMaps"], [10, 1, 1, "", "BatchExperience"], [10, 1, 1, "", "Experience"], [10, 1, 1, "", "ReplayBuffer"], [10, 1, 1, "", "Trajectory"]], "neurotorch.rl.buffers.AgentsHistoryMaps": [[10, 3, 1, "", "__init__"], [10, 3, 1, "", "clear"], [10, 2, 1, "", "cumulative_rewards"], [10, 4, 1, "", "cumulative_rewards_as_array"], [10, 4, 1, "", "experience_count"], [10, 4, 1, "", "max_abs_rewards"], [10, 4, 1, "", "mean_cumulative_rewards"], [10, 3, 1, "", "propagate_all"], [10, 3, 1, "", "propagate_and_get_all"], [10, 4, 1, "", "terminals_count"], [10, 2, 1, "", "trajectories"], [10, 3, 1, "", "update_trajectories_"]], "neurotorch.rl.buffers.BatchExperience": [[10, 3, 1, "", "__init__"], [10, 4, 1, "", "device"]], "neurotorch.rl.buffers.Experience": [[10, 3, 1, "", "__init__"], [10, 4, 1, "", "advantage"], [10, 4, 1, "", "discounted_reward"], [10, 4, 1, "", "metrics"], [10, 4, 1, "", "observation"]], "neurotorch.rl.buffers.ReplayBuffer": [[10, 3, 1, "", "__init__"], [10, 4, 1, "", "capacity"], [10, 3, 1, "", "clear"], [10, 4, 1, "", "counter"], [10, 4, 1, "", "empty"], [10, 3, 1, "", "extend"], [10, 4, 1, "", "full"], [10, 3, 1, "", "get_batch_generator"], [10, 3, 1, "", "get_batch_tensor"], [10, 3, 1, "", "get_random_batch"], [10, 3, 1, "", "increase_capacity"], [10, 3, 1, "", "increment_counter"], [10, 3, 1, "", "load"], [10, 3, 1, "", "reset_counter"], [10, 3, 1, "", "save"], [10, 3, 1, "", "set_seed"], [10, 3, 1, "", "start_counter"], [10, 3, 1, "", "stop_counter"], [10, 3, 1, "", "store"]], "neurotorch.rl.buffers.Trajectory": [[10, 3, 1, "", "__init__"], [10, 3, 1, "", "append"], [10, 3, 1, "", "append_and_propagate"], [10, 3, 1, "", "compute_horizon_rewards"], [10, 4, 1, "", "cumulative_reward"], [10, 3, 1, "", "is_empty"], [10, 3, 1, "", "make_rewards_horizon"], [10, 3, 1, "", "propagate"], [10, 3, 1, "", "propagate_rewards"], [10, 3, 1, "", "propagate_values"], [10, 4, 1, "", "propagated"], [10, 4, 1, "", "terminal"], [10, 4, 1, "", "terminal_reward"], [10, 4, 1, "", "terminated"], [10, 3, 1, "", "update_others"]], "neurotorch.rl.curriculum": [[10, 1, 1, "", "CompletionCriteria"], [10, 1, 1, "", "Curriculum"], [10, 1, 1, "", "CurriculumEndIterationOutput"], [10, 1, 1, "", "Lesson"]], "neurotorch.rl.curriculum.CompletionCriteria": [[10, 3, 1, "", "default_criteria"], [10, 2, 1, "", "measure"], [10, 2, 1, "", "min_lesson_length"], [10, 2, 1, "", "threshold"]], "neurotorch.rl.curriculum.Curriculum": [[10, 3, 1, "", "__init__"], [10, 3, 1, "", "add_lesson"], [10, 4, 1, "", "channels"], [10, 4, 1, "", "current_lesson"], [10, 4, 1, "", "is_completed"], [10, 4, 1, "", "lessons"], [10, 4, 1, "", "map_repr"], [10, 3, 1, "", "on_iteration_end"], [10, 3, 1, "", "on_iteration_start"], [10, 4, 1, "", "teacher_buffer"], [10, 4, 1, "", "teachers"], [10, 3, 1, "", "update_channels"], [10, 3, 1, "", "update_teachers"], [10, 3, 1, "", "update_teachers_and_channels"]], "neurotorch.rl.curriculum.CurriculumEndIterationOutput": [[10, 2, 1, "", "lesson_completed"], [10, 2, 1, "", "messages"]], "neurotorch.rl.curriculum.Lesson": [[10, 2, 1, "", "UNPICKLABLE_ATTRIBUTES"], [10, 3, 1, "", "__init__"], [10, 4, 1, "", "channel"], [10, 3, 1, "", "check_completion_criteria"], [10, 4, 1, "", "is_completed"], [10, 3, 1, "", "on_iteration_end"], [10, 3, 1, "", "set_result"], [10, 3, 1, "", "start"], [10, 4, 1, "", "teacher"], [10, 4, 1, "", "teacher_buffer"]], "neurotorch.rl.ppo": [[10, 1, 1, "", "PPO"]], "neurotorch.rl.ppo.PPO": [[10, 2, 1, "", "CHECKPOINT_OPTIMIZER_STATE_DICT_KEY"], [10, 3, 1, "", "__init__"], [10, 4, 1, "", "agent"], [10, 4, 1, "", "critic"], [10, 3, 1, "", "get_actions_from_batch"], [10, 3, 1, "", "get_advantages_from_batch"], [10, 3, 1, "", "get_checkpoint_state"], [10, 3, 1, "", "get_returns_from_batch"], [10, 3, 1, "", "get_values_from_batch"], [10, 4, 1, "", "last_policy"], [10, 3, 1, "", "load_checkpoint_state"], [10, 3, 1, "", "on_iteration_begin"], [10, 3, 1, "", "on_optimization_begin"], [10, 3, 1, "", "on_optimization_end"], [10, 3, 1, "", "on_pbar_update"], [10, 3, 1, "", "on_trajectory_end"], [10, 4, 1, "", "policy"], [10, 3, 1, "", "start"], [10, 3, 1, "", "update_params"]], "neurotorch.rl.rl_academy": [[10, 1, 1, "", "GenTrajectoriesOutput"], [10, 1, 1, "", "RLAcademy"]], "neurotorch.rl.rl_academy.GenTrajectoriesOutput": [[10, 2, 1, "", "agents_history_maps"], [10, 2, 1, "", "buffer"], [10, 2, 1, "", "cumulative_rewards"], [10, 2, 1, "", "trajectories"]], "neurotorch.rl.rl_academy.RLAcademy": [[10, 2, 1, "", "CUM_REWARDS_METRIC_KEY"], [10, 2, 1, "", "TERMINAL_REWARDS_METRIC_KEY"], [10, 3, 1, "", "__init__"], [10, 3, 1, "", "close"], [10, 3, 1, "", "copy_agent"], [10, 3, 1, "", "copy_policy"], [10, 4, 1, "", "env"], [10, 3, 1, "", "generate_trajectories"], [10, 4, 1, "", "policy"], [10, 3, 1, "", "reset_agents_history_maps_meta"], [10, 3, 1, "", "set_default_academy_kwargs"], [10, 3, 1, "", "train"]], "neurotorch.rl.utils": [[10, 1, 1, "", "Linear"], [10, 1, 1, "", "TrainingHistoriesMap"], [10, 1, 1, "", "TrajectoryRenderer"], [10, 5, 1, "", "batch_dict_of_items"], [10, 5, 1, "", "batch_numpy_actions"], [10, 5, 1, "", "continuous_actions_distribution"], [10, 5, 1, "", "discounted_cumulative_sums"], [10, 5, 1, "", "env_batch_render"], [10, 5, 1, "", "env_batch_reset"], [10, 5, 1, "", "env_batch_step"], [10, 5, 1, "", "format_numpy_actions"], [10, 5, 1, "", "get_item_from_batch"], [10, 5, 1, "", "get_single_action_space"], [10, 5, 1, "", "get_single_observation_space"], [10, 5, 1, "", "obs_batch_to_sequence"], [10, 5, 1, "", "obs_sequence_to_batch"], [10, 5, 1, "", "sample_action_space"], [10, 5, 1, "", "space_to_continuous_shape"], [10, 5, 1, "", "space_to_spec"]], "neurotorch.rl.utils.Linear": [[10, 3, 1, "", "__init__"], [10, 3, 1, "", "build"], [10, 3, 1, "", "create_empty_state"], [10, 3, 1, "", "forward"], [10, 3, 1, "", "initialize_weights_"]], "neurotorch.rl.utils.TrainingHistoriesMap": [[10, 2, 1, "", "REPORT_KEY"], [10, 3, 1, "", "__init__"], [10, 3, 1, "", "append"], [10, 3, 1, "", "concat"], [10, 3, 1, "", "max"], [10, 3, 1, "", "plot"], [10, 3, 1, "", "plot_history"], [10, 4, 1, "", "report_history"]], "neurotorch.rl.utils.TrajectoryRenderer": [[10, 3, 1, "", "__init__"], [10, 3, 1, "", "check_simulate_is_needed"], [10, 3, 1, "", "render"], [10, 3, 1, "", "simulate"], [10, 3, 1, "", "to_file"], [10, 3, 1, "", "to_gif"], [10, 3, 1, "", "to_mp4"]], "neurotorch.trainers": [[11, 0, 0, "-", "classification"], [11, 0, 0, "-", "regression"], [11, 0, 0, "-", "trainer"]], "neurotorch.trainers.classification": [[11, 1, 1, "", "ClassificationTrainer"]], "neurotorch.trainers.classification.ClassificationTrainer": [[11, 3, 1, "", "__init__"]], "neurotorch.trainers.regression": [[11, 1, 1, "", "RegressionTrainer"]], "neurotorch.trainers.regression.RegressionTrainer": [[11, 3, 1, "", "__init__"]], "neurotorch.trainers.trainer": [[11, 1, 1, "", "CurrentTrainingState"], [11, 1, 1, "", "Trainer"], [11, 2, 1, "", "TrainingState"]], "neurotorch.trainers.trainer.CurrentTrainingState": [[11, 2, 1, "", "batch"], [11, 2, 1, "", "batch_is_train"], [11, 2, 1, "", "batch_loss"], [11, 2, 1, "", "epoch"], [11, 2, 1, "", "epoch_loss"], [11, 3, 1, "", "get_null_state"], [11, 2, 1, "", "hh_batch"], [11, 2, 1, "", "info"], [11, 2, 1, "", "iteration"], [11, 2, 1, "", "itr_metrics"], [11, 2, 1, "", "n_epochs"], [11, 2, 1, "", "n_iterations"], [11, 2, 1, "", "objects"], [11, 2, 1, "", "pred_batch"], [11, 2, 1, "", "stop_training_flag"], [11, 2, 1, "", "train_loss"], [11, 2, 1, "", "train_metrics"], [11, 3, 1, "", "update"], [11, 2, 1, "", "val_loss"], [11, 2, 1, "", "val_metrics"], [11, 2, 1, "", "x_batch"], [11, 2, 1, "", "y_batch"]], "neurotorch.trainers.trainer.Trainer": [[11, 3, 1, "", "__init__"], [11, 3, 1, "", "apply_criterion_on_batch"], [11, 4, 1, "", "checkpoint_managers"], [11, 4, 1, "", "force_overwrite"], [11, 3, 1, "", "get_pred_batch"], [11, 4, 1, "", "learning_algorithms"], [11, 4, 1, "", "load_checkpoint_mode"], [11, 3, 1, "", "load_state"], [11, 4, 1, "", "network"], [11, 3, 1, "", "sort_callbacks_"], [11, 4, 1, "", "state"], [11, 3, 1, "", "train"], [11, 4, 1, "", "training_histories"], [11, 3, 1, "", "update_info_state_"], [11, 3, 1, "", "update_itr_metrics_state_"], [11, 3, 1, "", "update_objects_state_"], [11, 3, 1, "", "update_state_"]], "neurotorch.transforms": [[12, 0, 0, "-", "base"], [12, 0, 0, "-", "spikes_auto_encoder"], [12, 0, 0, "-", "spikes_decoders"], [12, 0, 0, "-", "spikes_encoders"], [12, 0, 0, "-", "vision"], [12, 0, 0, "-", "wrappers"]], "neurotorch.transforms.base": [[12, 1, 1, "", "ConstantValuesTransform"], [12, 1, 1, "", "IdentityTransform"], [12, 1, 1, "", "LinearRateToSpikes"], [12, 1, 1, "", "MaybeSoftmax"], [12, 1, 1, "", "ReduceFuncTanh"], [12, 1, 1, "", "ReduceMax"], [12, 1, 1, "", "ReduceMean"], [12, 1, 1, "", "ReduceSum"], [12, 1, 1, "", "ToDevice"], [12, 1, 1, "", "ToTensor"], [12, 5, 1, "", "to_numpy"], [12, 5, 1, "", "to_tensor"]], "neurotorch.transforms.base.ConstantValuesTransform": [[12, 3, 1, "", "__init__"], [12, 3, 1, "", "forward"]], "neurotorch.transforms.base.IdentityTransform": [[12, 3, 1, "", "__init__"], [12, 3, 1, "", "forward"]], "neurotorch.transforms.base.LinearRateToSpikes": [[12, 3, 1, "", "__init__"], [12, 3, 1, "", "firing_periods_to_spikes"], [12, 3, 1, "", "forward"]], "neurotorch.transforms.base.MaybeSoftmax": [[12, 3, 1, "", "__init__"], [12, 3, 1, "", "forward"]], "neurotorch.transforms.base.ReduceFuncTanh": [[12, 3, 1, "", "__init__"], [12, 3, 1, "", "forward"]], "neurotorch.transforms.base.ReduceMax": [[12, 3, 1, "", "__init__"], [12, 3, 1, "", "extra_repr"], [12, 3, 1, "", "forward"]], "neurotorch.transforms.base.ReduceMean": [[12, 3, 1, "", "__init__"], [12, 3, 1, "", "extra_repr"], [12, 3, 1, "", "forward"]], "neurotorch.transforms.base.ReduceSum": [[12, 3, 1, "", "__init__"], [12, 3, 1, "", "extra_repr"], [12, 3, 1, "", "forward"]], "neurotorch.transforms.base.ToDevice": [[12, 3, 1, "", "__init__"], [12, 4, 1, "", "device"], [12, 3, 1, "", "forward"], [12, 3, 1, "", "to"]], "neurotorch.transforms.base.ToTensor": [[12, 3, 1, "", "__init__"], [12, 3, 1, "", "forward"]], "neurotorch.transforms.spikes_auto_encoder": [[12, 1, 1, "", "SpikesAutoEncoder"]], "neurotorch.transforms.spikes_auto_encoder.SpikesAutoEncoder": [[12, 3, 1, "", "__init__"], [12, 3, 1, "", "decode"], [12, 4, 1, "", "device"], [12, 3, 1, "", "encode"], [12, 3, 1, "", "forward"], [12, 3, 1, "", "get_and_reset_regularization_loss"], [12, 3, 1, "", "get_prediction_trace"], [12, 3, 1, "", "get_raw_prediction"]], "neurotorch.transforms.spikes_decoders": [[12, 1, 1, "", "MeanConv"]], "neurotorch.transforms.spikes_decoders.MeanConv": [[12, 3, 1, "", "__init__"], [12, 3, 1, "", "extra_repr"], [12, 3, 1, "", "forward"]], "neurotorch.transforms.spikes_encoders": [[12, 1, 1, "", "ALIFEncoder"], [12, 1, 1, "", "LIFEncoder"], [12, 1, 1, "", "SpikesEncoder"], [12, 1, 1, "", "SpyLIFEncoder"]], "neurotorch.transforms.spikes_encoders.ALIFEncoder": [[12, 3, 1, "", "__init__"]], "neurotorch.transforms.spikes_encoders.LIFEncoder": [[12, 3, 1, "", "__init__"]], "neurotorch.transforms.spikes_encoders.SpikesEncoder": [[12, 3, 1, "", "__init__"], [12, 3, 1, "", "forward"], [12, 3, 1, "", "get_and_reset_regularization_loss"], [12, 3, 1, "", "to"]], "neurotorch.transforms.spikes_encoders.SpyLIFEncoder": [[12, 3, 1, "", "__init__"]], "neurotorch.transforms.vision": [[12, 1, 1, "", "ImgToSpikes"]], "neurotorch.transforms.vision.ImgToSpikes": [[12, 3, 1, "", "__call__"], [12, 3, 1, "", "__init__"], [12, 3, 1, "", "firing_periods_to_spikes"], [12, 3, 1, "", "firing_periods_to_spikes_clip"], [12, 3, 1, "", "firing_periods_to_spikes_loop"], [12, 3, 1, "", "firing_times_to_spikes"], [12, 3, 1, "", "pixels_to_firing_periods"]], "neurotorch.transforms.wrappers": [[12, 1, 1, "", "CallableToModuleWrapper"]], "neurotorch.transforms.wrappers.CallableToModuleWrapper": [[12, 3, 1, "", "__init__"], [12, 3, 1, "", "forward"]], "neurotorch.utils": [[13, 1, 1, "", "ConnectivityConvention"], [13, 0, 0, "-", "autograd"], [13, 5, 1, "", "batchwise_temporal_decay"], [13, 5, 1, "", "batchwise_temporal_filter"], [13, 5, 1, "", "batchwise_temporal_recursive_filter"], [13, 5, 1, "", "clip_tensors_norm_"], [13, 0, 0, "-", "collections"], [13, 0, 0, "-", "formatting"], [13, 5, 1, "", "linear_decay"], [13, 5, 1, "", "maybe_apply_softmax"], [13, 0, 0, "-", "random"], [13, 5, 1, "", "ravel_compose_transforms"], [13, 0, 0, "-", "visualise"]], "neurotorch.utils.ConnectivityConvention": [[13, 2, 1, "", "ItoJ"], [13, 2, 1, "", "JtoI"], [13, 3, 1, "", "from_other"], [13, 3, 1, "", "from_str"]], "neurotorch.utils.autograd": [[13, 5, 1, "", "compute_jacobian"], [13, 5, 1, "", "dy_dw_local"], [13, 5, 1, "", "filter_parameters"], [13, 5, 1, "", "get_contributing_params"], [13, 5, 1, "", "recursive_detach"], [13, 5, 1, "", "recursive_detach_"], [13, 5, 1, "", "vmap"], [13, 5, 1, "", "zero_grad_params"]], "neurotorch.utils.collections": [[13, 5, 1, "", "get_all_params_combinations"], [13, 5, 1, "", "get_meta_name"], [13, 5, 1, "", "get_meta_str"], [13, 5, 1, "", "hash_meta_str"], [13, 5, 1, "", "hash_params"], [13, 5, 1, "", "list_insert_replace_at"], [13, 5, 1, "", "list_of_callable_to_sequential"], [13, 5, 1, "", "mapping_update_recursively"], [13, 5, 1, "", "maybe_unpack_singleton_dict"], [13, 5, 1, "", "save_params"], [13, 5, 1, "", "sequence_get"], [13, 5, 1, "", "unpack_out_hh"], [13, 5, 1, "", "unpack_singleton_dict"], [13, 5, 1, "", "unpack_tuple"], [13, 5, 1, "", "unpack_x_hh_y"]], "neurotorch.utils.formatting": [[13, 5, 1, "", "format_pred_batch"]], "neurotorch.utils.random": [[13, 5, 1, "", "format_pseudo_rn_seed"], [13, 5, 1, "", "set_seed"], [13, 5, 1, "", "unitary_rn_normal_matrix"]], "neurotorch.utils.visualise": [[13, 5, 1, "", "legend_without_duplicate_labels_"], [13, 5, 1, "", "plot_confusion_matrix"]], "neurotorch.visualisation": [[14, 0, 0, "-", "connectome"], [14, 0, 0, "-", "report"], [14, 0, 0, "-", "time_series_visualisation"]], "neurotorch.visualisation.connectome": [[14, 5, 1, "", "visualize_init_final_weights"]], "neurotorch.visualisation.report": [[14, 5, 1, "", "UMAP_PCA_report"], [14, 5, 1, "", "mix_report"]], "neurotorch.visualisation.time_series_visualisation": [[14, 1, 1, "", "Visualise"], [14, 1, 1, "", "VisualiseDBSCAN"], [14, 1, 1, "", "VisualiseKMeans"], [14, 1, 1, "", "VisualisePCA"], [14, 1, 1, "", "VisualiseUMAP"]], "neurotorch.visualisation.time_series_visualisation.Visualise": [[14, 3, 1, "", "__init__"], [14, 3, 1, "", "animate"], [14, 3, 1, "", "heatmap"], [14, 3, 1, "", "number_axes"], [14, 3, 1, "", "plot_single_timeseries_comparison"], [14, 3, 1, "", "plot_timeseries"], [14, 3, 1, "", "plot_timeseries_comparison"], [14, 3, 1, "", "plot_timeseries_comparison_report"], [14, 3, 1, "", "rigidplot"]], "neurotorch.visualisation.time_series_visualisation.VisualiseDBSCAN": [[14, 3, 1, "", "__init__"]], "neurotorch.visualisation.time_series_visualisation.VisualiseKMeans": [[14, 3, 1, "", "__init__"], [14, 3, 1, "", "permute_timeseries"]], "neurotorch.visualisation.time_series_visualisation.VisualisePCA": [[14, 3, 1, "", "__init__"], [14, 3, 1, "", "scatter_pca"], [14, 3, 1, "", "trajectory_pca"], [14, 3, 1, "", "with_kmeans"]], "neurotorch.visualisation.time_series_visualisation.VisualiseUMAP": [[14, 3, 1, "", "__init__"], [14, 3, 1, "", "compute_umap_transform"], [14, 3, 1, "", "reduce_timeseries"], [14, 3, 1, "", "scatter_umap"], [14, 3, 1, "", "trajectory_umap"], [14, 3, 1, "", "with_kmeans"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:method", "4": "py:property", "5": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "method", "Python method"], "4": ["py", "property", "Python property"], "5": ["py", "function", "Python function"]}, "titleterms": {"welcom": 0, "neurotorch": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], "": 0, "document": 0, "content": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "modul": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "1": [0, 15], "descript": [0, 15], "current": [0, 15], "version": [0, 15], "next": [0, 15], "2": [0, 15], "instal": [0, 15], "last": [0, 15], "unstabl": [0, 15], "3": [0, 15], "tutori": [0, 15], "applic": [0, 15], "4": [0, 15], "quick": [0, 15], "usag": [0, 15], "preview": [0, 15], "5": [0, 15], "why": [0, 15], "6": [0, 15], "similar": [0, 15], "work": [0, 15], "7": [0, 15], "about": [0, 15], "8": [0, 15], "import": [0, 15], "link": [0, 15], "9": [0, 15], "found": [0, 15], "bug": [0, 15], "have": [0, 15], "featur": [0, 15], "request": [0, 15], "10": [0, 15], "thank": [0, 15], "11": [0, 15], "licens": [0, 15], "12": [0, 15], "citat": [0, 15], "indic": 0, "tabl": 0, "packag": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "subpackag": [2, 7], "submodul": [2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "dimens": 2, "callback": 3, "base_callback": 3, "checkpoints_manag": 3, "converg": 3, "early_stop": 3, "event": 3, "histori": 3, "lr_schedul": 3, "training_visu": 3, "init": 4, "learning_algorithm": 5, "bptt": 5, "eprop": 5, "rl": [5, 10], "tbptt": 5, "metric": 6, "base": [6, 7, 8, 12], "classif": [6, 11], "loss": 6, "regress": [6, 11], "function": 7, "sequenti": 7, "sequential_rnn": 7, "spike_func": 7, "util": [7, 10, 13], "wrapper": [7, 12], "layer": 8, "classic": 8, "leaky_integr": 8, "spike": 8, "spiking_lpf": 8, "wilson_cowan": 8, "regular": 9, "connectom": [9, 14], "agent": 10, "buffer": 10, "curriculum": 10, "ppo": 10, "rl_academi": 10, "trainer": 11, "transform": 12, "spikes_auto_encod": 12, "spikes_decod": 12, "spikes_encod": 12, "vision": 12, "autograd": 13, "collect": 13, "format": 13, "random": 13, "visualis": [13, 14], "report": 14, "time_series_visualis": 14}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinxcontrib.bibtex": 9, "sphinx.ext.todo": 2, "sphinx": 57}, "alltitles": {"Welcome to NeuroTorch\u2019s documentation!": [[0, "welcome-to-neurotorch-s-documentation"]], "Contents:": [[0, null]], "Modules:": [[0, null]], "1. Description": [[0, "description"], [15, "description"]], "Current Version": [[0, "current-version"], [15, "current-version"]], "Next Versions": [[0, "next-versions"], [15, "next-versions"]], "2. Installation": [[0, "installation"], [15, "installation"]], "2.1 Last unstable version": [[0, "last-unstable-version"], [15, "last-unstable-version"]], "3. Tutorials / Applications": [[0, "tutorials-applications"], [15, "tutorials-applications"]], "4. Quick usage preview": [[0, "quick-usage-preview"], [15, "quick-usage-preview"]], "5. Why NeuroTorch?": [[0, "why-neurotorch"], [15, "why-neurotorch"]], "6. Similar work": [[0, "similar-work"], [15, "similar-work"]], "7. About": [[0, "about"], [15, "about"]], "8. Important Links": [[0, "important-links"], [15, "important-links"]], "9. Found a bug or have a feature request?": [[0, "found-a-bug-or-have-a-feature-request"], [15, "found-a-bug-or-have-a-feature-request"]], "10. Thanks": [[0, "thanks"], [15, "thanks"]], "11. License": [[0, "license"], [15, "license"]], "12. Citation": [[0, "citation"], [15, "citation"]], "Indices and tables": [[0, "indices-and-tables"]], "neurotorch": [[1, "neurotorch"]], "neurotorch package": [[2, "neurotorch-package"]], "Subpackages": [[2, "subpackages"], [7, "subpackages"]], "Submodules": [[2, "submodules"], [3, "submodules"], [5, "submodules"], [6, "submodules"], [7, "submodules"], [8, "submodules"], [9, "submodules"], [10, "submodules"], [11, "submodules"], [12, "submodules"], [13, "submodules"], [14, "submodules"]], "neurotorch.dimension module": [[2, "module-neurotorch.dimension"]], "Module contents": [[2, "module-neurotorch"], [3, "module-neurotorch.callbacks"], [4, "module-neurotorch.init"], [5, "module-neurotorch.learning_algorithms"], [6, "module-neurotorch.metrics"], [7, "module-neurotorch.modules"], [8, "module-neurotorch.modules.layers"], [9, "module-neurotorch.regularization"], [10, "module-neurotorch.rl"], [11, "module-neurotorch.trainers"], [12, "module-neurotorch.transforms"], [13, "module-neurotorch.utils"], [14, "module-neurotorch.visualisation"]], "neurotorch.callbacks package": [[3, "neurotorch-callbacks-package"]], "neurotorch.callbacks.base_callback module": [[3, "module-neurotorch.callbacks.base_callback"]], "neurotorch.callbacks.checkpoints_manager module": [[3, "module-neurotorch.callbacks.checkpoints_manager"]], "neurotorch.callbacks.convergence module": [[3, "module-neurotorch.callbacks.convergence"]], "neurotorch.callbacks.early_stopping module": [[3, "module-neurotorch.callbacks.early_stopping"]], "neurotorch.callbacks.events module": [[3, "module-neurotorch.callbacks.events"]], "neurotorch.callbacks.history module": [[3, "module-neurotorch.callbacks.history"]], "neurotorch.callbacks.lr_schedulers module": [[3, "module-neurotorch.callbacks.lr_schedulers"]], "neurotorch.callbacks.training_visualization module": [[3, "module-neurotorch.callbacks.training_visualization"]], "neurotorch.init package": [[4, "neurotorch-init-package"]], "neurotorch.learning_algorithms package": [[5, "neurotorch-learning-algorithms-package"]], "neurotorch.learning_algorithms.bptt module": [[5, "module-neurotorch.learning_algorithms.bptt"]], "neurotorch.learning_algorithms.eprop module": [[5, "module-neurotorch.learning_algorithms.eprop"]], "neurotorch.learning_algorithms.learning_algorithm module": [[5, "module-neurotorch.learning_algorithms.learning_algorithm"]], "neurotorch.learning_algorithms.rls module": [[5, "module-neurotorch.learning_algorithms.rls"]], "neurotorch.learning_algorithms.tbptt module": [[5, "module-neurotorch.learning_algorithms.tbptt"]], "neurotorch.metrics package": [[6, "neurotorch-metrics-package"]], "neurotorch.metrics.base module": [[6, "module-neurotorch.metrics.base"]], "neurotorch.metrics.classification module": [[6, "module-neurotorch.metrics.classification"]], "neurotorch.metrics.losses module": [[6, "module-neurotorch.metrics.losses"]], "neurotorch.metrics.regression module": [[6, "module-neurotorch.metrics.regression"]], "neurotorch.modules package": [[7, "neurotorch-modules-package"]], "neurotorch.modules.base module": [[7, "module-neurotorch.modules.base"]], "neurotorch.modules.functions module": [[7, "module-neurotorch.modules.functions"]], "neurotorch.modules.sequential module": [[7, "module-neurotorch.modules.sequential"]], "neurotorch.modules.sequential_rnn module": [[7, "module-neurotorch.modules.sequential_rnn"]], "neurotorch.modules.spike_funcs module": [[7, "module-neurotorch.modules.spike_funcs"]], "neurotorch.modules.utils module": [[7, "module-neurotorch.modules.utils"]], "neurotorch.modules.wrappers module": [[7, "module-neurotorch.modules.wrappers"]], "neurotorch.modules.layers package": [[8, "neurotorch-modules-layers-package"]], "neurotorch.modules.layers.base module": [[8, "module-neurotorch.modules.layers.base"]], "neurotorch.modules.layers.classical module": [[8, "module-neurotorch.modules.layers.classical"]], "neurotorch.modules.layers.leaky_integrate module": [[8, "module-neurotorch.modules.layers.leaky_integrate"]], "neurotorch.modules.layers.spiking module": [[8, "module-neurotorch.modules.layers.spiking"]], "neurotorch.modules.layers.spiking_lpf module": [[8, "module-neurotorch.modules.layers.spiking_lpf"]], "neurotorch.modules.layers.wilson_cowan module": [[8, "module-neurotorch.modules.layers.wilson_cowan"]], "neurotorch.regularization package": [[9, "neurotorch-regularization-package"]], "neurotorch.regularization.connectome module": [[9, "module-neurotorch.regularization.connectome"]], "neurotorch.rl package": [[10, "neurotorch-rl-package"]], "neurotorch.rl.agent module": [[10, "module-neurotorch.rl.agent"]], "neurotorch.rl.buffers module": [[10, "module-neurotorch.rl.buffers"]], "neurotorch.rl.curriculum module": [[10, "module-neurotorch.rl.curriculum"]], "neurotorch.rl.ppo module": [[10, "module-neurotorch.rl.ppo"]], "neurotorch.rl.rl_academy module": [[10, "module-neurotorch.rl.rl_academy"]], "neurotorch.rl.utils module": [[10, "module-neurotorch.rl.utils"]], "neurotorch.trainers package": [[11, "neurotorch-trainers-package"]], "neurotorch.trainers.classification module": [[11, "module-neurotorch.trainers.classification"]], "neurotorch.trainers.regression module": [[11, "module-neurotorch.trainers.regression"]], "neurotorch.trainers.trainer module": [[11, "module-neurotorch.trainers.trainer"]], "neurotorch.transforms package": [[12, "neurotorch-transforms-package"]], "neurotorch.transforms.base module": [[12, "module-neurotorch.transforms.base"]], "neurotorch.transforms.spikes_auto_encoder module": [[12, "module-neurotorch.transforms.spikes_auto_encoder"]], "neurotorch.transforms.spikes_decoders module": [[12, "module-neurotorch.transforms.spikes_decoders"]], "neurotorch.transforms.spikes_encoders module": [[12, "module-neurotorch.transforms.spikes_encoders"]], "neurotorch.transforms.vision module": [[12, "module-neurotorch.transforms.vision"]], "neurotorch.transforms.wrappers module": [[12, "module-neurotorch.transforms.wrappers"]], "neurotorch.utils package": [[13, "neurotorch-utils-package"]], "neurotorch.utils.autograd module": [[13, "module-neurotorch.utils.autograd"]], "neurotorch.utils.collections module": [[13, "module-neurotorch.utils.collections"]], "neurotorch.utils.formatting module": [[13, "module-neurotorch.utils.formatting"]], "neurotorch.utils.random module": [[13, "module-neurotorch.utils.random"]], "neurotorch.utils.visualise module": [[13, "module-neurotorch.utils.visualise"]], "neurotorch.visualisation package": [[14, "neurotorch-visualisation-package"]], "neurotorch.visualisation.connectome module": [[14, "module-neurotorch.visualisation.connectome"]], "neurotorch.visualisation.report module": [[14, "module-neurotorch.visualisation.report"]], "neurotorch.visualisation.time_series_visualisation module": [[14, "module-neurotorch.visualisation.time_series_visualisation"]]}, "indexentries": {"dimension (class in neurotorch.dimension)": [[2, "neurotorch.dimension.Dimension"]], "dimensionproperty (class in neurotorch.dimension)": [[2, "neurotorch.dimension.DimensionProperty"]], "none (neurotorch.dimension.dimensionproperty attribute)": [[2, "neurotorch.dimension.DimensionProperty.NONE"]], "spatial (neurotorch.dimension.dimensionproperty attribute)": [[2, "neurotorch.dimension.DimensionProperty.SPATIAL"]], "size (class in neurotorch.dimension)": [[2, "neurotorch.dimension.Size"]], "time (neurotorch.dimension.dimensionproperty attribute)": [[2, "neurotorch.dimension.DimensionProperty.TIME"]], "__init__() (neurotorch.dimension.dimension method)": [[2, "neurotorch.dimension.Dimension.__init__"]], "__init__() (neurotorch.dimension.size method)": [[2, "neurotorch.dimension.Size.__init__"]], "dtype (neurotorch.dimension.dimension attribute)": [[2, "neurotorch.dimension.Dimension.dtype"]], "from_int() (neurotorch.dimension.dimension static method)": [[2, "neurotorch.dimension.Dimension.from_int"]], "from_int_or_dimension() (neurotorch.dimension.dimension static method)": [[2, "neurotorch.dimension.Dimension.from_int_or_dimension"]], "module": [[2, "module-neurotorch"], [2, "module-neurotorch.dimension"], [3, "module-neurotorch.callbacks"], [3, "module-neurotorch.callbacks.base_callback"], [3, "module-neurotorch.callbacks.checkpoints_manager"], [3, "module-neurotorch.callbacks.convergence"], [3, "module-neurotorch.callbacks.early_stopping"], [3, "module-neurotorch.callbacks.events"], [3, "module-neurotorch.callbacks.history"], [3, "module-neurotorch.callbacks.lr_schedulers"], [3, "module-neurotorch.callbacks.training_visualization"], [4, "module-neurotorch.init"], [5, "module-neurotorch.learning_algorithms"], [5, "module-neurotorch.learning_algorithms.bptt"], [5, "module-neurotorch.learning_algorithms.eprop"], [5, "module-neurotorch.learning_algorithms.learning_algorithm"], [5, "module-neurotorch.learning_algorithms.rls"], [5, "module-neurotorch.learning_algorithms.tbptt"], [6, "module-neurotorch.metrics"], [6, "module-neurotorch.metrics.base"], [6, "module-neurotorch.metrics.classification"], [6, "module-neurotorch.metrics.losses"], [6, "module-neurotorch.metrics.regression"], [7, "module-neurotorch.modules"], [7, "module-neurotorch.modules.base"], [7, "module-neurotorch.modules.functions"], [7, "module-neurotorch.modules.sequential"], [7, "module-neurotorch.modules.sequential_rnn"], [7, "module-neurotorch.modules.spike_funcs"], [7, "module-neurotorch.modules.utils"], [7, "module-neurotorch.modules.wrappers"], [8, "module-neurotorch.modules.layers"], [8, "module-neurotorch.modules.layers.base"], [8, "module-neurotorch.modules.layers.classical"], [8, "module-neurotorch.modules.layers.leaky_integrate"], [8, "module-neurotorch.modules.layers.spiking"], [8, "module-neurotorch.modules.layers.spiking_lpf"], [8, "module-neurotorch.modules.layers.wilson_cowan"], [9, "module-neurotorch.regularization"], [9, "module-neurotorch.regularization.connectome"], [10, "module-neurotorch.rl"], [10, "module-neurotorch.rl.agent"], [10, "module-neurotorch.rl.buffers"], [10, "module-neurotorch.rl.curriculum"], [10, "module-neurotorch.rl.ppo"], [10, "module-neurotorch.rl.rl_academy"], [10, "module-neurotorch.rl.utils"], [11, "module-neurotorch.trainers"], [11, "module-neurotorch.trainers.classification"], [11, "module-neurotorch.trainers.regression"], [11, "module-neurotorch.trainers.trainer"], [12, "module-neurotorch.transforms"], [12, "module-neurotorch.transforms.base"], [12, "module-neurotorch.transforms.spikes_auto_encoder"], [12, "module-neurotorch.transforms.spikes_decoders"], [12, "module-neurotorch.transforms.spikes_encoders"], [12, "module-neurotorch.transforms.vision"], [12, "module-neurotorch.transforms.wrappers"], [13, "module-neurotorch.utils"], [13, "module-neurotorch.utils.autograd"], [13, "module-neurotorch.utils.collections"], [13, "module-neurotorch.utils.formatting"], [13, "module-neurotorch.utils.random"], [13, "module-neurotorch.utils.visualise"], [14, "module-neurotorch.visualisation"], [14, "module-neurotorch.visualisation.connectome"], [14, "module-neurotorch.visualisation.report"], [14, "module-neurotorch.visualisation.time_series_visualisation"]], "name (neurotorch.dimension.dimension attribute)": [[2, "neurotorch.dimension.Dimension.name"]], "neurotorch": [[2, "module-neurotorch"]], "neurotorch.dimension": [[2, "module-neurotorch.dimension"]], "size (neurotorch.dimension.dimension attribute)": [[2, "neurotorch.dimension.Dimension.size"]], "best_itr (neurotorch.callbacks.checkpoints_manager.loadcheckpointmode attribute)": [[3, "neurotorch.callbacks.checkpoints_manager.LoadCheckpointMode.BEST_ITR"]], "basecallback (class in neurotorch.callbacks.base_callback)": [[3, "neurotorch.callbacks.base_callback.BaseCallback"]], "checkpoints_meta_suffix (neurotorch.callbacks.checkpoints_manager.checkpointmanager attribute)": [[3, "neurotorch.callbacks.checkpoints_manager.CheckpointManager.CHECKPOINTS_META_SUFFIX"]], "checkpoint_best_key (neurotorch.callbacks.checkpoints_manager.checkpointmanager attribute)": [[3, "neurotorch.callbacks.checkpoints_manager.CheckpointManager.CHECKPOINT_BEST_KEY"]], "checkpoint_file_struct (neurotorch.callbacks.checkpoints_manager.checkpointmanager attribute)": [[3, "neurotorch.callbacks.checkpoints_manager.CheckpointManager.CHECKPOINT_FILE_STRUCT"]], "checkpoint_itrs_key (neurotorch.callbacks.checkpoints_manager.checkpointmanager attribute)": [[3, "neurotorch.callbacks.checkpoints_manager.CheckpointManager.CHECKPOINT_ITRS_KEY"]], "checkpoint_itr_key (neurotorch.callbacks.checkpoints_manager.checkpointmanager attribute)": [[3, "neurotorch.callbacks.checkpoints_manager.CheckpointManager.CHECKPOINT_ITR_KEY"]], "checkpoint_metrics_key (neurotorch.callbacks.checkpoints_manager.checkpointmanager attribute)": [[3, "neurotorch.callbacks.checkpoints_manager.CheckpointManager.CHECKPOINT_METRICS_KEY"]], "checkpoint_optimizer_state_dict_key (neurotorch.callbacks.checkpoints_manager.checkpointmanager attribute)": [[3, "neurotorch.callbacks.checkpoints_manager.CheckpointManager.CHECKPOINT_OPTIMIZER_STATE_DICT_KEY"]], "checkpoint_save_path_key (neurotorch.callbacks.checkpoints_manager.checkpointmanager attribute)": [[3, "neurotorch.callbacks.checkpoints_manager.CheckpointManager.CHECKPOINT_SAVE_PATH_KEY"]], "checkpoint_state_dict_key (neurotorch.callbacks.checkpoints_manager.checkpointmanager attribute)": [[3, "neurotorch.callbacks.checkpoints_manager.CheckpointManager.CHECKPOINT_STATE_DICT_KEY"]], "checkpoint_training_history_key (neurotorch.callbacks.checkpoints_manager.checkpointmanager attribute)": [[3, "neurotorch.callbacks.checkpoints_manager.CheckpointManager.CHECKPOINT_TRAINING_HISTORY_KEY"]], "current_seconds_count_key (neurotorch.callbacks.early_stopping.earlystoppingontimelimit attribute)": [[3, "neurotorch.callbacks.early_stopping.EarlyStoppingOnTimeLimit.CURRENT_SECONDS_COUNT_KEY"]], "callbackslist (class in neurotorch.callbacks.base_callback)": [[3, "neurotorch.callbacks.base_callback.CallbacksList"]], "checkpointmanager (class in neurotorch.callbacks.checkpoints_manager)": [[3, "neurotorch.callbacks.checkpoints_manager.CheckpointManager"]], "convergencetimegetter (class in neurotorch.callbacks.convergence)": [[3, "neurotorch.callbacks.convergence.ConvergenceTimeGetter"]], "default_high_priority (neurotorch.callbacks.base_callback.basecallback attribute)": [[3, "neurotorch.callbacks.base_callback.BaseCallback.DEFAULT_HIGH_PRIORITY"]], "default_low_priority (neurotorch.callbacks.base_callback.basecallback attribute)": [[3, "neurotorch.callbacks.base_callback.BaseCallback.DEFAULT_LOW_PRIORITY"]], "default_lr_start (neurotorch.callbacks.lr_schedulers.lrscheduleronmetric attribute)": [[3, "neurotorch.callbacks.lr_schedulers.LRSchedulerOnMetric.DEFAULT_LR_START"]], "default_lr_start (neurotorch.callbacks.lr_schedulers.linearlrscheduler attribute)": [[3, "neurotorch.callbacks.lr_schedulers.LinearLRScheduler.DEFAULT_LR_START"]], "default_medium_priority (neurotorch.callbacks.base_callback.basecallback attribute)": [[3, "neurotorch.callbacks.base_callback.BaseCallback.DEFAULT_MEDIUM_PRIORITY"]], "default_min_lr (neurotorch.callbacks.lr_schedulers.lrscheduleronmetric attribute)": [[3, "neurotorch.callbacks.lr_schedulers.LRSchedulerOnMetric.DEFAULT_MIN_LR"]], "default_min_lr (neurotorch.callbacks.lr_schedulers.linearlrscheduler attribute)": [[3, "neurotorch.callbacks.lr_schedulers.LinearLRScheduler.DEFAULT_MIN_LR"]], "default_priority (neurotorch.callbacks.foresighttimestepupdaterontarget attribute)": [[3, "neurotorch.callbacks.ForesightTimeStepUpdaterOnTarget.DEFAULT_PRIORITY"]], "default_priority (neurotorch.callbacks.base_callback.basecallback attribute)": [[3, "neurotorch.callbacks.base_callback.BaseCallback.DEFAULT_PRIORITY"]], "default_priority (neurotorch.callbacks.checkpoints_manager.checkpointmanager attribute)": [[3, "neurotorch.callbacks.checkpoints_manager.CheckpointManager.DEFAULT_PRIORITY"]], "default_priority (neurotorch.callbacks.early_stopping.earlystoppingonnan attribute)": [[3, "neurotorch.callbacks.early_stopping.EarlyStoppingOnNaN.DEFAULT_PRIORITY"]], "default_priority (neurotorch.callbacks.early_stopping.earlystoppingonstagnation attribute)": [[3, "neurotorch.callbacks.early_stopping.EarlyStoppingOnStagnation.DEFAULT_PRIORITY"]], "default_priority (neurotorch.callbacks.history.traininghistory attribute)": [[3, "neurotorch.callbacks.history.TrainingHistory.DEFAULT_PRIORITY"]], "delta_seconds_key (neurotorch.callbacks.early_stopping.earlystoppingontimelimit attribute)": [[3, "neurotorch.callbacks.early_stopping.EarlyStoppingOnTimeLimit.DELTA_SECONDS_KEY"]], "earlystopping (class in neurotorch.callbacks.early_stopping)": [[3, "neurotorch.callbacks.early_stopping.EarlyStopping"]], "earlystoppingonnan (class in neurotorch.callbacks.early_stopping)": [[3, "neurotorch.callbacks.early_stopping.EarlyStoppingOnNaN"]], "earlystoppingonstagnation (class in neurotorch.callbacks.early_stopping)": [[3, "neurotorch.callbacks.early_stopping.EarlyStoppingOnStagnation"]], "earlystoppingontimelimit (class in neurotorch.callbacks.early_stopping)": [[3, "neurotorch.callbacks.early_stopping.EarlyStoppingOnTimeLimit"]], "earlystoppingthreshold (class in neurotorch.callbacks.early_stopping)": [[3, "neurotorch.callbacks.early_stopping.EarlyStoppingThreshold"]], "eventonmetricthreshold (class in neurotorch.callbacks.events)": [[3, "neurotorch.callbacks.events.EventOnMetricThreshold"]], "foresighttimestepupdaterontarget (class in neurotorch.callbacks)": [[3, "neurotorch.callbacks.ForesightTimeStepUpdaterOnTarget"]], "last_itr (neurotorch.callbacks.checkpoints_manager.loadcheckpointmode attribute)": [[3, "neurotorch.callbacks.checkpoints_manager.LoadCheckpointMode.LAST_ITR"]], "lrscheduleronmetric (class in neurotorch.callbacks.lr_schedulers)": [[3, "neurotorch.callbacks.lr_schedulers.LRSchedulerOnMetric"]], "linearlrscheduler (class in neurotorch.callbacks.lr_schedulers)": [[3, "neurotorch.callbacks.lr_schedulers.LinearLRScheduler"]], "loadcheckpointmode (class in neurotorch.callbacks.checkpoints_manager)": [[3, "neurotorch.callbacks.checkpoints_manager.LoadCheckpointMode"]], "save_ext (neurotorch.callbacks.checkpoints_manager.checkpointmanager attribute)": [[3, "neurotorch.callbacks.checkpoints_manager.CheckpointManager.SAVE_EXT"]], "suffix_sep (neurotorch.callbacks.checkpoints_manager.checkpointmanager attribute)": [[3, "neurotorch.callbacks.checkpoints_manager.CheckpointManager.SUFFIX_SEP"]], "traininghistory (class in neurotorch.callbacks.history)": [[3, "neurotorch.callbacks.history.TrainingHistory"]], "traininghistoryvisualizationcallback (class in neurotorch.callbacks.training_visualization)": [[3, "neurotorch.callbacks.training_visualization.TrainingHistoryVisualizationCallback"]], "unpickeable_attributes (neurotorch.callbacks.base_callback.basecallback attribute)": [[3, "neurotorch.callbacks.base_callback.BaseCallback.UNPICKEABLE_ATTRIBUTES"]], "__init__() (neurotorch.callbacks.foresighttimestepupdaterontarget method)": [[3, "neurotorch.callbacks.ForesightTimeStepUpdaterOnTarget.__init__"]], "__init__() (neurotorch.callbacks.base_callback.basecallback method)": [[3, "neurotorch.callbacks.base_callback.BaseCallback.__init__"]], "__init__() (neurotorch.callbacks.base_callback.callbackslist method)": [[3, "neurotorch.callbacks.base_callback.CallbacksList.__init__"]], "__init__() (neurotorch.callbacks.checkpoints_manager.checkpointmanager method)": [[3, "neurotorch.callbacks.checkpoints_manager.CheckpointManager.__init__"]], "__init__() (neurotorch.callbacks.convergence.convergencetimegetter method)": [[3, "neurotorch.callbacks.convergence.ConvergenceTimeGetter.__init__"]], "__init__() (neurotorch.callbacks.early_stopping.earlystopping method)": [[3, "neurotorch.callbacks.early_stopping.EarlyStopping.__init__"]], "__init__() (neurotorch.callbacks.early_stopping.earlystoppingonnan method)": [[3, "neurotorch.callbacks.early_stopping.EarlyStoppingOnNaN.__init__"]], "__init__() (neurotorch.callbacks.early_stopping.earlystoppingonstagnation method)": [[3, "neurotorch.callbacks.early_stopping.EarlyStoppingOnStagnation.__init__"]], "__init__() (neurotorch.callbacks.early_stopping.earlystoppingontimelimit method)": [[3, "neurotorch.callbacks.early_stopping.EarlyStoppingOnTimeLimit.__init__"]], "__init__() (neurotorch.callbacks.early_stopping.earlystoppingthreshold method)": [[3, "neurotorch.callbacks.early_stopping.EarlyStoppingThreshold.__init__"]], "__init__() (neurotorch.callbacks.events.eventonmetricthreshold method)": [[3, "neurotorch.callbacks.events.EventOnMetricThreshold.__init__"]], "__init__() (neurotorch.callbacks.history.traininghistory method)": [[3, "neurotorch.callbacks.history.TrainingHistory.__init__"]], "__init__() (neurotorch.callbacks.lr_schedulers.lrscheduleronmetric method)": [[3, "neurotorch.callbacks.lr_schedulers.LRSchedulerOnMetric.__init__"]], "__init__() (neurotorch.callbacks.lr_schedulers.linearlrscheduler method)": [[3, "neurotorch.callbacks.lr_schedulers.LinearLRScheduler.__init__"]], "__init__() (neurotorch.callbacks.training_visualization.traininghistoryvisualizationcallback method)": [[3, "neurotorch.callbacks.training_visualization.TrainingHistoryVisualizationCallback.__init__"]], "append() (neurotorch.callbacks.base_callback.callbackslist method)": [[3, "neurotorch.callbacks.base_callback.CallbacksList.append"]], "append() (neurotorch.callbacks.history.traininghistory method)": [[3, "neurotorch.callbacks.history.TrainingHistory.append"]], "checkpoints_meta_path (neurotorch.callbacks.checkpoints_manager.checkpointmanager property)": [[3, "neurotorch.callbacks.checkpoints_manager.CheckpointManager.checkpoints_meta_path"]], "close() (neurotorch.callbacks.base_callback.basecallback method)": [[3, "neurotorch.callbacks.base_callback.BaseCallback.close"]], "close() (neurotorch.callbacks.base_callback.callbackslist method)": [[3, "neurotorch.callbacks.base_callback.CallbacksList.close"]], "close() (neurotorch.callbacks.checkpoints_manager.checkpointmanager method)": [[3, "neurotorch.callbacks.checkpoints_manager.CheckpointManager.close"]], "close() (neurotorch.callbacks.convergence.convergencetimegetter method)": [[3, "neurotorch.callbacks.convergence.ConvergenceTimeGetter.close"]], "close() (neurotorch.callbacks.training_visualization.traininghistoryvisualizationcallback method)": [[3, "neurotorch.callbacks.training_visualization.TrainingHistoryVisualizationCallback.close"]], "concat() (neurotorch.callbacks.history.traininghistory method)": [[3, "neurotorch.callbacks.history.TrainingHistory.concat"]], "create_plot() (neurotorch.callbacks.history.traininghistory method)": [[3, "neurotorch.callbacks.history.TrainingHistory.create_plot"]], "extra_repr() (neurotorch.callbacks.base_callback.basecallback method)": [[3, "neurotorch.callbacks.base_callback.BaseCallback.extra_repr"]], "extra_repr() (neurotorch.callbacks.checkpoints_manager.checkpointmanager method)": [[3, "neurotorch.callbacks.checkpoints_manager.CheckpointManager.extra_repr"]], "extra_repr() (neurotorch.callbacks.early_stopping.earlystoppingonnan method)": [[3, "neurotorch.callbacks.early_stopping.EarlyStoppingOnNaN.extra_repr"]], "extra_repr() (neurotorch.callbacks.early_stopping.earlystoppingonstagnation method)": [[3, "neurotorch.callbacks.early_stopping.EarlyStoppingOnStagnation.extra_repr"]], "extra_repr() (neurotorch.callbacks.early_stopping.earlystoppingontimelimit method)": [[3, "neurotorch.callbacks.early_stopping.EarlyStoppingOnTimeLimit.extra_repr"]], "extra_repr() (neurotorch.callbacks.history.traininghistory method)": [[3, "neurotorch.callbacks.history.TrainingHistory.extra_repr"]], "extra_repr() (neurotorch.callbacks.lr_schedulers.lrscheduleronmetric method)": [[3, "neurotorch.callbacks.lr_schedulers.LRSchedulerOnMetric.extra_repr"]], "extra_repr() (neurotorch.callbacks.lr_schedulers.linearlrscheduler method)": [[3, "neurotorch.callbacks.lr_schedulers.LinearLRScheduler.extra_repr"]], "from_str() (neurotorch.callbacks.checkpoints_manager.loadcheckpointmode static method)": [[3, "neurotorch.callbacks.checkpoints_manager.LoadCheckpointMode.from_str"]], "get() (neurotorch.callbacks.history.traininghistory method)": [[3, "neurotorch.callbacks.history.TrainingHistory.get"]], "get_checkpoint_filename() (neurotorch.callbacks.checkpoints_manager.checkpointmanager method)": [[3, "neurotorch.callbacks.checkpoints_manager.CheckpointManager.get_checkpoint_filename"]], "get_checkpoint_state() (neurotorch.callbacks.base_callback.basecallback method)": [[3, "neurotorch.callbacks.base_callback.BaseCallback.get_checkpoint_state"]], "get_checkpoint_state() (neurotorch.callbacks.base_callback.callbackslist method)": [[3, "neurotorch.callbacks.base_callback.CallbacksList.get_checkpoint_state"]], "get_checkpoint_state() (neurotorch.callbacks.early_stopping.earlystoppingontimelimit method)": [[3, "neurotorch.callbacks.early_stopping.EarlyStoppingOnTimeLimit.get_checkpoint_state"]], "get_hh_memory_size_from_y_batch() (neurotorch.callbacks.foresighttimestepupdaterontarget method)": [[3, "neurotorch.callbacks.ForesightTimeStepUpdaterOnTarget.get_hh_memory_size_from_y_batch"]], "get_item_at() (neurotorch.callbacks.history.traininghistory method)": [[3, "neurotorch.callbacks.history.TrainingHistory.get_item_at"]], "get_save_name_from_checkpoints() (neurotorch.callbacks.checkpoints_manager.checkpointmanager static method)": [[3, "neurotorch.callbacks.checkpoints_manager.CheckpointManager.get_save_name_from_checkpoints"]], "get_value() (neurotorch.callbacks.early_stopping.earlystoppingonstagnation method)": [[3, "neurotorch.callbacks.early_stopping.EarlyStoppingOnStagnation.get_value"]], "insert() (neurotorch.callbacks.history.traininghistory method)": [[3, "neurotorch.callbacks.history.TrainingHistory.insert"]], "instance_counter (neurotorch.callbacks.base_callback.basecallback attribute)": [[3, "neurotorch.callbacks.base_callback.BaseCallback.instance_counter"]], "items() (neurotorch.callbacks.history.traininghistory method)": [[3, "neurotorch.callbacks.history.TrainingHistory.items"]], "keys() (neurotorch.callbacks.history.traininghistory method)": [[3, "neurotorch.callbacks.history.TrainingHistory.keys"]], "load_checkpoint() (neurotorch.callbacks.checkpoints_manager.checkpointmanager method)": [[3, "neurotorch.callbacks.checkpoints_manager.CheckpointManager.load_checkpoint"]], "load_checkpoint_state() (neurotorch.callbacks.base_callback.basecallback method)": [[3, "neurotorch.callbacks.base_callback.BaseCallback.load_checkpoint_state"]], "load_checkpoint_state() (neurotorch.callbacks.base_callback.callbackslist method)": [[3, "neurotorch.callbacks.base_callback.CallbacksList.load_checkpoint_state"]], "load_checkpoint_state() (neurotorch.callbacks.convergence.convergencetimegetter method)": [[3, "neurotorch.callbacks.convergence.ConvergenceTimeGetter.load_checkpoint_state"]], "load_checkpoint_state() (neurotorch.callbacks.early_stopping.earlystoppingontimelimit method)": [[3, "neurotorch.callbacks.early_stopping.EarlyStoppingOnTimeLimit.load_checkpoint_state"]], "load_mode_to_suffix (neurotorch.callbacks.checkpoints_manager.checkpointmanager attribute)": [[3, "neurotorch.callbacks.checkpoints_manager.CheckpointManager.load_mode_to_suffix"]], "max() (neurotorch.callbacks.history.traininghistory method)": [[3, "neurotorch.callbacks.history.TrainingHistory.max"]], "max_item() (neurotorch.callbacks.history.traininghistory method)": [[3, "neurotorch.callbacks.history.TrainingHistory.max_item"]], "min() (neurotorch.callbacks.history.traininghistory method)": [[3, "neurotorch.callbacks.history.TrainingHistory.min"]], "min_item() (neurotorch.callbacks.history.traininghistory method)": [[3, "neurotorch.callbacks.history.TrainingHistory.min_item"]], "neurotorch.callbacks": [[3, "module-neurotorch.callbacks"]], "neurotorch.callbacks.base_callback": [[3, "module-neurotorch.callbacks.base_callback"]], "neurotorch.callbacks.checkpoints_manager": [[3, "module-neurotorch.callbacks.checkpoints_manager"]], "neurotorch.callbacks.convergence": [[3, "module-neurotorch.callbacks.convergence"]], "neurotorch.callbacks.early_stopping": [[3, "module-neurotorch.callbacks.early_stopping"]], "neurotorch.callbacks.events": [[3, "module-neurotorch.callbacks.events"]], "neurotorch.callbacks.history": [[3, "module-neurotorch.callbacks.history"]], "neurotorch.callbacks.lr_schedulers": [[3, "module-neurotorch.callbacks.lr_schedulers"]], "neurotorch.callbacks.training_visualization": [[3, "module-neurotorch.callbacks.training_visualization"]], "on_batch_begin() (neurotorch.callbacks.foresighttimestepupdaterontarget method)": [[3, "neurotorch.callbacks.ForesightTimeStepUpdaterOnTarget.on_batch_begin"]], "on_batch_begin() (neurotorch.callbacks.base_callback.basecallback method)": [[3, "neurotorch.callbacks.base_callback.BaseCallback.on_batch_begin"]], "on_batch_begin() (neurotorch.callbacks.base_callback.callbackslist method)": [[3, "neurotorch.callbacks.base_callback.CallbacksList.on_batch_begin"]], "on_batch_end() (neurotorch.callbacks.foresighttimestepupdaterontarget method)": [[3, "neurotorch.callbacks.ForesightTimeStepUpdaterOnTarget.on_batch_end"]], "on_batch_end() (neurotorch.callbacks.base_callback.basecallback method)": [[3, "neurotorch.callbacks.base_callback.BaseCallback.on_batch_end"]], "on_batch_end() (neurotorch.callbacks.base_callback.callbackslist method)": [[3, "neurotorch.callbacks.base_callback.CallbacksList.on_batch_end"]], "on_epoch_begin() (neurotorch.callbacks.base_callback.basecallback method)": [[3, "neurotorch.callbacks.base_callback.BaseCallback.on_epoch_begin"]], "on_epoch_begin() (neurotorch.callbacks.base_callback.callbackslist method)": [[3, "neurotorch.callbacks.base_callback.CallbacksList.on_epoch_begin"]], "on_epoch_end() (neurotorch.callbacks.base_callback.basecallback method)": [[3, "neurotorch.callbacks.base_callback.BaseCallback.on_epoch_end"]], "on_epoch_end() (neurotorch.callbacks.base_callback.callbackslist method)": [[3, "neurotorch.callbacks.base_callback.CallbacksList.on_epoch_end"]], "on_iteration_begin() (neurotorch.callbacks.base_callback.basecallback method)": [[3, "neurotorch.callbacks.base_callback.BaseCallback.on_iteration_begin"]], "on_iteration_begin() (neurotorch.callbacks.base_callback.callbackslist method)": [[3, "neurotorch.callbacks.base_callback.CallbacksList.on_iteration_begin"]], "on_iteration_end() (neurotorch.callbacks.base_callback.basecallback method)": [[3, "neurotorch.callbacks.base_callback.BaseCallback.on_iteration_end"]], "on_iteration_end() (neurotorch.callbacks.base_callback.callbackslist method)": [[3, "neurotorch.callbacks.base_callback.CallbacksList.on_iteration_end"]], "on_iteration_end() (neurotorch.callbacks.checkpoints_manager.checkpointmanager method)": [[3, "neurotorch.callbacks.checkpoints_manager.CheckpointManager.on_iteration_end"]], "on_iteration_end() (neurotorch.callbacks.convergence.convergencetimegetter method)": [[3, "neurotorch.callbacks.convergence.ConvergenceTimeGetter.on_iteration_end"]], "on_iteration_end() (neurotorch.callbacks.early_stopping.earlystoppingonnan method)": [[3, "neurotorch.callbacks.early_stopping.EarlyStoppingOnNaN.on_iteration_end"]], "on_iteration_end() (neurotorch.callbacks.early_stopping.earlystoppingonstagnation method)": [[3, "neurotorch.callbacks.early_stopping.EarlyStoppingOnStagnation.on_iteration_end"]], "on_iteration_end() (neurotorch.callbacks.early_stopping.earlystoppingontimelimit method)": [[3, "neurotorch.callbacks.early_stopping.EarlyStoppingOnTimeLimit.on_iteration_end"]], "on_iteration_end() (neurotorch.callbacks.early_stopping.earlystoppingthreshold method)": [[3, "neurotorch.callbacks.early_stopping.EarlyStoppingThreshold.on_iteration_end"]], "on_iteration_end() (neurotorch.callbacks.events.eventonmetricthreshold method)": [[3, "neurotorch.callbacks.events.EventOnMetricThreshold.on_iteration_end"]], "on_iteration_end() (neurotorch.callbacks.history.traininghistory method)": [[3, "neurotorch.callbacks.history.TrainingHistory.on_iteration_end"]], "on_iteration_end() (neurotorch.callbacks.lr_schedulers.lrscheduleronmetric method)": [[3, "neurotorch.callbacks.lr_schedulers.LRSchedulerOnMetric.on_iteration_end"]], "on_iteration_end() (neurotorch.callbacks.lr_schedulers.linearlrscheduler method)": [[3, "neurotorch.callbacks.lr_schedulers.LinearLRScheduler.on_iteration_end"]], "on_iteration_end() (neurotorch.callbacks.training_visualization.traininghistoryvisualizationcallback method)": [[3, "neurotorch.callbacks.training_visualization.TrainingHistoryVisualizationCallback.on_iteration_end"]], "on_optimization_begin() (neurotorch.callbacks.base_callback.basecallback method)": [[3, "neurotorch.callbacks.base_callback.BaseCallback.on_optimization_begin"]], "on_optimization_begin() (neurotorch.callbacks.base_callback.callbackslist method)": [[3, "neurotorch.callbacks.base_callback.CallbacksList.on_optimization_begin"]], "on_optimization_end() (neurotorch.callbacks.base_callback.basecallback method)": [[3, "neurotorch.callbacks.base_callback.BaseCallback.on_optimization_end"]], "on_optimization_end() (neurotorch.callbacks.base_callback.callbackslist method)": [[3, "neurotorch.callbacks.base_callback.CallbacksList.on_optimization_end"]], "on_pbar_update() (neurotorch.callbacks.base_callback.basecallback method)": [[3, "neurotorch.callbacks.base_callback.BaseCallback.on_pbar_update"]], "on_pbar_update() (neurotorch.callbacks.base_callback.callbackslist method)": [[3, "neurotorch.callbacks.base_callback.CallbacksList.on_pbar_update"]], "on_pbar_update() (neurotorch.callbacks.checkpoints_manager.checkpointmanager method)": [[3, "neurotorch.callbacks.checkpoints_manager.CheckpointManager.on_pbar_update"]], "on_pbar_update() (neurotorch.callbacks.events.eventonmetricthreshold method)": [[3, "neurotorch.callbacks.events.EventOnMetricThreshold.on_pbar_update"]], "on_pbar_update() (neurotorch.callbacks.lr_schedulers.lrscheduleronmetric method)": [[3, "neurotorch.callbacks.lr_schedulers.LRSchedulerOnMetric.on_pbar_update"]], "on_train_begin() (neurotorch.callbacks.base_callback.basecallback method)": [[3, "neurotorch.callbacks.base_callback.BaseCallback.on_train_begin"]], "on_train_begin() (neurotorch.callbacks.base_callback.callbackslist method)": [[3, "neurotorch.callbacks.base_callback.CallbacksList.on_train_begin"]], "on_train_end() (neurotorch.callbacks.foresighttimestepupdaterontarget method)": [[3, "neurotorch.callbacks.ForesightTimeStepUpdaterOnTarget.on_train_end"]], "on_train_end() (neurotorch.callbacks.base_callback.basecallback method)": [[3, "neurotorch.callbacks.base_callback.BaseCallback.on_train_end"]], "on_train_end() (neurotorch.callbacks.base_callback.callbackslist method)": [[3, "neurotorch.callbacks.base_callback.CallbacksList.on_train_end"]], "on_trajectory_end() (neurotorch.callbacks.base_callback.basecallback method)": [[3, "neurotorch.callbacks.base_callback.BaseCallback.on_trajectory_end"]], "on_trajectory_end() (neurotorch.callbacks.base_callback.callbackslist method)": [[3, "neurotorch.callbacks.base_callback.CallbacksList.on_trajectory_end"]], "on_validation_batch_begin() (neurotorch.callbacks.base_callback.basecallback method)": [[3, "neurotorch.callbacks.base_callback.BaseCallback.on_validation_batch_begin"]], "on_validation_batch_begin() (neurotorch.callbacks.base_callback.callbackslist method)": [[3, "neurotorch.callbacks.base_callback.CallbacksList.on_validation_batch_begin"]], "on_validation_batch_end() (neurotorch.callbacks.base_callback.basecallback method)": [[3, "neurotorch.callbacks.base_callback.BaseCallback.on_validation_batch_end"]], "on_validation_batch_end() (neurotorch.callbacks.base_callback.callbackslist method)": [[3, "neurotorch.callbacks.base_callback.CallbacksList.on_validation_batch_end"]], "on_validation_begin() (neurotorch.callbacks.base_callback.basecallback method)": [[3, "neurotorch.callbacks.base_callback.BaseCallback.on_validation_begin"]], "on_validation_begin() (neurotorch.callbacks.base_callback.callbackslist method)": [[3, "neurotorch.callbacks.base_callback.CallbacksList.on_validation_begin"]], "on_validation_end() (neurotorch.callbacks.base_callback.basecallback method)": [[3, "neurotorch.callbacks.base_callback.BaseCallback.on_validation_end"]], "on_validation_end() (neurotorch.callbacks.base_callback.callbackslist method)": [[3, "neurotorch.callbacks.base_callback.CallbacksList.on_validation_end"]], "plot() (neurotorch.callbacks.history.traininghistory method)": [[3, "neurotorch.callbacks.history.TrainingHistory.plot"]], "remove() (neurotorch.callbacks.base_callback.callbackslist method)": [[3, "neurotorch.callbacks.base_callback.CallbacksList.remove"]], "save_checkpoint() (neurotorch.callbacks.checkpoints_manager.checkpointmanager method)": [[3, "neurotorch.callbacks.checkpoints_manager.CheckpointManager.save_checkpoint"]], "save_checkpoints_meta() (neurotorch.callbacks.checkpoints_manager.checkpointmanager method)": [[3, "neurotorch.callbacks.checkpoints_manager.CheckpointManager.save_checkpoints_meta"]], "save_on() (neurotorch.callbacks.checkpoints_manager.checkpointmanager method)": [[3, "neurotorch.callbacks.checkpoints_manager.CheckpointManager.save_on"]], "save_on() (neurotorch.callbacks.convergence.convergencetimegetter method)": [[3, "neurotorch.callbacks.convergence.ConvergenceTimeGetter.save_on"]], "sort_callbacks_() (neurotorch.callbacks.base_callback.callbackslist method)": [[3, "neurotorch.callbacks.base_callback.CallbacksList.sort_callbacks_"]], "start() (neurotorch.callbacks.foresighttimestepupdaterontarget method)": [[3, "neurotorch.callbacks.ForesightTimeStepUpdaterOnTarget.start"]], "start() (neurotorch.callbacks.base_callback.basecallback method)": [[3, "neurotorch.callbacks.base_callback.BaseCallback.start"]], "start() (neurotorch.callbacks.base_callback.callbackslist method)": [[3, "neurotorch.callbacks.base_callback.CallbacksList.start"]], "start() (neurotorch.callbacks.checkpoints_manager.checkpointmanager method)": [[3, "neurotorch.callbacks.checkpoints_manager.CheckpointManager.start"]], "start() (neurotorch.callbacks.convergence.convergencetimegetter method)": [[3, "neurotorch.callbacks.convergence.ConvergenceTimeGetter.start"]], "start() (neurotorch.callbacks.early_stopping.earlystoppingonstagnation method)": [[3, "neurotorch.callbacks.early_stopping.EarlyStoppingOnStagnation.start"]], "start() (neurotorch.callbacks.early_stopping.earlystoppingontimelimit method)": [[3, "neurotorch.callbacks.early_stopping.EarlyStoppingOnTimeLimit.start"]], "start() (neurotorch.callbacks.lr_schedulers.lrscheduleronmetric method)": [[3, "neurotorch.callbacks.lr_schedulers.LRSchedulerOnMetric.start"]], "start() (neurotorch.callbacks.lr_schedulers.linearlrscheduler method)": [[3, "neurotorch.callbacks.lr_schedulers.LinearLRScheduler.start"]], "start() (neurotorch.callbacks.training_visualization.traininghistoryvisualizationcallback method)": [[3, "neurotorch.callbacks.training_visualization.TrainingHistoryVisualizationCallback.start"]], "update_fig() (neurotorch.callbacks.history.traininghistory method)": [[3, "neurotorch.callbacks.history.TrainingHistory.update_fig"]], "update_flags() (neurotorch.callbacks.early_stopping.earlystoppingontimelimit method)": [[3, "neurotorch.callbacks.early_stopping.EarlyStoppingOnTimeLimit.update_flags"]], "update_step() (neurotorch.callbacks.lr_schedulers.lrscheduleronmetric method)": [[3, "neurotorch.callbacks.lr_schedulers.LRSchedulerOnMetric.update_step"]], "dale_() (in module neurotorch.init)": [[4, "neurotorch.init.dale_"]], "neurotorch.init": [[4, "module-neurotorch.init"]], "bptt (class in neurotorch.learning_algorithms.bptt)": [[5, "neurotorch.learning_algorithms.bptt.BPTT"]], "checkpoint_feedback_weights_key (neurotorch.learning_algorithms.eprop.eprop attribute)": [[5, "neurotorch.learning_algorithms.eprop.Eprop.CHECKPOINT_FEEDBACK_WEIGHTS_KEY"]], "checkpoint_optimizer_state_dict_key (neurotorch.learning_algorithms.bptt.bptt attribute)": [[5, "neurotorch.learning_algorithms.bptt.BPTT.CHECKPOINT_OPTIMIZER_STATE_DICT_KEY"]], "checkpoint_optimizer_state_dict_key (neurotorch.learning_algorithms.eprop.eprop attribute)": [[5, "neurotorch.learning_algorithms.eprop.Eprop.CHECKPOINT_OPTIMIZER_STATE_DICT_KEY"]], "checkpoint_optimizer_state_dict_key (neurotorch.learning_algorithms.rls.rls attribute)": [[5, "neurotorch.learning_algorithms.rls.RLS.CHECKPOINT_OPTIMIZER_STATE_DICT_KEY"]], "checkpoint_p_states_dict_key (neurotorch.learning_algorithms.rls.rls attribute)": [[5, "neurotorch.learning_algorithms.rls.RLS.CHECKPOINT_P_STATES_DICT_KEY"]], "default_feedbacks_gen_strategy (neurotorch.learning_algorithms.eprop.eprop attribute)": [[5, "neurotorch.learning_algorithms.eprop.Eprop.DEFAULT_FEEDBACKS_GEN_STRATEGY"]], "default_feedbacks_str_norm_clip_value (neurotorch.learning_algorithms.eprop.eprop attribute)": [[5, "neurotorch.learning_algorithms.eprop.Eprop.DEFAULT_FEEDBACKS_STR_NORM_CLIP_VALUE"]], "default_optimizer_cls (neurotorch.learning_algorithms.bptt.bptt attribute)": [[5, "neurotorch.learning_algorithms.bptt.BPTT.DEFAULT_OPTIMIZER_CLS"]], "default_optimizer_cls (neurotorch.learning_algorithms.eprop.eprop attribute)": [[5, "neurotorch.learning_algorithms.eprop.Eprop.DEFAULT_OPTIMIZER_CLS"]], "default_priority (neurotorch.learning_algorithms.learning_algorithm.learningalgorithm attribute)": [[5, "neurotorch.learning_algorithms.learning_algorithm.LearningAlgorithm.DEFAULT_PRIORITY"]], "default_y_key (neurotorch.learning_algorithms.eprop.eprop attribute)": [[5, "neurotorch.learning_algorithms.eprop.Eprop.DEFAULT_Y_KEY"]], "eprop (class in neurotorch.learning_algorithms.eprop)": [[5, "neurotorch.learning_algorithms.eprop.Eprop"]], "feedbacks_gen_funcs (neurotorch.learning_algorithms.eprop.eprop attribute)": [[5, "neurotorch.learning_algorithms.eprop.Eprop.FEEDBACKS_GEN_FUNCS"]], "learningalgorithm (class in neurotorch.learning_algorithms.learning_algorithm)": [[5, "neurotorch.learning_algorithms.learning_algorithm.LearningAlgorithm"]], "optimizer_output_params_group_idx (neurotorch.learning_algorithms.eprop.eprop attribute)": [[5, "neurotorch.learning_algorithms.eprop.Eprop.OPTIMIZER_OUTPUT_PARAMS_GROUP_IDX"]], "optimizer_params_group_idx (neurotorch.learning_algorithms.bptt.bptt attribute)": [[5, "neurotorch.learning_algorithms.bptt.BPTT.OPTIMIZER_PARAMS_GROUP_IDX"]], "optimizer_params_group_idx (neurotorch.learning_algorithms.eprop.eprop attribute)": [[5, "neurotorch.learning_algorithms.eprop.Eprop.OPTIMIZER_PARAMS_GROUP_IDX"]], "rls (class in neurotorch.learning_algorithms.rls)": [[5, "neurotorch.learning_algorithms.rls.RLS"]], "tbptt (class in neurotorch.learning_algorithms.tbptt)": [[5, "neurotorch.learning_algorithms.tbptt.TBPTT"]], "__init__() (neurotorch.learning_algorithms.bptt.bptt method)": [[5, "neurotorch.learning_algorithms.bptt.BPTT.__init__"]], "__init__() (neurotorch.learning_algorithms.eprop.eprop method)": [[5, "neurotorch.learning_algorithms.eprop.Eprop.__init__"]], "__init__() (neurotorch.learning_algorithms.learning_algorithm.learningalgorithm method)": [[5, "neurotorch.learning_algorithms.learning_algorithm.LearningAlgorithm.__init__"]], "__init__() (neurotorch.learning_algorithms.rls.rls method)": [[5, "neurotorch.learning_algorithms.rls.RLS.__init__"]], "__init__() (neurotorch.learning_algorithms.tbptt.tbptt method)": [[5, "neurotorch.learning_algorithms.tbptt.TBPTT.__init__"]], "apply_criterion() (neurotorch.learning_algorithms.bptt.bptt method)": [[5, "neurotorch.learning_algorithms.bptt.BPTT.apply_criterion"]], "close() (neurotorch.learning_algorithms.tbptt.tbptt method)": [[5, "neurotorch.learning_algorithms.tbptt.TBPTT.close"]], "compute_errors() (neurotorch.learning_algorithms.eprop.eprop method)": [[5, "neurotorch.learning_algorithms.eprop.Eprop.compute_errors"]], "compute_learning_signals() (neurotorch.learning_algorithms.eprop.eprop method)": [[5, "neurotorch.learning_algorithms.eprop.Eprop.compute_learning_signals"]], "create_default_optimizer() (neurotorch.learning_algorithms.bptt.bptt method)": [[5, "neurotorch.learning_algorithms.bptt.BPTT.create_default_optimizer"]], "curbd_step_method() (neurotorch.learning_algorithms.rls.rls static method)": [[5, "neurotorch.learning_algorithms.rls.RLS.curbd_step_method"]], "decorate_forwards() (neurotorch.learning_algorithms.eprop.eprop method)": [[5, "neurotorch.learning_algorithms.eprop.Eprop.decorate_forwards"]], "decorate_forwards() (neurotorch.learning_algorithms.tbptt.tbptt method)": [[5, "neurotorch.learning_algorithms.tbptt.TBPTT.decorate_forwards"]], "eligibility_traces_zeros_() (neurotorch.learning_algorithms.eprop.eprop method)": [[5, "neurotorch.learning_algorithms.eprop.Eprop.eligibility_traces_zeros_"]], "extra_repr() (neurotorch.learning_algorithms.bptt.bptt method)": [[5, "neurotorch.learning_algorithms.bptt.BPTT.extra_repr"]], "extra_repr() (neurotorch.learning_algorithms.tbptt.tbptt method)": [[5, "neurotorch.learning_algorithms.tbptt.TBPTT.extra_repr"]], "get_checkpoint_state() (neurotorch.learning_algorithms.bptt.bptt method)": [[5, "neurotorch.learning_algorithms.bptt.BPTT.get_checkpoint_state"]], "get_checkpoint_state() (neurotorch.learning_algorithms.eprop.eprop method)": [[5, "neurotorch.learning_algorithms.eprop.Eprop.get_checkpoint_state"]], "get_checkpoint_state() (neurotorch.learning_algorithms.rls.rls method)": [[5, "neurotorch.learning_algorithms.rls.RLS.get_checkpoint_state"]], "grad_mth_step() (neurotorch.learning_algorithms.rls.rls method)": [[5, "neurotorch.learning_algorithms.rls.RLS.grad_mth_step"]], "initialize_p_list() (neurotorch.learning_algorithms.rls.rls method)": [[5, "neurotorch.learning_algorithms.rls.RLS.initialize_P_list"]], "initialize_feedback_weights() (neurotorch.learning_algorithms.eprop.eprop method)": [[5, "neurotorch.learning_algorithms.eprop.Eprop.initialize_feedback_weights"]], "initialize_layers() (neurotorch.learning_algorithms.eprop.eprop method)": [[5, "neurotorch.learning_algorithms.eprop.Eprop.initialize_layers"]], "initialize_layers() (neurotorch.learning_algorithms.tbptt.tbptt method)": [[5, "neurotorch.learning_algorithms.tbptt.TBPTT.initialize_layers"]], "initialize_output_layers() (neurotorch.learning_algorithms.eprop.eprop method)": [[5, "neurotorch.learning_algorithms.eprop.Eprop.initialize_output_layers"]], "initialize_output_layers() (neurotorch.learning_algorithms.tbptt.tbptt method)": [[5, "neurotorch.learning_algorithms.tbptt.TBPTT.initialize_output_layers"]], "initialize_output_params() (neurotorch.learning_algorithms.eprop.eprop method)": [[5, "neurotorch.learning_algorithms.eprop.Eprop.initialize_output_params"]], "initialize_param_groups() (neurotorch.learning_algorithms.bptt.bptt method)": [[5, "neurotorch.learning_algorithms.bptt.BPTT.initialize_param_groups"]], "initialize_param_groups() (neurotorch.learning_algorithms.eprop.eprop method)": [[5, "neurotorch.learning_algorithms.eprop.Eprop.initialize_param_groups"]], "initialize_params() (neurotorch.learning_algorithms.eprop.eprop method)": [[5, "neurotorch.learning_algorithms.eprop.Eprop.initialize_params"]], "inputs_mth_step() (neurotorch.learning_algorithms.rls.rls method)": [[5, "neurotorch.learning_algorithms.rls.RLS.inputs_mth_step"]], "jacobian_mth_step() (neurotorch.learning_algorithms.rls.rls method)": [[5, "neurotorch.learning_algorithms.rls.RLS.jacobian_mth_step"]], "load_checkpoint_state() (neurotorch.learning_algorithms.bptt.bptt method)": [[5, "neurotorch.learning_algorithms.bptt.BPTT.load_checkpoint_state"]], "load_checkpoint_state() (neurotorch.learning_algorithms.eprop.eprop method)": [[5, "neurotorch.learning_algorithms.eprop.Eprop.load_checkpoint_state"]], "load_checkpoint_state() (neurotorch.learning_algorithms.rls.rls method)": [[5, "neurotorch.learning_algorithms.rls.RLS.load_checkpoint_state"]], "make_feedback_weights() (neurotorch.learning_algorithms.eprop.eprop method)": [[5, "neurotorch.learning_algorithms.eprop.Eprop.make_feedback_weights"]], "neurotorch.learning_algorithms": [[5, "module-neurotorch.learning_algorithms"]], "neurotorch.learning_algorithms.bptt": [[5, "module-neurotorch.learning_algorithms.bptt"]], "neurotorch.learning_algorithms.eprop": [[5, "module-neurotorch.learning_algorithms.eprop"]], "neurotorch.learning_algorithms.learning_algorithm": [[5, "module-neurotorch.learning_algorithms.learning_algorithm"]], "neurotorch.learning_algorithms.rls": [[5, "module-neurotorch.learning_algorithms.rls"]], "neurotorch.learning_algorithms.tbptt": [[5, "module-neurotorch.learning_algorithms.tbptt"]], "on_batch_begin() (neurotorch.learning_algorithms.eprop.eprop method)": [[5, "neurotorch.learning_algorithms.eprop.Eprop.on_batch_begin"]], "on_batch_begin() (neurotorch.learning_algorithms.rls.rls method)": [[5, "neurotorch.learning_algorithms.rls.RLS.on_batch_begin"]], "on_batch_begin() (neurotorch.learning_algorithms.tbptt.tbptt method)": [[5, "neurotorch.learning_algorithms.tbptt.TBPTT.on_batch_begin"]], "on_batch_end() (neurotorch.learning_algorithms.eprop.eprop method)": [[5, "neurotorch.learning_algorithms.eprop.Eprop.on_batch_end"]], "on_batch_end() (neurotorch.learning_algorithms.rls.rls method)": [[5, "neurotorch.learning_algorithms.rls.RLS.on_batch_end"]], "on_batch_end() (neurotorch.learning_algorithms.tbptt.tbptt method)": [[5, "neurotorch.learning_algorithms.tbptt.TBPTT.on_batch_end"]], "on_optimization_begin() (neurotorch.learning_algorithms.bptt.bptt method)": [[5, "neurotorch.learning_algorithms.bptt.BPTT.on_optimization_begin"]], "on_optimization_begin() (neurotorch.learning_algorithms.rls.rls method)": [[5, "neurotorch.learning_algorithms.rls.RLS.on_optimization_begin"]], "on_optimization_begin() (neurotorch.learning_algorithms.tbptt.tbptt method)": [[5, "neurotorch.learning_algorithms.tbptt.TBPTT.on_optimization_begin"]], "on_optimization_end() (neurotorch.learning_algorithms.bptt.bptt method)": [[5, "neurotorch.learning_algorithms.bptt.BPTT.on_optimization_end"]], "on_optimization_end() (neurotorch.learning_algorithms.tbptt.tbptt method)": [[5, "neurotorch.learning_algorithms.tbptt.TBPTT.on_optimization_end"]], "on_validation_batch_begin() (neurotorch.learning_algorithms.bptt.bptt method)": [[5, "neurotorch.learning_algorithms.bptt.BPTT.on_validation_batch_begin"]], "optimization_step() (neurotorch.learning_algorithms.rls.rls method)": [[5, "neurotorch.learning_algorithms.rls.RLS.optimization_step"]], "outputs_mth_step() (neurotorch.learning_algorithms.rls.rls method)": [[5, "neurotorch.learning_algorithms.rls.RLS.outputs_mth_step"]], "scaled_jacobian_mth_step() (neurotorch.learning_algorithms.rls.rls method)": [[5, "neurotorch.learning_algorithms.rls.RLS.scaled_jacobian_mth_step"]], "start() (neurotorch.learning_algorithms.bptt.bptt method)": [[5, "neurotorch.learning_algorithms.bptt.BPTT.start"]], "start() (neurotorch.learning_algorithms.eprop.eprop method)": [[5, "neurotorch.learning_algorithms.eprop.Eprop.start"]], "start() (neurotorch.learning_algorithms.rls.rls method)": [[5, "neurotorch.learning_algorithms.rls.RLS.start"]], "start() (neurotorch.learning_algorithms.tbptt.tbptt method)": [[5, "neurotorch.learning_algorithms.tbptt.TBPTT.start"]], "undecorate_forwards() (neurotorch.learning_algorithms.tbptt.tbptt method)": [[5, "neurotorch.learning_algorithms.tbptt.TBPTT.undecorate_forwards"]], "update_grads() (neurotorch.learning_algorithms.eprop.eprop method)": [[5, "neurotorch.learning_algorithms.eprop.Eprop.update_grads"]], "basemetrics (class in neurotorch.metrics.base)": [[6, "neurotorch.metrics.base.BaseMetrics"]], "classificationmetrics (class in neurotorch.metrics.classification)": [[6, "neurotorch.metrics.classification.ClassificationMetrics"]], "epsilon (neurotorch.metrics.regression.regressionmetrics attribute)": [[6, "neurotorch.metrics.regression.RegressionMetrics.EPSILON"]], "metrics_names_sep (neurotorch.metrics.base.basemetrics attribute)": [[6, "neurotorch.metrics.base.BaseMetrics.METRICS_NAMES_SEP"]], "nllloss (class in neurotorch.metrics.losses)": [[6, "neurotorch.metrics.losses.NLLLoss"]], "pvarianceloss (class in neurotorch.metrics.losses)": [[6, "neurotorch.metrics.losses.PVarianceLoss"]], "rmseloss (class in neurotorch.metrics.losses)": [[6, "neurotorch.metrics.losses.RMSELoss"]], "regressionmetrics (class in neurotorch.metrics.regression)": [[6, "neurotorch.metrics.regression.RegressionMetrics"]], "smseloss (class in neurotorch.metrics.losses)": [[6, "neurotorch.metrics.losses.SMSEloss"]], "__call__() (neurotorch.metrics.base.basemetrics method)": [[6, "neurotorch.metrics.base.BaseMetrics.__call__"]], "__call__() (neurotorch.metrics.classification.classificationmetrics method)": [[6, "neurotorch.metrics.classification.ClassificationMetrics.__call__"]], "__call__() (neurotorch.metrics.regression.regressionmetrics method)": [[6, "neurotorch.metrics.regression.RegressionMetrics.__call__"]], "__init__() (neurotorch.metrics.base.basemetrics method)": [[6, "neurotorch.metrics.base.BaseMetrics.__init__"]], "__init__() (neurotorch.metrics.losses.nllloss method)": [[6, "neurotorch.metrics.losses.NLLLoss.__init__"]], "__init__() (neurotorch.metrics.losses.pvarianceloss method)": [[6, "neurotorch.metrics.losses.PVarianceLoss.__init__"]], "__init__() (neurotorch.metrics.losses.rmseloss method)": [[6, "neurotorch.metrics.losses.RMSELoss.__init__"]], "__init__() (neurotorch.metrics.losses.smseloss method)": [[6, "neurotorch.metrics.losses.SMSEloss.__init__"]], "accuracy() (neurotorch.metrics.classification.classificationmetrics static method)": [[6, "neurotorch.metrics.classification.ClassificationMetrics.accuracy"]], "auc() (neurotorch.metrics.classification.classificationmetrics static method)": [[6, "neurotorch.metrics.classification.ClassificationMetrics.auc"]], "compute_p_var() (neurotorch.metrics.regression.regressionmetrics static method)": [[6, "neurotorch.metrics.regression.RegressionMetrics.compute_p_var"]], "compute_y_true_y_pred() (neurotorch.metrics.classification.classificationmetrics static method)": [[6, "neurotorch.metrics.classification.ClassificationMetrics.compute_y_true_y_pred"]], "compute_y_true_y_pred() (neurotorch.metrics.regression.regressionmetrics static method)": [[6, "neurotorch.metrics.regression.RegressionMetrics.compute_y_true_y_pred"]], "confusion_matrix() (neurotorch.metrics.classification.classificationmetrics static method)": [[6, "neurotorch.metrics.classification.ClassificationMetrics.confusion_matrix"]], "d2_tweedie() (neurotorch.metrics.regression.regressionmetrics static method)": [[6, "neurotorch.metrics.regression.RegressionMetrics.d2_tweedie"]], "f1() (neurotorch.metrics.classification.classificationmetrics static method)": [[6, "neurotorch.metrics.classification.ClassificationMetrics.f1"]], "forward() (neurotorch.metrics.losses.nllloss method)": [[6, "neurotorch.metrics.losses.NLLLoss.forward"]], "forward() (neurotorch.metrics.losses.pvarianceloss method)": [[6, "neurotorch.metrics.losses.PVarianceLoss.forward"]], "forward() (neurotorch.metrics.losses.rmseloss method)": [[6, "neurotorch.metrics.losses.RMSELoss.forward"]], "forward() (neurotorch.metrics.losses.smseloss method)": [[6, "neurotorch.metrics.losses.SMSEloss.forward"]], "get_all_metrics_names() (neurotorch.metrics.base.basemetrics class method)": [[6, "neurotorch.metrics.base.BaseMetrics.get_all_metrics_names"]], "get_all_metrics_names_to_func() (neurotorch.metrics.base.basemetrics static method)": [[6, "neurotorch.metrics.base.BaseMetrics.get_all_metrics_names_to_func"]], "get_all_metrics_names_to_func() (neurotorch.metrics.classification.classificationmetrics static method)": [[6, "neurotorch.metrics.classification.ClassificationMetrics.get_all_metrics_names_to_func"]], "get_all_metrics_names_to_func() (neurotorch.metrics.regression.regressionmetrics static method)": [[6, "neurotorch.metrics.regression.RegressionMetrics.get_all_metrics_names_to_func"]], "get_unique_metrics_names() (neurotorch.metrics.base.basemetrics class method)": [[6, "neurotorch.metrics.base.BaseMetrics.get_unique_metrics_names"]], "get_unwrap_all_metrics_names_to_func() (neurotorch.metrics.base.basemetrics class method)": [[6, "neurotorch.metrics.base.BaseMetrics.get_unwrap_all_metrics_names_to_func"]], "mean_absolute_error() (neurotorch.metrics.regression.regressionmetrics static method)": [[6, "neurotorch.metrics.regression.RegressionMetrics.mean_absolute_error"]], "mean_squared_error() (neurotorch.metrics.regression.regressionmetrics static method)": [[6, "neurotorch.metrics.regression.RegressionMetrics.mean_squared_error"]], "mean_std_over_batch() (neurotorch.metrics.losses.pvarianceloss method)": [[6, "neurotorch.metrics.losses.PVarianceLoss.mean_std_over_batch"]], "metrics_functions (neurotorch.metrics.base.basemetrics property)": [[6, "neurotorch.metrics.base.BaseMetrics.metrics_functions"]], "neurotorch.metrics": [[6, "module-neurotorch.metrics"]], "neurotorch.metrics.base": [[6, "module-neurotorch.metrics.base"]], "neurotorch.metrics.classification": [[6, "module-neurotorch.metrics.classification"]], "neurotorch.metrics.losses": [[6, "module-neurotorch.metrics.losses"]], "neurotorch.metrics.regression": [[6, "module-neurotorch.metrics.regression"]], "p_var() (neurotorch.metrics.regression.regressionmetrics static method)": [[6, "neurotorch.metrics.regression.RegressionMetrics.p_var"]], "precision() (neurotorch.metrics.classification.classificationmetrics static method)": [[6, "neurotorch.metrics.classification.ClassificationMetrics.precision"]], "r2() (neurotorch.metrics.regression.regressionmetrics static method)": [[6, "neurotorch.metrics.regression.RegressionMetrics.r2"]], "recall() (neurotorch.metrics.classification.classificationmetrics static method)": [[6, "neurotorch.metrics.classification.ClassificationMetrics.recall"]], "basemodel (class in neurotorch.modules.base)": [[7, "neurotorch.modules.base.BaseModel"]], "dimensionscat (class in neurotorch.modules.utils)": [[7, "neurotorch.modules.utils.DimensionsCat"]], "fastsigmoid (neurotorch.modules.spike_funcs.spikefunctype attribute)": [[7, "neurotorch.modules.spike_funcs.SpikeFuncType.FastSigmoid"]], "heavisidephiapprox (class in neurotorch.modules.spike_funcs)": [[7, "neurotorch.modules.spike_funcs.HeavisidePhiApprox"]], "heavisidesigmoidapprox (class in neurotorch.modules.spike_funcs)": [[7, "neurotorch.modules.spike_funcs.HeavisideSigmoidApprox"]], "namedmodule (class in neurotorch.modules.base)": [[7, "neurotorch.modules.base.NamedModule"]], "namedmodulewrapper (class in neurotorch.modules.wrappers)": [[7, "neurotorch.modules.wrappers.NamedModuleWrapper"]], "psigmoid (class in neurotorch.modules.functions)": [[7, "neurotorch.modules.functions.PSigmoid"]], "phi (neurotorch.modules.spike_funcs.spikefunctype attribute)": [[7, "neurotorch.modules.spike_funcs.SpikeFuncType.Phi"]], "sequential (class in neurotorch.modules.sequential)": [[7, "neurotorch.modules.sequential.Sequential"]], "sequentialrnn (class in neurotorch.modules.sequential_rnn)": [[7, "neurotorch.modules.sequential_rnn.SequentialRNN"]], "sizedmodule (class in neurotorch.modules.base)": [[7, "neurotorch.modules.base.SizedModule"]], "sizedmodulewrapper (class in neurotorch.modules.wrappers)": [[7, "neurotorch.modules.wrappers.SizedModuleWrapper"]], "spikefunctype (class in neurotorch.modules.spike_funcs)": [[7, "neurotorch.modules.spike_funcs.SpikeFuncType"]], "spikefunction (class in neurotorch.modules.spike_funcs)": [[7, "neurotorch.modules.spike_funcs.SpikeFunction"]], "weirdtanh (class in neurotorch.modules.functions)": [[7, "neurotorch.modules.functions.WeirdTanh"]], "__call__() (neurotorch.modules.base.basemodel method)": [[7, "neurotorch.modules.base.BaseModel.__call__"]], "__call__() (neurotorch.modules.utils.dimensionscat method)": [[7, "neurotorch.modules.utils.DimensionsCat.__call__"]], "__init__() (neurotorch.modules.base.basemodel method)": [[7, "neurotorch.modules.base.BaseModel.__init__"]], "__init__() (neurotorch.modules.base.namedmodule method)": [[7, "neurotorch.modules.base.NamedModule.__init__"]], "__init__() (neurotorch.modules.base.sizedmodule method)": [[7, "neurotorch.modules.base.SizedModule.__init__"]], "__init__() (neurotorch.modules.functions.psigmoid method)": [[7, "neurotorch.modules.functions.PSigmoid.__init__"]], "__init__() (neurotorch.modules.functions.weirdtanh method)": [[7, "neurotorch.modules.functions.WeirdTanh.__init__"]], "__init__() (neurotorch.modules.sequential.sequential method)": [[7, "neurotorch.modules.sequential.Sequential.__init__"]], "__init__() (neurotorch.modules.sequential_rnn.sequentialrnn method)": [[7, "neurotorch.modules.sequential_rnn.SequentialRNN.__init__"]], "__init__() (neurotorch.modules.utils.dimensionscat method)": [[7, "neurotorch.modules.utils.DimensionsCat.__init__"]], "__init__() (neurotorch.modules.wrappers.namedmodulewrapper method)": [[7, "neurotorch.modules.wrappers.NamedModuleWrapper.__init__"]], "__init__() (neurotorch.modules.wrappers.sizedmodulewrapper method)": [[7, "neurotorch.modules.wrappers.SizedModuleWrapper.__init__"]], "apply_input_transform() (neurotorch.modules.base.basemodel method)": [[7, "neurotorch.modules.base.BaseModel.apply_input_transform"]], "apply_output_transform() (neurotorch.modules.base.basemodel method)": [[7, "neurotorch.modules.base.BaseModel.apply_output_transform"]], "axes (neurotorch.modules.utils.dimensionscat property)": [[7, "neurotorch.modules.utils.DimensionsCat.axes"]], "backward() (neurotorch.modules.spike_funcs.heavisidephiapprox static method)": [[7, "neurotorch.modules.spike_funcs.HeavisidePhiApprox.backward"]], "backward() (neurotorch.modules.spike_funcs.heavisidesigmoidapprox static method)": [[7, "neurotorch.modules.spike_funcs.HeavisideSigmoidApprox.backward"]], "backward() (neurotorch.modules.spike_funcs.spikefunction static method)": [[7, "neurotorch.modules.spike_funcs.SpikeFunction.backward"]], "build() (neurotorch.modules.base.basemodel method)": [[7, "neurotorch.modules.base.BaseModel.build"]], "build() (neurotorch.modules.sequential.sequential method)": [[7, "neurotorch.modules.sequential.Sequential.build"]], "build() (neurotorch.modules.sequential_rnn.sequentialrnn method)": [[7, "neurotorch.modules.sequential_rnn.SequentialRNN.build"]], "build_layers() (neurotorch.modules.sequential.sequential method)": [[7, "neurotorch.modules.sequential.Sequential.build_layers"]], "checkpoints_meta_path (neurotorch.modules.base.basemodel property)": [[7, "neurotorch.modules.base.BaseModel.checkpoints_meta_path"]], "device (neurotorch.modules.base.basemodel property)": [[7, "neurotorch.modules.base.BaseModel.device"]], "device (neurotorch.modules.sequential.sequential property)": [[7, "neurotorch.modules.sequential.Sequential.device"]], "epsilon (neurotorch.modules.spike_funcs.heavisidephiapprox attribute)": [[7, "neurotorch.modules.spike_funcs.HeavisidePhiApprox.epsilon"]], "forward() (neurotorch.modules.base.basemodel method)": [[7, "neurotorch.modules.base.BaseModel.forward"]], "forward() (neurotorch.modules.functions.psigmoid method)": [[7, "neurotorch.modules.functions.PSigmoid.forward"]], "forward() (neurotorch.modules.functions.weirdtanh method)": [[7, "neurotorch.modules.functions.WeirdTanh.forward"]], "forward() (neurotorch.modules.sequential.sequential method)": [[7, "neurotorch.modules.sequential.Sequential.forward"]], "forward() (neurotorch.modules.sequential_rnn.sequentialrnn method)": [[7, "neurotorch.modules.sequential_rnn.SequentialRNN.forward"]], "forward() (neurotorch.modules.spike_funcs.spikefunction static method)": [[7, "neurotorch.modules.spike_funcs.SpikeFunction.forward"]], "forward() (neurotorch.modules.wrappers.namedmodulewrapper method)": [[7, "neurotorch.modules.wrappers.NamedModuleWrapper.forward"]], "forward() (neurotorch.modules.wrappers.sizedmodulewrapper method)": [[7, "neurotorch.modules.wrappers.SizedModuleWrapper.forward"]], "get_all_layers() (neurotorch.modules.sequential.sequential method)": [[7, "neurotorch.modules.sequential.Sequential.get_all_layers"]], "get_all_layers_names() (neurotorch.modules.sequential.sequential method)": [[7, "neurotorch.modules.sequential.Sequential.get_all_layers_names"]], "get_and_reset_regularization_loss() (neurotorch.modules.sequential.sequential method)": [[7, "neurotorch.modules.sequential.Sequential.get_and_reset_regularization_loss"]], "get_and_reset_regularization_loss() (neurotorch.modules.sequential_rnn.sequentialrnn method)": [[7, "neurotorch.modules.sequential_rnn.SequentialRNN.get_and_reset_regularization_loss"]], "get_default_input_transform() (neurotorch.modules.base.basemodel method)": [[7, "neurotorch.modules.base.BaseModel.get_default_input_transform"]], "get_default_output_transform() (neurotorch.modules.base.basemodel method)": [[7, "neurotorch.modules.base.BaseModel.get_default_output_transform"]], "get_dict_of_layers() (neurotorch.modules.sequential.sequential method)": [[7, "neurotorch.modules.sequential.Sequential.get_dict_of_layers"]], "get_fmt_prediction() (neurotorch.modules.sequential_rnn.sequentialrnn method)": [[7, "neurotorch.modules.sequential_rnn.SequentialRNN.get_fmt_prediction"]], "get_last_prediction() (neurotorch.modules.sequential_rnn.sequentialrnn method)": [[7, "neurotorch.modules.sequential_rnn.SequentialRNN.get_last_prediction"]], "get_layer() (neurotorch.modules.sequential.sequential method)": [[7, "neurotorch.modules.sequential.Sequential.get_layer"]], "get_layers() (neurotorch.modules.sequential.sequential method)": [[7, "neurotorch.modules.sequential.Sequential.get_layers"]], "get_max_prediction() (neurotorch.modules.sequential_rnn.sequentialrnn method)": [[7, "neurotorch.modules.sequential_rnn.SequentialRNN.get_max_prediction"]], "get_mean_prediction() (neurotorch.modules.sequential_rnn.sequentialrnn method)": [[7, "neurotorch.modules.sequential_rnn.SequentialRNN.get_mean_prediction"]], "get_prediction_log_proba() (neurotorch.modules.base.basemodel method)": [[7, "neurotorch.modules.base.BaseModel.get_prediction_log_proba"]], "get_prediction_log_proba() (neurotorch.modules.sequential.sequential method)": [[7, "neurotorch.modules.sequential.Sequential.get_prediction_log_proba"]], "get_prediction_log_proba() (neurotorch.modules.sequential_rnn.sequentialrnn method)": [[7, "neurotorch.modules.sequential_rnn.SequentialRNN.get_prediction_log_proba"]], "get_prediction_proba() (neurotorch.modules.base.basemodel method)": [[7, "neurotorch.modules.base.BaseModel.get_prediction_proba"]], "get_prediction_proba() (neurotorch.modules.sequential.sequential method)": [[7, "neurotorch.modules.sequential.Sequential.get_prediction_proba"]], "get_prediction_proba() (neurotorch.modules.sequential_rnn.sequentialrnn method)": [[7, "neurotorch.modules.sequential_rnn.SequentialRNN.get_prediction_proba"]], "get_prediction_trace() (neurotorch.modules.base.basemodel method)": [[7, "neurotorch.modules.base.BaseModel.get_prediction_trace"]], "get_prediction_trace() (neurotorch.modules.sequential_rnn.sequentialrnn method)": [[7, "neurotorch.modules.sequential_rnn.SequentialRNN.get_prediction_trace"]], "get_raw_prediction() (neurotorch.modules.base.basemodel method)": [[7, "neurotorch.modules.base.BaseModel.get_raw_prediction"]], "get_raw_prediction() (neurotorch.modules.sequential.sequential method)": [[7, "neurotorch.modules.sequential.Sequential.get_raw_prediction"]], "get_raw_prediction() (neurotorch.modules.sequential_rnn.sequentialrnn method)": [[7, "neurotorch.modules.sequential_rnn.SequentialRNN.get_raw_prediction"]], "hard_update() (neurotorch.modules.base.basemodel method)": [[7, "neurotorch.modules.base.BaseModel.hard_update"]], "hh_memory_size (neurotorch.modules.sequential_rnn.sequentialrnn property)": [[7, "neurotorch.modules.sequential_rnn.SequentialRNN.hh_memory_size"]], "infer_input_size() (neurotorch.modules.wrappers.sizedmodulewrapper method)": [[7, "neurotorch.modules.wrappers.SizedModuleWrapper.infer_input_size"]], "infer_output_size() (neurotorch.modules.wrappers.sizedmodulewrapper method)": [[7, "neurotorch.modules.wrappers.SizedModuleWrapper.infer_output_size"]], "infer_sizes_from_inputs() (neurotorch.modules.base.basemodel method)": [[7, "neurotorch.modules.base.BaseModel.infer_sizes_from_inputs"]], "infer_sizes_from_inputs() (neurotorch.modules.sequential.sequential method)": [[7, "neurotorch.modules.sequential.Sequential.infer_sizes_from_inputs"]], "initialize_weights_() (neurotorch.modules.sequential.sequential method)": [[7, "neurotorch.modules.sequential.Sequential.initialize_weights_"]], "input_size (neurotorch.modules.base.sizedmodule property)": [[7, "neurotorch.modules.base.SizedModule.input_size"]], "input_sizes (neurotorch.modules.base.basemodel property)": [[7, "neurotorch.modules.base.BaseModel.input_sizes"]], "is_built (neurotorch.modules.base.basemodel property)": [[7, "neurotorch.modules.base.BaseModel.is_built"]], "load_checkpoint() (neurotorch.modules.base.basemodel method)": [[7, "neurotorch.modules.base.BaseModel.load_checkpoint"]], "name (neurotorch.modules.base.namedmodule property)": [[7, "neurotorch.modules.base.NamedModule.name"]], "name_is_set (neurotorch.modules.base.namedmodule property)": [[7, "neurotorch.modules.base.NamedModule.name_is_set"]], "neurotorch.modules": [[7, "module-neurotorch.modules"]], "neurotorch.modules.base": [[7, "module-neurotorch.modules.base"]], "neurotorch.modules.functions": [[7, "module-neurotorch.modules.functions"]], "neurotorch.modules.sequential": [[7, "module-neurotorch.modules.sequential"]], "neurotorch.modules.sequential_rnn": [[7, "module-neurotorch.modules.sequential_rnn"]], "neurotorch.modules.spike_funcs": [[7, "module-neurotorch.modules.spike_funcs"]], "neurotorch.modules.utils": [[7, "module-neurotorch.modules.utils"]], "neurotorch.modules.wrappers": [[7, "module-neurotorch.modules.wrappers"]], "out_memory_size (neurotorch.modules.sequential_rnn.sequentialrnn property)": [[7, "neurotorch.modules.sequential_rnn.SequentialRNN.out_memory_size"]], "output_size (neurotorch.modules.base.sizedmodule property)": [[7, "neurotorch.modules.base.SizedModule.output_size"]], "output_sizes (neurotorch.modules.base.basemodel property)": [[7, "neurotorch.modules.base.BaseModel.output_sizes"]], "p (neurotorch.modules.functions.psigmoid property)": [[7, "neurotorch.modules.functions.PSigmoid.p"]], "pseudo_derivative() (neurotorch.modules.spike_funcs.heavisidephiapprox static method)": [[7, "neurotorch.modules.spike_funcs.HeavisidePhiApprox.pseudo_derivative"]], "soft_update() (neurotorch.modules.base.basemodel method)": [[7, "neurotorch.modules.base.BaseModel.soft_update"]], "to() (neurotorch.modules.base.basemodel method)": [[7, "neurotorch.modules.base.BaseModel.to"]], "to_onnx() (neurotorch.modules.base.basemodel method)": [[7, "neurotorch.modules.base.BaseModel.to_onnx"]], "alif (neurotorch.modules.layers.layertype attribute)": [[8, "neurotorch.modules.layers.LayerType.ALIF"]], "aliflayer (class in neurotorch.modules.layers.spiking)": [[8, "neurotorch.modules.layers.spiking.ALIFLayer"]], "aliflayerlpf (class in neurotorch.modules.layers.spiking_lpf)": [[8, "neurotorch.modules.layers.spiking_lpf.ALIFLayerLPF"]], "baselayer (class in neurotorch.modules.layers.base)": [[8, "neurotorch.modules.layers.base.BaseLayer"]], "baseneuronslayer (class in neurotorch.modules.layers.base)": [[8, "neurotorch.modules.layers.base.BaseNeuronsLayer"]], "bellecliflayer (class in neurotorch.modules.layers.spiking)": [[8, "neurotorch.modules.layers.spiking.BellecLIFLayer"]], "izhikevich (neurotorch.modules.layers.layertype attribute)": [[8, "neurotorch.modules.layers.LayerType.Izhikevich"]], "izhikevichlayer (class in neurotorch.modules.layers.spiking)": [[8, "neurotorch.modules.layers.spiking.IzhikevichLayer"]], "li (neurotorch.modules.layers.layertype attribute)": [[8, "neurotorch.modules.layers.LayerType.LI"]], "lif (neurotorch.modules.layers.layertype attribute)": [[8, "neurotorch.modules.layers.LayerType.LIF"]], "liflayer (class in neurotorch.modules.layers.spiking)": [[8, "neurotorch.modules.layers.spiking.LIFLayer"]], "liflayerlpf (class in neurotorch.modules.layers.spiking_lpf)": [[8, "neurotorch.modules.layers.spiking_lpf.LIFLayerLPF"]], "lilayer (class in neurotorch.modules.layers.leaky_integrate)": [[8, "neurotorch.modules.layers.leaky_integrate.LILayer"]], "layertype (class in neurotorch.modules.layers)": [[8, "neurotorch.modules.layers.LayerType"]], "linear (class in neurotorch.modules.layers.classical)": [[8, "neurotorch.modules.layers.classical.Linear"]], "linearrnn (class in neurotorch.modules.layers.classical)": [[8, "neurotorch.modules.layers.classical.LinearRNN"]], "spyalif (neurotorch.modules.layers.layertype attribute)": [[8, "neurotorch.modules.layers.LayerType.SpyALIF"]], "spyaliflayer (class in neurotorch.modules.layers.spiking)": [[8, "neurotorch.modules.layers.spiking.SpyALIFLayer"]], "spyaliflayerlpf (class in neurotorch.modules.layers.spiking_lpf)": [[8, "neurotorch.modules.layers.spiking_lpf.SpyALIFLayerLPF"]], "spyli (neurotorch.modules.layers.layertype attribute)": [[8, "neurotorch.modules.layers.LayerType.SpyLI"]], "spylif (neurotorch.modules.layers.layertype attribute)": [[8, "neurotorch.modules.layers.LayerType.SpyLIF"]], "spyliflayer (class in neurotorch.modules.layers.spiking)": [[8, "neurotorch.modules.layers.spiking.SpyLIFLayer"]], "spyliflayerlpf (class in neurotorch.modules.layers.spiking_lpf)": [[8, "neurotorch.modules.layers.spiking_lpf.SpyLIFLayerLPF"]], "spylilayer (class in neurotorch.modules.layers.leaky_integrate)": [[8, "neurotorch.modules.layers.leaky_integrate.SpyLILayer"]], "wilsoncowancurbdlayer (class in neurotorch.modules.layers.wilson_cowan)": [[8, "neurotorch.modules.layers.wilson_cowan.WilsonCowanCURBDLayer"]], "wilsoncowanlayer (class in neurotorch.modules.layers.wilson_cowan)": [[8, "neurotorch.modules.layers.wilson_cowan.WilsonCowanLayer"]], "__call__() (neurotorch.modules.layers.base.baselayer method)": [[8, "neurotorch.modules.layers.base.BaseLayer.__call__"]], "__init__() (neurotorch.modules.layers.base.baselayer method)": [[8, "neurotorch.modules.layers.base.BaseLayer.__init__"]], "__init__() (neurotorch.modules.layers.base.baseneuronslayer method)": [[8, "neurotorch.modules.layers.base.BaseNeuronsLayer.__init__"]], "__init__() (neurotorch.modules.layers.classical.linear method)": [[8, "neurotorch.modules.layers.classical.Linear.__init__"]], "__init__() (neurotorch.modules.layers.classical.linearrnn method)": [[8, "neurotorch.modules.layers.classical.LinearRNN.__init__"]], "__init__() (neurotorch.modules.layers.leaky_integrate.lilayer method)": [[8, "neurotorch.modules.layers.leaky_integrate.LILayer.__init__"]], "__init__() (neurotorch.modules.layers.leaky_integrate.spylilayer method)": [[8, "neurotorch.modules.layers.leaky_integrate.SpyLILayer.__init__"]], "__init__() (neurotorch.modules.layers.spiking.aliflayer method)": [[8, "neurotorch.modules.layers.spiking.ALIFLayer.__init__"]], "__init__() (neurotorch.modules.layers.spiking.bellecliflayer method)": [[8, "neurotorch.modules.layers.spiking.BellecLIFLayer.__init__"]], "__init__() (neurotorch.modules.layers.spiking.izhikevichlayer method)": [[8, "neurotorch.modules.layers.spiking.IzhikevichLayer.__init__"]], "__init__() (neurotorch.modules.layers.spiking.liflayer method)": [[8, "neurotorch.modules.layers.spiking.LIFLayer.__init__"]], "__init__() (neurotorch.modules.layers.spiking.spyaliflayer method)": [[8, "neurotorch.modules.layers.spiking.SpyALIFLayer.__init__"]], "__init__() (neurotorch.modules.layers.spiking.spyliflayer method)": [[8, "neurotorch.modules.layers.spiking.SpyLIFLayer.__init__"]], "__init__() (neurotorch.modules.layers.spiking_lpf.aliflayerlpf method)": [[8, "neurotorch.modules.layers.spiking_lpf.ALIFLayerLPF.__init__"]], "__init__() (neurotorch.modules.layers.spiking_lpf.liflayerlpf method)": [[8, "neurotorch.modules.layers.spiking_lpf.LIFLayerLPF.__init__"]], "__init__() (neurotorch.modules.layers.spiking_lpf.spyaliflayerlpf method)": [[8, "neurotorch.modules.layers.spiking_lpf.SpyALIFLayerLPF.__init__"]], "__init__() (neurotorch.modules.layers.spiking_lpf.spyliflayerlpf method)": [[8, "neurotorch.modules.layers.spiking_lpf.SpyLIFLayerLPF.__init__"]], "__init__() (neurotorch.modules.layers.wilson_cowan.wilsoncowancurbdlayer method)": [[8, "neurotorch.modules.layers.wilson_cowan.WilsonCowanCURBDLayer.__init__"]], "__init__() (neurotorch.modules.layers.wilson_cowan.wilsoncowanlayer method)": [[8, "neurotorch.modules.layers.wilson_cowan.WilsonCowanLayer.__init__"]], "build() (neurotorch.modules.layers.base.baselayer method)": [[8, "neurotorch.modules.layers.base.BaseLayer.build"]], "build() (neurotorch.modules.layers.base.baseneuronslayer method)": [[8, "neurotorch.modules.layers.base.BaseNeuronsLayer.build"]], "build() (neurotorch.modules.layers.classical.linear method)": [[8, "neurotorch.modules.layers.classical.Linear.build"]], "build() (neurotorch.modules.layers.classical.linearrnn method)": [[8, "neurotorch.modules.layers.classical.LinearRNN.build"]], "build() (neurotorch.modules.layers.leaky_integrate.lilayer method)": [[8, "neurotorch.modules.layers.leaky_integrate.LILayer.build"]], "build() (neurotorch.modules.layers.leaky_integrate.spylilayer method)": [[8, "neurotorch.modules.layers.leaky_integrate.SpyLILayer.build"]], "connectivity_convention (neurotorch.modules.layers.base.baseneuronslayer property)": [[8, "neurotorch.modules.layers.base.BaseNeuronsLayer.connectivity_convention"]], "create_empty_state() (neurotorch.modules.layers.base.baselayer method)": [[8, "neurotorch.modules.layers.base.BaseLayer.create_empty_state"]], "create_empty_state() (neurotorch.modules.layers.base.baseneuronslayer method)": [[8, "neurotorch.modules.layers.base.BaseNeuronsLayer.create_empty_state"]], "create_empty_state() (neurotorch.modules.layers.classical.linear method)": [[8, "neurotorch.modules.layers.classical.Linear.create_empty_state"]], "create_empty_state() (neurotorch.modules.layers.classical.linearrnn method)": [[8, "neurotorch.modules.layers.classical.LinearRNN.create_empty_state"]], "create_empty_state() (neurotorch.modules.layers.leaky_integrate.lilayer method)": [[8, "neurotorch.modules.layers.leaky_integrate.LILayer.create_empty_state"]], "create_empty_state() (neurotorch.modules.layers.leaky_integrate.spylilayer method)": [[8, "neurotorch.modules.layers.leaky_integrate.SpyLILayer.create_empty_state"]], "create_empty_state() (neurotorch.modules.layers.spiking.aliflayer method)": [[8, "neurotorch.modules.layers.spiking.ALIFLayer.create_empty_state"]], "create_empty_state() (neurotorch.modules.layers.spiking.izhikevichlayer method)": [[8, "neurotorch.modules.layers.spiking.IzhikevichLayer.create_empty_state"]], "create_empty_state() (neurotorch.modules.layers.spiking.liflayer method)": [[8, "neurotorch.modules.layers.spiking.LIFLayer.create_empty_state"]], "create_empty_state() (neurotorch.modules.layers.spiking.spyaliflayer method)": [[8, "neurotorch.modules.layers.spiking.SpyALIFLayer.create_empty_state"]], "create_empty_state() (neurotorch.modules.layers.spiking.spyliflayer method)": [[8, "neurotorch.modules.layers.spiking.SpyLIFLayer.create_empty_state"]], "create_empty_state() (neurotorch.modules.layers.spiking_lpf.aliflayerlpf method)": [[8, "neurotorch.modules.layers.spiking_lpf.ALIFLayerLPF.create_empty_state"]], "create_empty_state() (neurotorch.modules.layers.spiking_lpf.liflayerlpf method)": [[8, "neurotorch.modules.layers.spiking_lpf.LIFLayerLPF.create_empty_state"]], "create_empty_state() (neurotorch.modules.layers.spiking_lpf.spyaliflayerlpf method)": [[8, "neurotorch.modules.layers.spiking_lpf.SpyALIFLayerLPF.create_empty_state"]], "create_empty_state() (neurotorch.modules.layers.spiking_lpf.spyliflayerlpf method)": [[8, "neurotorch.modules.layers.spiking_lpf.SpyLIFLayerLPF.create_empty_state"]], "create_empty_state() (neurotorch.modules.layers.wilson_cowan.wilsoncowancurbdlayer method)": [[8, "neurotorch.modules.layers.wilson_cowan.WilsonCowanCURBDLayer.create_empty_state"]], "create_empty_state() (neurotorch.modules.layers.wilson_cowan.wilsoncowanlayer method)": [[8, "neurotorch.modules.layers.wilson_cowan.WilsonCowanLayer.create_empty_state"]], "device (neurotorch.modules.layers.base.baselayer property)": [[8, "neurotorch.modules.layers.base.BaseLayer.device"]], "extra_repr() (neurotorch.modules.layers.classical.linear method)": [[8, "neurotorch.modules.layers.classical.Linear.extra_repr"]], "extra_repr() (neurotorch.modules.layers.classical.linearrnn method)": [[8, "neurotorch.modules.layers.classical.LinearRNN.extra_repr"]], "extra_repr() (neurotorch.modules.layers.leaky_integrate.lilayer method)": [[8, "neurotorch.modules.layers.leaky_integrate.LILayer.extra_repr"]], "extra_repr() (neurotorch.modules.layers.leaky_integrate.spylilayer method)": [[8, "neurotorch.modules.layers.leaky_integrate.SpyLILayer.extra_repr"]], "extra_repr() (neurotorch.modules.layers.spiking_lpf.aliflayerlpf method)": [[8, "neurotorch.modules.layers.spiking_lpf.ALIFLayerLPF.extra_repr"]], "extra_repr() (neurotorch.modules.layers.spiking_lpf.liflayerlpf method)": [[8, "neurotorch.modules.layers.spiking_lpf.LIFLayerLPF.extra_repr"]], "extra_repr() (neurotorch.modules.layers.spiking_lpf.spyaliflayerlpf method)": [[8, "neurotorch.modules.layers.spiking_lpf.SpyALIFLayerLPF.extra_repr"]], "extra_repr() (neurotorch.modules.layers.spiking_lpf.spyliflayerlpf method)": [[8, "neurotorch.modules.layers.spiking_lpf.SpyLIFLayerLPF.extra_repr"]], "force_dale_law (neurotorch.modules.layers.base.baseneuronslayer property)": [[8, "neurotorch.modules.layers.base.BaseNeuronsLayer.force_dale_law"]], "forward() (neurotorch.modules.layers.base.baselayer method)": [[8, "neurotorch.modules.layers.base.BaseLayer.forward"]], "forward() (neurotorch.modules.layers.base.baseneuronslayer method)": [[8, "neurotorch.modules.layers.base.BaseNeuronsLayer.forward"]], "forward() (neurotorch.modules.layers.classical.linear method)": [[8, "neurotorch.modules.layers.classical.Linear.forward"]], "forward() (neurotorch.modules.layers.classical.linearrnn method)": [[8, "neurotorch.modules.layers.classical.LinearRNN.forward"]], "forward() (neurotorch.modules.layers.leaky_integrate.lilayer method)": [[8, "neurotorch.modules.layers.leaky_integrate.LILayer.forward"]], "forward() (neurotorch.modules.layers.leaky_integrate.spylilayer method)": [[8, "neurotorch.modules.layers.leaky_integrate.SpyLILayer.forward"]], "forward() (neurotorch.modules.layers.spiking.aliflayer method)": [[8, "neurotorch.modules.layers.spiking.ALIFLayer.forward"]], "forward() (neurotorch.modules.layers.spiking.bellecliflayer method)": [[8, "neurotorch.modules.layers.spiking.BellecLIFLayer.forward"]], "forward() (neurotorch.modules.layers.spiking.izhikevichlayer method)": [[8, "neurotorch.modules.layers.spiking.IzhikevichLayer.forward"]], "forward() (neurotorch.modules.layers.spiking.liflayer method)": [[8, "neurotorch.modules.layers.spiking.LIFLayer.forward"]], "forward() (neurotorch.modules.layers.spiking.spyaliflayer method)": [[8, "neurotorch.modules.layers.spiking.SpyALIFLayer.forward"]], "forward() (neurotorch.modules.layers.spiking.spyliflayer method)": [[8, "neurotorch.modules.layers.spiking.SpyLIFLayer.forward"]], "forward() (neurotorch.modules.layers.spiking_lpf.aliflayerlpf method)": [[8, "neurotorch.modules.layers.spiking_lpf.ALIFLayerLPF.forward"]], "forward() (neurotorch.modules.layers.spiking_lpf.liflayerlpf method)": [[8, "neurotorch.modules.layers.spiking_lpf.LIFLayerLPF.forward"]], "forward() (neurotorch.modules.layers.spiking_lpf.spyaliflayerlpf method)": [[8, "neurotorch.modules.layers.spiking_lpf.SpyALIFLayerLPF.forward"]], "forward() (neurotorch.modules.layers.spiking_lpf.spyliflayerlpf method)": [[8, "neurotorch.modules.layers.spiking_lpf.SpyLIFLayerLPF.forward"]], "forward() (neurotorch.modules.layers.wilson_cowan.wilsoncowancurbdlayer method)": [[8, "neurotorch.modules.layers.wilson_cowan.WilsonCowanCURBDLayer.forward"]], "forward() (neurotorch.modules.layers.wilson_cowan.wilsoncowanlayer method)": [[8, "neurotorch.modules.layers.wilson_cowan.WilsonCowanLayer.forward"]], "forward_sign (neurotorch.modules.layers.base.baseneuronslayer property)": [[8, "neurotorch.modules.layers.base.BaseNeuronsLayer.forward_sign"]], "forward_weights (neurotorch.modules.layers.base.baseneuronslayer property)": [[8, "neurotorch.modules.layers.base.BaseNeuronsLayer.forward_weights"]], "freeze_weights (neurotorch.modules.layers.base.baselayer property)": [[8, "neurotorch.modules.layers.base.BaseLayer.freeze_weights"]], "from_str() (neurotorch.modules.layers.layertype class method)": [[8, "neurotorch.modules.layers.LayerType.from_str"]], "get_and_reset_regularization_loss() (neurotorch.modules.layers.base.baselayer method)": [[8, "neurotorch.modules.layers.base.BaseLayer.get_and_reset_regularization_loss"]], "get_forward_sign_parameter() (neurotorch.modules.layers.base.baseneuronslayer method)": [[8, "neurotorch.modules.layers.base.BaseNeuronsLayer.get_forward_sign_parameter"]], "get_forward_weights_data() (neurotorch.modules.layers.base.baseneuronslayer method)": [[8, "neurotorch.modules.layers.base.BaseNeuronsLayer.get_forward_weights_data"]], "get_forward_weights_parameter() (neurotorch.modules.layers.base.baseneuronslayer method)": [[8, "neurotorch.modules.layers.base.BaseNeuronsLayer.get_forward_weights_parameter"]], "get_recurrent_sign_parameter() (neurotorch.modules.layers.base.baseneuronslayer method)": [[8, "neurotorch.modules.layers.base.BaseNeuronsLayer.get_recurrent_sign_parameter"]], "get_recurrent_weights_data() (neurotorch.modules.layers.base.baseneuronslayer method)": [[8, "neurotorch.modules.layers.base.BaseNeuronsLayer.get_recurrent_weights_data"]], "get_recurrent_weights_parameter() (neurotorch.modules.layers.base.baseneuronslayer method)": [[8, "neurotorch.modules.layers.base.BaseNeuronsLayer.get_recurrent_weights_parameter"]], "get_regularization_loss() (neurotorch.modules.layers.base.baselayer method)": [[8, "neurotorch.modules.layers.base.BaseLayer.get_regularization_loss"]], "get_sign_parameters() (neurotorch.modules.layers.base.baseneuronslayer method)": [[8, "neurotorch.modules.layers.base.BaseNeuronsLayer.get_sign_parameters"]], "get_weights_parameters() (neurotorch.modules.layers.base.baseneuronslayer method)": [[8, "neurotorch.modules.layers.base.BaseNeuronsLayer.get_weights_parameters"]], "infer_sizes_from_inputs() (neurotorch.modules.layers.base.baselayer method)": [[8, "neurotorch.modules.layers.base.BaseLayer.infer_sizes_from_inputs"]], "initialize_weights_() (neurotorch.modules.layers.base.baselayer method)": [[8, "neurotorch.modules.layers.base.BaseLayer.initialize_weights_"]], "initialize_weights_() (neurotorch.modules.layers.base.baseneuronslayer method)": [[8, "neurotorch.modules.layers.base.BaseNeuronsLayer.initialize_weights_"]], "initialize_weights_() (neurotorch.modules.layers.classical.linear method)": [[8, "neurotorch.modules.layers.classical.Linear.initialize_weights_"]], "initialize_weights_() (neurotorch.modules.layers.classical.linearrnn method)": [[8, "neurotorch.modules.layers.classical.LinearRNN.initialize_weights_"]], "initialize_weights_() (neurotorch.modules.layers.leaky_integrate.lilayer method)": [[8, "neurotorch.modules.layers.leaky_integrate.LILayer.initialize_weights_"]], "initialize_weights_() (neurotorch.modules.layers.leaky_integrate.spylilayer method)": [[8, "neurotorch.modules.layers.leaky_integrate.SpyLILayer.initialize_weights_"]], "initialize_weights_() (neurotorch.modules.layers.spiking.izhikevichlayer method)": [[8, "neurotorch.modules.layers.spiking.IzhikevichLayer.initialize_weights_"]], "initialize_weights_() (neurotorch.modules.layers.spiking.liflayer method)": [[8, "neurotorch.modules.layers.spiking.LIFLayer.initialize_weights_"]], "initialize_weights_() (neurotorch.modules.layers.spiking.spyaliflayer method)": [[8, "neurotorch.modules.layers.spiking.SpyALIFLayer.initialize_weights_"]], "initialize_weights_() (neurotorch.modules.layers.spiking.spyliflayer method)": [[8, "neurotorch.modules.layers.spiking.SpyLIFLayer.initialize_weights_"]], "initialize_weights_() (neurotorch.modules.layers.wilson_cowan.wilsoncowanlayer method)": [[8, "neurotorch.modules.layers.wilson_cowan.WilsonCowanLayer.initialize_weights_"]], "is_built (neurotorch.modules.layers.base.baselayer property)": [[8, "neurotorch.modules.layers.base.BaseLayer.is_built"]], "is_ready_to_build (neurotorch.modules.layers.base.baselayer property)": [[8, "neurotorch.modules.layers.base.BaseLayer.is_ready_to_build"]], "neurotorch.modules.layers": [[8, "module-neurotorch.modules.layers"]], "neurotorch.modules.layers.base": [[8, "module-neurotorch.modules.layers.base"]], "neurotorch.modules.layers.classical": [[8, "module-neurotorch.modules.layers.classical"]], "neurotorch.modules.layers.leaky_integrate": [[8, "module-neurotorch.modules.layers.leaky_integrate"]], "neurotorch.modules.layers.spiking": [[8, "module-neurotorch.modules.layers.spiking"]], "neurotorch.modules.layers.spiking_lpf": [[8, "module-neurotorch.modules.layers.spiking_lpf"]], "neurotorch.modules.layers.wilson_cowan": [[8, "module-neurotorch.modules.layers.wilson_cowan"]], "r (neurotorch.modules.layers.wilson_cowan.wilsoncowanlayer property)": [[8, "neurotorch.modules.layers.wilson_cowan.WilsonCowanLayer.r"]], "recurrent_sign (neurotorch.modules.layers.base.baseneuronslayer property)": [[8, "neurotorch.modules.layers.base.BaseNeuronsLayer.recurrent_sign"]], "recurrent_weights (neurotorch.modules.layers.base.baseneuronslayer property)": [[8, "neurotorch.modules.layers.base.BaseNeuronsLayer.recurrent_weights"]], "requires_grad (neurotorch.modules.layers.base.baselayer property)": [[8, "neurotorch.modules.layers.base.BaseLayer.requires_grad"]], "reset_regularization_loss() (neurotorch.modules.layers.base.baselayer method)": [[8, "neurotorch.modules.layers.base.BaseLayer.reset_regularization_loss"]], "reset_regularization_loss() (neurotorch.modules.layers.spiking.spyaliflayer method)": [[8, "neurotorch.modules.layers.spiking.SpyALIFLayer.reset_regularization_loss"]], "reset_regularization_loss() (neurotorch.modules.layers.spiking.spyliflayer method)": [[8, "neurotorch.modules.layers.spiking.SpyLIFLayer.reset_regularization_loss"]], "set_forward_sign_parameter() (neurotorch.modules.layers.base.baseneuronslayer method)": [[8, "neurotorch.modules.layers.base.BaseNeuronsLayer.set_forward_sign_parameter"]], "set_forward_weights_data() (neurotorch.modules.layers.base.baseneuronslayer method)": [[8, "neurotorch.modules.layers.base.BaseNeuronsLayer.set_forward_weights_data"]], "set_forward_weights_parameter() (neurotorch.modules.layers.base.baseneuronslayer method)": [[8, "neurotorch.modules.layers.base.BaseNeuronsLayer.set_forward_weights_parameter"]], "set_recurrent_sign_parameter() (neurotorch.modules.layers.base.baseneuronslayer method)": [[8, "neurotorch.modules.layers.base.BaseNeuronsLayer.set_recurrent_sign_parameter"]], "set_recurrent_weights_data() (neurotorch.modules.layers.base.baseneuronslayer method)": [[8, "neurotorch.modules.layers.base.BaseNeuronsLayer.set_recurrent_weights_data"]], "set_recurrent_weights_parameter() (neurotorch.modules.layers.base.baseneuronslayer method)": [[8, "neurotorch.modules.layers.base.BaseNeuronsLayer.set_recurrent_weights_parameter"]], "tau (neurotorch.modules.layers.wilson_cowan.wilsoncowanlayer property)": [[8, "neurotorch.modules.layers.wilson_cowan.WilsonCowanLayer.tau"]], "to() (neurotorch.modules.layers.base.baselayer method)": [[8, "neurotorch.modules.layers.base.BaseLayer.to"]], "update_regularization_loss() (neurotorch.modules.layers.base.baselayer method)": [[8, "neurotorch.modules.layers.base.BaseLayer.update_regularization_loss"]], "update_regularization_loss() (neurotorch.modules.layers.spiking.aliflayer method)": [[8, "neurotorch.modules.layers.spiking.ALIFLayer.update_regularization_loss"]], "update_regularization_loss() (neurotorch.modules.layers.spiking.liflayer method)": [[8, "neurotorch.modules.layers.spiking.LIFLayer.update_regularization_loss"]], "update_regularization_loss() (neurotorch.modules.layers.spiking.spyaliflayer method)": [[8, "neurotorch.modules.layers.spiking.SpyALIFLayer.update_regularization_loss"]], "update_regularization_loss() (neurotorch.modules.layers.spiking.spyliflayer method)": [[8, "neurotorch.modules.layers.spiking.SpyLIFLayer.update_regularization_loss"]], "baseregularization (class in neurotorch.regularization)": [[9, "neurotorch.regularization.BaseRegularization"]], "dalelaw (class in neurotorch.regularization.connectome)": [[9, "neurotorch.regularization.connectome.DaleLaw"]], "dalelawl2 (class in neurotorch.regularization.connectome)": [[9, "neurotorch.regularization.connectome.DaleLawL2"]], "excratiotargetregularization (class in neurotorch.regularization.connectome)": [[9, "neurotorch.regularization.connectome.ExcRatioTargetRegularization"]], "inhratiotargetregularization (class in neurotorch.regularization.connectome)": [[9, "neurotorch.regularization.connectome.InhRatioTargetRegularization"]], "l1 (class in neurotorch.regularization)": [[9, "neurotorch.regularization.L1"]], "l2 (class in neurotorch.regularization)": [[9, "neurotorch.regularization.L2"]], "lp (class in neurotorch.regularization)": [[9, "neurotorch.regularization.Lp"]], "regularizationlist (class in neurotorch.regularization)": [[9, "neurotorch.regularization.RegularizationList"]], "weightsdistance (class in neurotorch.regularization.connectome)": [[9, "neurotorch.regularization.connectome.WeightsDistance"]], "__call__() (neurotorch.regularization.baseregularization method)": [[9, "neurotorch.regularization.BaseRegularization.__call__"]], "__init__() (neurotorch.regularization.baseregularization method)": [[9, "neurotorch.regularization.BaseRegularization.__init__"]], "__init__() (neurotorch.regularization.l1 method)": [[9, "neurotorch.regularization.L1.__init__"]], "__init__() (neurotorch.regularization.l2 method)": [[9, "neurotorch.regularization.L2.__init__"]], "__init__() (neurotorch.regularization.lp method)": [[9, "neurotorch.regularization.Lp.__init__"]], "__init__() (neurotorch.regularization.regularizationlist method)": [[9, "neurotorch.regularization.RegularizationList.__init__"]], "__init__() (neurotorch.regularization.connectome.dalelaw method)": [[9, "neurotorch.regularization.connectome.DaleLaw.__init__"]], "__init__() (neurotorch.regularization.connectome.dalelawl2 method)": [[9, "neurotorch.regularization.connectome.DaleLawL2.__init__"]], "__init__() (neurotorch.regularization.connectome.excratiotargetregularization method)": [[9, "neurotorch.regularization.connectome.ExcRatioTargetRegularization.__init__"]], "__init__() (neurotorch.regularization.connectome.inhratiotargetregularization method)": [[9, "neurotorch.regularization.connectome.InhRatioTargetRegularization.__init__"]], "__init__() (neurotorch.regularization.connectome.weightsdistance method)": [[9, "neurotorch.regularization.connectome.WeightsDistance.__init__"]], "forward() (neurotorch.regularization.baseregularization method)": [[9, "neurotorch.regularization.BaseRegularization.forward"]], "forward() (neurotorch.regularization.lp method)": [[9, "neurotorch.regularization.Lp.forward"]], "forward() (neurotorch.regularization.regularizationlist method)": [[9, "neurotorch.regularization.RegularizationList.forward"]], "forward() (neurotorch.regularization.connectome.dalelawl2 method)": [[9, "neurotorch.regularization.connectome.DaleLawL2.forward"]], "forward() (neurotorch.regularization.connectome.excratiotargetregularization method)": [[9, "neurotorch.regularization.connectome.ExcRatioTargetRegularization.forward"]], "forward() (neurotorch.regularization.connectome.weightsdistance method)": [[9, "neurotorch.regularization.connectome.WeightsDistance.forward"]], "get_params_exc_ratio() (neurotorch.regularization.connectome.excratiotargetregularization method)": [[9, "neurotorch.regularization.connectome.ExcRatioTargetRegularization.get_params_exc_ratio"]], "get_params_inh_ratio() (neurotorch.regularization.connectome.excratiotargetregularization method)": [[9, "neurotorch.regularization.connectome.ExcRatioTargetRegularization.get_params_inh_ratio"]], "neurotorch.regularization": [[9, "module-neurotorch.regularization"]], "neurotorch.regularization.connectome": [[9, "module-neurotorch.regularization.connectome"]], "on_optimization_end() (neurotorch.regularization.baseregularization method)": [[9, "neurotorch.regularization.BaseRegularization.on_optimization_end"]], "on_pbar_update() (neurotorch.regularization.connectome.excratiotargetregularization method)": [[9, "neurotorch.regularization.connectome.ExcRatioTargetRegularization.on_pbar_update"]], "on_pbar_update() (neurotorch.regularization.connectome.inhratiotargetregularization method)": [[9, "neurotorch.regularization.connectome.InhRatioTargetRegularization.on_pbar_update"]], "agent (class in neurotorch.rl.agent)": [[10, "neurotorch.rl.agent.Agent"]], "agentshistorymaps (class in neurotorch.rl.buffers)": [[10, "neurotorch.rl.buffers.AgentsHistoryMaps"]], "batchexperience (class in neurotorch.rl.buffers)": [[10, "neurotorch.rl.buffers.BatchExperience"]], "checkpoint_optimizer_state_dict_key (neurotorch.rl.ppo.ppo attribute)": [[10, "neurotorch.rl.ppo.PPO.CHECKPOINT_OPTIMIZER_STATE_DICT_KEY"]], "cum_rewards_metric_key (neurotorch.rl.rl_academy.rlacademy attribute)": [[10, "neurotorch.rl.rl_academy.RLAcademy.CUM_REWARDS_METRIC_KEY"]], "completioncriteria (class in neurotorch.rl.curriculum)": [[10, "neurotorch.rl.curriculum.CompletionCriteria"]], "curriculum (class in neurotorch.rl.curriculum)": [[10, "neurotorch.rl.curriculum.Curriculum"]], "curriculumenditerationoutput (class in neurotorch.rl.curriculum)": [[10, "neurotorch.rl.curriculum.CurriculumEndIterationOutput"]], "experience (class in neurotorch.rl.buffers)": [[10, "neurotorch.rl.buffers.Experience"]], "gentrajectoriesoutput (class in neurotorch.rl.rl_academy)": [[10, "neurotorch.rl.rl_academy.GenTrajectoriesOutput"]], "lesson (class in neurotorch.rl.curriculum)": [[10, "neurotorch.rl.curriculum.Lesson"]], "linear (class in neurotorch.rl.utils)": [[10, "neurotorch.rl.utils.Linear"]], "ppo (class in neurotorch.rl.ppo)": [[10, "neurotorch.rl.ppo.PPO"]], "report_key (neurotorch.rl.utils.traininghistoriesmap attribute)": [[10, "neurotorch.rl.utils.TrainingHistoriesMap.REPORT_KEY"]], "rlacademy (class in neurotorch.rl.rl_academy)": [[10, "neurotorch.rl.rl_academy.RLAcademy"]], "replaybuffer (class in neurotorch.rl.buffers)": [[10, "neurotorch.rl.buffers.ReplayBuffer"]], "terminal_rewards_metric_key (neurotorch.rl.rl_academy.rlacademy attribute)": [[10, "neurotorch.rl.rl_academy.RLAcademy.TERMINAL_REWARDS_METRIC_KEY"]], "traininghistoriesmap (class in neurotorch.rl.utils)": [[10, "neurotorch.rl.utils.TrainingHistoriesMap"]], "trajectory (class in neurotorch.rl.buffers)": [[10, "neurotorch.rl.buffers.Trajectory"]], "trajectoryrenderer (class in neurotorch.rl.utils)": [[10, "neurotorch.rl.utils.TrajectoryRenderer"]], "unpicklable_attributes (neurotorch.rl.curriculum.lesson attribute)": [[10, "neurotorch.rl.curriculum.Lesson.UNPICKLABLE_ATTRIBUTES"]], "__init__() (neurotorch.rl.agent.agent method)": [[10, "neurotorch.rl.agent.Agent.__init__"]], "__init__() (neurotorch.rl.buffers.agentshistorymaps method)": [[10, "neurotorch.rl.buffers.AgentsHistoryMaps.__init__"]], "__init__() (neurotorch.rl.buffers.batchexperience method)": [[10, "neurotorch.rl.buffers.BatchExperience.__init__"]], "__init__() (neurotorch.rl.buffers.experience method)": [[10, "neurotorch.rl.buffers.Experience.__init__"]], "__init__() (neurotorch.rl.buffers.replaybuffer method)": [[10, "neurotorch.rl.buffers.ReplayBuffer.__init__"]], "__init__() (neurotorch.rl.buffers.trajectory method)": [[10, "neurotorch.rl.buffers.Trajectory.__init__"]], "__init__() (neurotorch.rl.curriculum.curriculum method)": [[10, "neurotorch.rl.curriculum.Curriculum.__init__"]], "__init__() (neurotorch.rl.curriculum.lesson method)": [[10, "neurotorch.rl.curriculum.Lesson.__init__"]], "__init__() (neurotorch.rl.ppo.ppo method)": [[10, "neurotorch.rl.ppo.PPO.__init__"]], "__init__() (neurotorch.rl.rl_academy.rlacademy method)": [[10, "neurotorch.rl.rl_academy.RLAcademy.__init__"]], "__init__() (neurotorch.rl.utils.linear method)": [[10, "neurotorch.rl.utils.Linear.__init__"]], "__init__() (neurotorch.rl.utils.traininghistoriesmap method)": [[10, "neurotorch.rl.utils.TrainingHistoriesMap.__init__"]], "__init__() (neurotorch.rl.utils.trajectoryrenderer method)": [[10, "neurotorch.rl.utils.TrajectoryRenderer.__init__"]], "action_spec (neurotorch.rl.agent.agent property)": [[10, "neurotorch.rl.agent.Agent.action_spec"]], "add_lesson() (neurotorch.rl.curriculum.curriculum method)": [[10, "neurotorch.rl.curriculum.Curriculum.add_lesson"]], "advantage (neurotorch.rl.buffers.experience property)": [[10, "neurotorch.rl.buffers.Experience.advantage"]], "agent (neurotorch.rl.ppo.ppo property)": [[10, "neurotorch.rl.ppo.PPO.agent"]], "agents_history_maps (neurotorch.rl.rl_academy.gentrajectoriesoutput attribute)": [[10, "neurotorch.rl.rl_academy.GenTrajectoriesOutput.agents_history_maps"]], "append() (neurotorch.rl.buffers.trajectory method)": [[10, "neurotorch.rl.buffers.Trajectory.append"]], "append() (neurotorch.rl.utils.traininghistoriesmap method)": [[10, "neurotorch.rl.utils.TrainingHistoriesMap.append"]], "append_and_propagate() (neurotorch.rl.buffers.trajectory method)": [[10, "neurotorch.rl.buffers.Trajectory.append_and_propagate"]], "batch_dict_of_items() (in module neurotorch.rl.utils)": [[10, "neurotorch.rl.utils.batch_dict_of_items"]], "batch_numpy_actions() (in module neurotorch.rl.utils)": [[10, "neurotorch.rl.utils.batch_numpy_actions"]], "buffer (neurotorch.rl.rl_academy.gentrajectoriesoutput attribute)": [[10, "neurotorch.rl.rl_academy.GenTrajectoriesOutput.buffer"]], "build() (neurotorch.rl.utils.linear method)": [[10, "neurotorch.rl.utils.Linear.build"]], "capacity (neurotorch.rl.buffers.replaybuffer property)": [[10, "neurotorch.rl.buffers.ReplayBuffer.capacity"]], "channel (neurotorch.rl.curriculum.lesson property)": [[10, "neurotorch.rl.curriculum.Lesson.channel"]], "channels (neurotorch.rl.curriculum.curriculum property)": [[10, "neurotorch.rl.curriculum.Curriculum.channels"]], "check_completion_criteria() (neurotorch.rl.curriculum.lesson method)": [[10, "neurotorch.rl.curriculum.Lesson.check_completion_criteria"]], "check_simulate_is_needed() (neurotorch.rl.utils.trajectoryrenderer method)": [[10, "neurotorch.rl.utils.TrajectoryRenderer.check_simulate_is_needed"]], "clear() (neurotorch.rl.buffers.agentshistorymaps method)": [[10, "neurotorch.rl.buffers.AgentsHistoryMaps.clear"]], "clear() (neurotorch.rl.buffers.replaybuffer method)": [[10, "neurotorch.rl.buffers.ReplayBuffer.clear"]], "close() (neurotorch.rl.rl_academy.rlacademy method)": [[10, "neurotorch.rl.rl_academy.RLAcademy.close"]], "compute_horizon_rewards() (neurotorch.rl.buffers.trajectory method)": [[10, "neurotorch.rl.buffers.Trajectory.compute_horizon_rewards"]], "concat() (neurotorch.rl.utils.traininghistoriesmap method)": [[10, "neurotorch.rl.utils.TrainingHistoriesMap.concat"]], "continuous_actions (neurotorch.rl.agent.agent property)": [[10, "neurotorch.rl.agent.Agent.continuous_actions"]], "continuous_actions_distribution() (in module neurotorch.rl.utils)": [[10, "neurotorch.rl.utils.continuous_actions_distribution"]], "copy() (neurotorch.rl.agent.agent method)": [[10, "neurotorch.rl.agent.Agent.copy"]], "copy_agent() (neurotorch.rl.rl_academy.rlacademy method)": [[10, "neurotorch.rl.rl_academy.RLAcademy.copy_agent"]], "copy_critic() (neurotorch.rl.agent.agent method)": [[10, "neurotorch.rl.agent.Agent.copy_critic"]], "copy_from_agent() (neurotorch.rl.agent.agent static method)": [[10, "neurotorch.rl.agent.Agent.copy_from_agent"]], "copy_policy() (neurotorch.rl.agent.agent method)": [[10, "neurotorch.rl.agent.Agent.copy_policy"]], "copy_policy() (neurotorch.rl.rl_academy.rlacademy method)": [[10, "neurotorch.rl.rl_academy.RLAcademy.copy_policy"]], "counter (neurotorch.rl.buffers.replaybuffer property)": [[10, "neurotorch.rl.buffers.ReplayBuffer.counter"]], "create_empty_state() (neurotorch.rl.utils.linear method)": [[10, "neurotorch.rl.utils.Linear.create_empty_state"]], "critic (neurotorch.rl.ppo.ppo property)": [[10, "neurotorch.rl.ppo.PPO.critic"]], "cumulative_reward (neurotorch.rl.buffers.trajectory property)": [[10, "neurotorch.rl.buffers.Trajectory.cumulative_reward"]], "cumulative_rewards (neurotorch.rl.buffers.agentshistorymaps attribute)": [[10, "neurotorch.rl.buffers.AgentsHistoryMaps.cumulative_rewards"]], "cumulative_rewards (neurotorch.rl.rl_academy.gentrajectoriesoutput attribute)": [[10, "neurotorch.rl.rl_academy.GenTrajectoriesOutput.cumulative_rewards"]], "cumulative_rewards_as_array (neurotorch.rl.buffers.agentshistorymaps property)": [[10, "neurotorch.rl.buffers.AgentsHistoryMaps.cumulative_rewards_as_array"]], "current_lesson (neurotorch.rl.curriculum.curriculum property)": [[10, "neurotorch.rl.curriculum.Curriculum.current_lesson"]], "decay_continuous_action_variances() (neurotorch.rl.agent.agent method)": [[10, "neurotorch.rl.agent.Agent.decay_continuous_action_variances"]], "default_criteria() (neurotorch.rl.curriculum.completioncriteria static method)": [[10, "neurotorch.rl.curriculum.CompletionCriteria.default_criteria"]], "device (neurotorch.rl.agent.agent property)": [[10, "neurotorch.rl.agent.Agent.device"]], "device (neurotorch.rl.buffers.batchexperience property)": [[10, "neurotorch.rl.buffers.BatchExperience.device"]], "discounted_cumulative_sums() (in module neurotorch.rl.utils)": [[10, "neurotorch.rl.utils.discounted_cumulative_sums"]], "discounted_reward (neurotorch.rl.buffers.experience property)": [[10, "neurotorch.rl.buffers.Experience.discounted_reward"]], "discrete_actions (neurotorch.rl.agent.agent property)": [[10, "neurotorch.rl.agent.Agent.discrete_actions"]], "empty (neurotorch.rl.buffers.replaybuffer property)": [[10, "neurotorch.rl.buffers.ReplayBuffer.empty"]], "env (neurotorch.rl.rl_academy.rlacademy property)": [[10, "neurotorch.rl.rl_academy.RLAcademy.env"]], "env_batch_render() (in module neurotorch.rl.utils)": [[10, "neurotorch.rl.utils.env_batch_render"]], "env_batch_reset() (in module neurotorch.rl.utils)": [[10, "neurotorch.rl.utils.env_batch_reset"]], "env_batch_step() (in module neurotorch.rl.utils)": [[10, "neurotorch.rl.utils.env_batch_step"]], "experience_count (neurotorch.rl.buffers.agentshistorymaps property)": [[10, "neurotorch.rl.buffers.AgentsHistoryMaps.experience_count"]], "extend() (neurotorch.rl.buffers.replaybuffer method)": [[10, "neurotorch.rl.buffers.ReplayBuffer.extend"]], "format_batch_discrete_actions() (neurotorch.rl.agent.agent method)": [[10, "neurotorch.rl.agent.Agent.format_batch_discrete_actions"]], "format_numpy_actions() (in module neurotorch.rl.utils)": [[10, "neurotorch.rl.utils.format_numpy_actions"]], "forward() (neurotorch.rl.agent.agent method)": [[10, "neurotorch.rl.agent.Agent.forward"]], "forward() (neurotorch.rl.utils.linear method)": [[10, "neurotorch.rl.utils.Linear.forward"]], "full (neurotorch.rl.buffers.replaybuffer property)": [[10, "neurotorch.rl.buffers.ReplayBuffer.full"]], "generate_trajectories() (neurotorch.rl.rl_academy.rlacademy method)": [[10, "neurotorch.rl.rl_academy.RLAcademy.generate_trajectories"]], "get_actions() (neurotorch.rl.agent.agent method)": [[10, "neurotorch.rl.agent.Agent.get_actions"]], "get_actions_from_batch() (neurotorch.rl.ppo.ppo method)": [[10, "neurotorch.rl.ppo.PPO.get_actions_from_batch"]], "get_advantages_from_batch() (neurotorch.rl.ppo.ppo method)": [[10, "neurotorch.rl.ppo.PPO.get_advantages_from_batch"]], "get_batch_generator() (neurotorch.rl.buffers.replaybuffer method)": [[10, "neurotorch.rl.buffers.ReplayBuffer.get_batch_generator"]], "get_batch_tensor() (neurotorch.rl.buffers.replaybuffer method)": [[10, "neurotorch.rl.buffers.ReplayBuffer.get_batch_tensor"]], "get_checkpoint_state() (neurotorch.rl.ppo.ppo method)": [[10, "neurotorch.rl.ppo.PPO.get_checkpoint_state"]], "get_continuous_action_covariances() (neurotorch.rl.agent.agent method)": [[10, "neurotorch.rl.agent.Agent.get_continuous_action_covariances"]], "get_default_checkpoints_meta_path() (neurotorch.rl.agent.agent method)": [[10, "neurotorch.rl.agent.Agent.get_default_checkpoints_meta_path"]], "get_item_from_batch() (in module neurotorch.rl.utils)": [[10, "neurotorch.rl.utils.get_item_from_batch"]], "get_random_actions() (neurotorch.rl.agent.agent method)": [[10, "neurotorch.rl.agent.Agent.get_random_actions"]], "get_random_batch() (neurotorch.rl.buffers.replaybuffer method)": [[10, "neurotorch.rl.buffers.ReplayBuffer.get_random_batch"]], "get_returns_from_batch() (neurotorch.rl.ppo.ppo method)": [[10, "neurotorch.rl.ppo.PPO.get_returns_from_batch"]], "get_single_action_space() (in module neurotorch.rl.utils)": [[10, "neurotorch.rl.utils.get_single_action_space"]], "get_single_observation_space() (in module neurotorch.rl.utils)": [[10, "neurotorch.rl.utils.get_single_observation_space"]], "get_values() (neurotorch.rl.agent.agent method)": [[10, "neurotorch.rl.agent.Agent.get_values"]], "get_values_from_batch() (neurotorch.rl.ppo.ppo method)": [[10, "neurotorch.rl.ppo.PPO.get_values_from_batch"]], "hard_update() (neurotorch.rl.agent.agent method)": [[10, "neurotorch.rl.agent.Agent.hard_update"]], "increase_capacity() (neurotorch.rl.buffers.replaybuffer method)": [[10, "neurotorch.rl.buffers.ReplayBuffer.increase_capacity"]], "increment_counter() (neurotorch.rl.buffers.replaybuffer method)": [[10, "neurotorch.rl.buffers.ReplayBuffer.increment_counter"]], "initialize_weights_() (neurotorch.rl.utils.linear method)": [[10, "neurotorch.rl.utils.Linear.initialize_weights_"]], "is_completed (neurotorch.rl.curriculum.curriculum property)": [[10, "neurotorch.rl.curriculum.Curriculum.is_completed"]], "is_completed (neurotorch.rl.curriculum.lesson property)": [[10, "neurotorch.rl.curriculum.Lesson.is_completed"]], "is_empty() (neurotorch.rl.buffers.trajectory method)": [[10, "neurotorch.rl.buffers.Trajectory.is_empty"]], "last_policy (neurotorch.rl.ppo.ppo property)": [[10, "neurotorch.rl.ppo.PPO.last_policy"]], "lesson_completed (neurotorch.rl.curriculum.curriculumenditerationoutput attribute)": [[10, "neurotorch.rl.curriculum.CurriculumEndIterationOutput.lesson_completed"]], "lessons (neurotorch.rl.curriculum.curriculum property)": [[10, "neurotorch.rl.curriculum.Curriculum.lessons"]], "load() (neurotorch.rl.buffers.replaybuffer static method)": [[10, "neurotorch.rl.buffers.ReplayBuffer.load"]], "load_checkpoint() (neurotorch.rl.agent.agent method)": [[10, "neurotorch.rl.agent.Agent.load_checkpoint"]], "load_checkpoint_state() (neurotorch.rl.ppo.ppo method)": [[10, "neurotorch.rl.ppo.PPO.load_checkpoint_state"]], "make_rewards_horizon() (neurotorch.rl.buffers.trajectory method)": [[10, "neurotorch.rl.buffers.Trajectory.make_rewards_horizon"]], "map_repr (neurotorch.rl.curriculum.curriculum property)": [[10, "neurotorch.rl.curriculum.Curriculum.map_repr"]], "max() (neurotorch.rl.utils.traininghistoriesmap method)": [[10, "neurotorch.rl.utils.TrainingHistoriesMap.max"]], "max_abs_rewards (neurotorch.rl.buffers.agentshistorymaps property)": [[10, "neurotorch.rl.buffers.AgentsHistoryMaps.max_abs_rewards"]], "mean_cumulative_rewards (neurotorch.rl.buffers.agentshistorymaps property)": [[10, "neurotorch.rl.buffers.AgentsHistoryMaps.mean_cumulative_rewards"]], "measure (neurotorch.rl.curriculum.completioncriteria attribute)": [[10, "neurotorch.rl.curriculum.CompletionCriteria.measure"]], "messages (neurotorch.rl.curriculum.curriculumenditerationoutput attribute)": [[10, "neurotorch.rl.curriculum.CurriculumEndIterationOutput.messages"]], "metrics (neurotorch.rl.buffers.experience property)": [[10, "neurotorch.rl.buffers.Experience.metrics"]], "min_lesson_length (neurotorch.rl.curriculum.completioncriteria attribute)": [[10, "neurotorch.rl.curriculum.CompletionCriteria.min_lesson_length"]], "neurotorch.rl": [[10, "module-neurotorch.rl"]], "neurotorch.rl.agent": [[10, "module-neurotorch.rl.agent"]], "neurotorch.rl.buffers": [[10, "module-neurotorch.rl.buffers"]], "neurotorch.rl.curriculum": [[10, "module-neurotorch.rl.curriculum"]], "neurotorch.rl.ppo": [[10, "module-neurotorch.rl.ppo"]], "neurotorch.rl.rl_academy": [[10, "module-neurotorch.rl.rl_academy"]], "neurotorch.rl.utils": [[10, "module-neurotorch.rl.utils"]], "obs_batch_to_sequence() (in module neurotorch.rl.utils)": [[10, "neurotorch.rl.utils.obs_batch_to_sequence"]], "obs_sequence_to_batch() (in module neurotorch.rl.utils)": [[10, "neurotorch.rl.utils.obs_sequence_to_batch"]], "observation (neurotorch.rl.buffers.experience property)": [[10, "neurotorch.rl.buffers.Experience.observation"]], "observation_spec (neurotorch.rl.agent.agent property)": [[10, "neurotorch.rl.agent.Agent.observation_spec"]], "on_iteration_begin() (neurotorch.rl.ppo.ppo method)": [[10, "neurotorch.rl.ppo.PPO.on_iteration_begin"]], "on_iteration_end() (neurotorch.rl.curriculum.curriculum method)": [[10, "neurotorch.rl.curriculum.Curriculum.on_iteration_end"]], "on_iteration_end() (neurotorch.rl.curriculum.lesson method)": [[10, "neurotorch.rl.curriculum.Lesson.on_iteration_end"]], "on_iteration_start() (neurotorch.rl.curriculum.curriculum method)": [[10, "neurotorch.rl.curriculum.Curriculum.on_iteration_start"]], "on_optimization_begin() (neurotorch.rl.ppo.ppo method)": [[10, "neurotorch.rl.ppo.PPO.on_optimization_begin"]], "on_optimization_end() (neurotorch.rl.ppo.ppo method)": [[10, "neurotorch.rl.ppo.PPO.on_optimization_end"]], "on_pbar_update() (neurotorch.rl.ppo.ppo method)": [[10, "neurotorch.rl.ppo.PPO.on_pbar_update"]], "on_trajectory_end() (neurotorch.rl.ppo.ppo method)": [[10, "neurotorch.rl.ppo.PPO.on_trajectory_end"]], "plot() (neurotorch.rl.utils.traininghistoriesmap method)": [[10, "neurotorch.rl.utils.TrainingHistoriesMap.plot"]], "plot_history() (neurotorch.rl.utils.traininghistoriesmap method)": [[10, "neurotorch.rl.utils.TrainingHistoriesMap.plot_history"]], "policy (neurotorch.rl.ppo.ppo property)": [[10, "neurotorch.rl.ppo.PPO.policy"]], "policy (neurotorch.rl.rl_academy.rlacademy property)": [[10, "neurotorch.rl.rl_academy.RLAcademy.policy"]], "propagate() (neurotorch.rl.buffers.trajectory method)": [[10, "neurotorch.rl.buffers.Trajectory.propagate"]], "propagate_all() (neurotorch.rl.buffers.agentshistorymaps method)": [[10, "neurotorch.rl.buffers.AgentsHistoryMaps.propagate_all"]], "propagate_and_get_all() (neurotorch.rl.buffers.agentshistorymaps method)": [[10, "neurotorch.rl.buffers.AgentsHistoryMaps.propagate_and_get_all"]], "propagate_rewards() (neurotorch.rl.buffers.trajectory method)": [[10, "neurotorch.rl.buffers.Trajectory.propagate_rewards"]], "propagate_values() (neurotorch.rl.buffers.trajectory method)": [[10, "neurotorch.rl.buffers.Trajectory.propagate_values"]], "propagated (neurotorch.rl.buffers.trajectory property)": [[10, "neurotorch.rl.buffers.Trajectory.propagated"]], "render() (neurotorch.rl.utils.trajectoryrenderer method)": [[10, "neurotorch.rl.utils.TrajectoryRenderer.render"]], "report_history (neurotorch.rl.utils.traininghistoriesmap property)": [[10, "neurotorch.rl.utils.TrainingHistoriesMap.report_history"]], "reset_agents_history_maps_meta() (neurotorch.rl.rl_academy.rlacademy method)": [[10, "neurotorch.rl.rl_academy.RLAcademy.reset_agents_history_maps_meta"]], "reset_counter() (neurotorch.rl.buffers.replaybuffer method)": [[10, "neurotorch.rl.buffers.ReplayBuffer.reset_counter"]], "sample_action_space() (in module neurotorch.rl.utils)": [[10, "neurotorch.rl.utils.sample_action_space"]], "save() (neurotorch.rl.buffers.replaybuffer method)": [[10, "neurotorch.rl.buffers.ReplayBuffer.save"]], "set_continuous_action_variances_with_itr() (neurotorch.rl.agent.agent method)": [[10, "neurotorch.rl.agent.Agent.set_continuous_action_variances_with_itr"]], "set_default_academy_kwargs() (neurotorch.rl.rl_academy.rlacademy static method)": [[10, "neurotorch.rl.rl_academy.RLAcademy.set_default_academy_kwargs"]], "set_default_critic_kwargs() (neurotorch.rl.agent.agent method)": [[10, "neurotorch.rl.agent.Agent.set_default_critic_kwargs"]], "set_default_policy_kwargs() (neurotorch.rl.agent.agent method)": [[10, "neurotorch.rl.agent.Agent.set_default_policy_kwargs"]], "set_result() (neurotorch.rl.curriculum.lesson method)": [[10, "neurotorch.rl.curriculum.Lesson.set_result"]], "set_seed() (neurotorch.rl.buffers.replaybuffer method)": [[10, "neurotorch.rl.buffers.ReplayBuffer.set_seed"]], "simulate() (neurotorch.rl.utils.trajectoryrenderer method)": [[10, "neurotorch.rl.utils.TrajectoryRenderer.simulate"]], "soft_update() (neurotorch.rl.agent.agent method)": [[10, "neurotorch.rl.agent.Agent.soft_update"]], "space_to_continuous_shape() (in module neurotorch.rl.utils)": [[10, "neurotorch.rl.utils.space_to_continuous_shape"]], "space_to_spec() (in module neurotorch.rl.utils)": [[10, "neurotorch.rl.utils.space_to_spec"]], "start() (neurotorch.rl.curriculum.lesson method)": [[10, "neurotorch.rl.curriculum.Lesson.start"]], "start() (neurotorch.rl.ppo.ppo method)": [[10, "neurotorch.rl.ppo.PPO.start"]], "start_counter() (neurotorch.rl.buffers.replaybuffer method)": [[10, "neurotorch.rl.buffers.ReplayBuffer.start_counter"]], "stop_counter() (neurotorch.rl.buffers.replaybuffer method)": [[10, "neurotorch.rl.buffers.ReplayBuffer.stop_counter"]], "store() (neurotorch.rl.buffers.replaybuffer method)": [[10, "neurotorch.rl.buffers.ReplayBuffer.store"]], "teacher (neurotorch.rl.curriculum.lesson property)": [[10, "neurotorch.rl.curriculum.Lesson.teacher"]], "teacher_buffer (neurotorch.rl.curriculum.curriculum property)": [[10, "neurotorch.rl.curriculum.Curriculum.teacher_buffer"]], "teacher_buffer (neurotorch.rl.curriculum.lesson property)": [[10, "neurotorch.rl.curriculum.Lesson.teacher_buffer"]], "teachers (neurotorch.rl.curriculum.curriculum property)": [[10, "neurotorch.rl.curriculum.Curriculum.teachers"]], "terminal (neurotorch.rl.buffers.trajectory property)": [[10, "neurotorch.rl.buffers.Trajectory.terminal"]], "terminal_reward (neurotorch.rl.buffers.trajectory property)": [[10, "neurotorch.rl.buffers.Trajectory.terminal_reward"]], "terminals_count (neurotorch.rl.buffers.agentshistorymaps property)": [[10, "neurotorch.rl.buffers.AgentsHistoryMaps.terminals_count"]], "terminated (neurotorch.rl.buffers.trajectory property)": [[10, "neurotorch.rl.buffers.Trajectory.terminated"]], "threshold (neurotorch.rl.curriculum.completioncriteria attribute)": [[10, "neurotorch.rl.curriculum.CompletionCriteria.threshold"]], "to() (neurotorch.rl.agent.agent method)": [[10, "neurotorch.rl.agent.Agent.to"]], "to_file() (neurotorch.rl.utils.trajectoryrenderer method)": [[10, "neurotorch.rl.utils.TrajectoryRenderer.to_file"]], "to_gif() (neurotorch.rl.utils.trajectoryrenderer method)": [[10, "neurotorch.rl.utils.TrajectoryRenderer.to_gif"]], "to_mp4() (neurotorch.rl.utils.trajectoryrenderer method)": [[10, "neurotorch.rl.utils.TrajectoryRenderer.to_mp4"]], "train() (neurotorch.rl.rl_academy.rlacademy method)": [[10, "neurotorch.rl.rl_academy.RLAcademy.train"]], "trajectories (neurotorch.rl.buffers.agentshistorymaps attribute)": [[10, "neurotorch.rl.buffers.AgentsHistoryMaps.trajectories"]], "trajectories (neurotorch.rl.rl_academy.gentrajectoriesoutput attribute)": [[10, "neurotorch.rl.rl_academy.GenTrajectoriesOutput.trajectories"]], "update_channels() (neurotorch.rl.curriculum.curriculum method)": [[10, "neurotorch.rl.curriculum.Curriculum.update_channels"]], "update_others() (neurotorch.rl.buffers.trajectory method)": [[10, "neurotorch.rl.buffers.Trajectory.update_others"]], "update_params() (neurotorch.rl.ppo.ppo method)": [[10, "neurotorch.rl.ppo.PPO.update_params"]], "update_teachers() (neurotorch.rl.curriculum.curriculum method)": [[10, "neurotorch.rl.curriculum.Curriculum.update_teachers"]], "update_teachers_and_channels() (neurotorch.rl.curriculum.curriculum method)": [[10, "neurotorch.rl.curriculum.Curriculum.update_teachers_and_channels"]], "update_trajectories_() (neurotorch.rl.buffers.agentshistorymaps method)": [[10, "neurotorch.rl.buffers.AgentsHistoryMaps.update_trajectories_"]], "classificationtrainer (class in neurotorch.trainers.classification)": [[11, "neurotorch.trainers.classification.ClassificationTrainer"]], "currenttrainingstate (class in neurotorch.trainers.trainer)": [[11, "neurotorch.trainers.trainer.CurrentTrainingState"]], "regressiontrainer (class in neurotorch.trainers.regression)": [[11, "neurotorch.trainers.regression.RegressionTrainer"]], "trainer (class in neurotorch.trainers.trainer)": [[11, "neurotorch.trainers.trainer.Trainer"]], "trainingstate (in module neurotorch.trainers.trainer)": [[11, "neurotorch.trainers.trainer.TrainingState"]], "__init__() (neurotorch.trainers.classification.classificationtrainer method)": [[11, "neurotorch.trainers.classification.ClassificationTrainer.__init__"]], "__init__() (neurotorch.trainers.regression.regressiontrainer method)": [[11, "neurotorch.trainers.regression.RegressionTrainer.__init__"]], "__init__() (neurotorch.trainers.trainer.trainer method)": [[11, "neurotorch.trainers.trainer.Trainer.__init__"]], "apply_criterion_on_batch() (neurotorch.trainers.trainer.trainer method)": [[11, "neurotorch.trainers.trainer.Trainer.apply_criterion_on_batch"]], "batch (neurotorch.trainers.trainer.currenttrainingstate attribute)": [[11, "neurotorch.trainers.trainer.CurrentTrainingState.batch"]], "batch_is_train (neurotorch.trainers.trainer.currenttrainingstate attribute)": [[11, "neurotorch.trainers.trainer.CurrentTrainingState.batch_is_train"]], "batch_loss (neurotorch.trainers.trainer.currenttrainingstate attribute)": [[11, "neurotorch.trainers.trainer.CurrentTrainingState.batch_loss"]], "checkpoint_managers (neurotorch.trainers.trainer.trainer property)": [[11, "neurotorch.trainers.trainer.Trainer.checkpoint_managers"]], "epoch (neurotorch.trainers.trainer.currenttrainingstate attribute)": [[11, "neurotorch.trainers.trainer.CurrentTrainingState.epoch"]], "epoch_loss (neurotorch.trainers.trainer.currenttrainingstate attribute)": [[11, "neurotorch.trainers.trainer.CurrentTrainingState.epoch_loss"]], "force_overwrite (neurotorch.trainers.trainer.trainer property)": [[11, "neurotorch.trainers.trainer.Trainer.force_overwrite"]], "get_null_state() (neurotorch.trainers.trainer.currenttrainingstate static method)": [[11, "neurotorch.trainers.trainer.CurrentTrainingState.get_null_state"]], "get_pred_batch() (neurotorch.trainers.trainer.trainer method)": [[11, "neurotorch.trainers.trainer.Trainer.get_pred_batch"]], "hh_batch (neurotorch.trainers.trainer.currenttrainingstate attribute)": [[11, "neurotorch.trainers.trainer.CurrentTrainingState.hh_batch"]], "info (neurotorch.trainers.trainer.currenttrainingstate attribute)": [[11, "neurotorch.trainers.trainer.CurrentTrainingState.info"]], "iteration (neurotorch.trainers.trainer.currenttrainingstate attribute)": [[11, "neurotorch.trainers.trainer.CurrentTrainingState.iteration"]], "itr_metrics (neurotorch.trainers.trainer.currenttrainingstate attribute)": [[11, "neurotorch.trainers.trainer.CurrentTrainingState.itr_metrics"]], "learning_algorithms (neurotorch.trainers.trainer.trainer property)": [[11, "neurotorch.trainers.trainer.Trainer.learning_algorithms"]], "load_checkpoint_mode (neurotorch.trainers.trainer.trainer property)": [[11, "neurotorch.trainers.trainer.Trainer.load_checkpoint_mode"]], "load_state() (neurotorch.trainers.trainer.trainer method)": [[11, "neurotorch.trainers.trainer.Trainer.load_state"]], "n_epochs (neurotorch.trainers.trainer.currenttrainingstate attribute)": [[11, "neurotorch.trainers.trainer.CurrentTrainingState.n_epochs"]], "n_iterations (neurotorch.trainers.trainer.currenttrainingstate attribute)": [[11, "neurotorch.trainers.trainer.CurrentTrainingState.n_iterations"]], "network (neurotorch.trainers.trainer.trainer property)": [[11, "neurotorch.trainers.trainer.Trainer.network"]], "neurotorch.trainers": [[11, "module-neurotorch.trainers"]], "neurotorch.trainers.classification": [[11, "module-neurotorch.trainers.classification"]], "neurotorch.trainers.regression": [[11, "module-neurotorch.trainers.regression"]], "neurotorch.trainers.trainer": [[11, "module-neurotorch.trainers.trainer"]], "objects (neurotorch.trainers.trainer.currenttrainingstate attribute)": [[11, "neurotorch.trainers.trainer.CurrentTrainingState.objects"]], "pred_batch (neurotorch.trainers.trainer.currenttrainingstate attribute)": [[11, "neurotorch.trainers.trainer.CurrentTrainingState.pred_batch"]], "sort_callbacks_() (neurotorch.trainers.trainer.trainer method)": [[11, "neurotorch.trainers.trainer.Trainer.sort_callbacks_"]], "state (neurotorch.trainers.trainer.trainer property)": [[11, "neurotorch.trainers.trainer.Trainer.state"]], "stop_training_flag (neurotorch.trainers.trainer.currenttrainingstate attribute)": [[11, "neurotorch.trainers.trainer.CurrentTrainingState.stop_training_flag"]], "train() (neurotorch.trainers.trainer.trainer method)": [[11, "neurotorch.trainers.trainer.Trainer.train"]], "train_loss (neurotorch.trainers.trainer.currenttrainingstate attribute)": [[11, "neurotorch.trainers.trainer.CurrentTrainingState.train_loss"]], "train_metrics (neurotorch.trainers.trainer.currenttrainingstate attribute)": [[11, "neurotorch.trainers.trainer.CurrentTrainingState.train_metrics"]], "training_histories (neurotorch.trainers.trainer.trainer property)": [[11, "neurotorch.trainers.trainer.Trainer.training_histories"]], "update() (neurotorch.trainers.trainer.currenttrainingstate method)": [[11, "neurotorch.trainers.trainer.CurrentTrainingState.update"]], "update_info_state_() (neurotorch.trainers.trainer.trainer method)": [[11, "neurotorch.trainers.trainer.Trainer.update_info_state_"]], "update_itr_metrics_state_() (neurotorch.trainers.trainer.trainer method)": [[11, "neurotorch.trainers.trainer.Trainer.update_itr_metrics_state_"]], "update_objects_state_() (neurotorch.trainers.trainer.trainer method)": [[11, "neurotorch.trainers.trainer.Trainer.update_objects_state_"]], "update_state_() (neurotorch.trainers.trainer.trainer method)": [[11, "neurotorch.trainers.trainer.Trainer.update_state_"]], "val_loss (neurotorch.trainers.trainer.currenttrainingstate attribute)": [[11, "neurotorch.trainers.trainer.CurrentTrainingState.val_loss"]], "val_metrics (neurotorch.trainers.trainer.currenttrainingstate attribute)": [[11, "neurotorch.trainers.trainer.CurrentTrainingState.val_metrics"]], "x_batch (neurotorch.trainers.trainer.currenttrainingstate attribute)": [[11, "neurotorch.trainers.trainer.CurrentTrainingState.x_batch"]], "y_batch (neurotorch.trainers.trainer.currenttrainingstate attribute)": [[11, "neurotorch.trainers.trainer.CurrentTrainingState.y_batch"]], "alifencoder (class in neurotorch.transforms.spikes_encoders)": [[12, "neurotorch.transforms.spikes_encoders.ALIFEncoder"]], "callabletomodulewrapper (class in neurotorch.transforms.wrappers)": [[12, "neurotorch.transforms.wrappers.CallableToModuleWrapper"]], "constantvaluestransform (class in neurotorch.transforms.base)": [[12, "neurotorch.transforms.base.ConstantValuesTransform"]], "identitytransform (class in neurotorch.transforms.base)": [[12, "neurotorch.transforms.base.IdentityTransform"]], "imgtospikes (class in neurotorch.transforms.vision)": [[12, "neurotorch.transforms.vision.ImgToSpikes"]], "lifencoder (class in neurotorch.transforms.spikes_encoders)": [[12, "neurotorch.transforms.spikes_encoders.LIFEncoder"]], "linearratetospikes (class in neurotorch.transforms.base)": [[12, "neurotorch.transforms.base.LinearRateToSpikes"]], "maybesoftmax (class in neurotorch.transforms.base)": [[12, "neurotorch.transforms.base.MaybeSoftmax"]], "meanconv (class in neurotorch.transforms.spikes_decoders)": [[12, "neurotorch.transforms.spikes_decoders.MeanConv"]], "reducefunctanh (class in neurotorch.transforms.base)": [[12, "neurotorch.transforms.base.ReduceFuncTanh"]], "reducemax (class in neurotorch.transforms.base)": [[12, "neurotorch.transforms.base.ReduceMax"]], "reducemean (class in neurotorch.transforms.base)": [[12, "neurotorch.transforms.base.ReduceMean"]], "reducesum (class in neurotorch.transforms.base)": [[12, "neurotorch.transforms.base.ReduceSum"]], "spikesautoencoder (class in neurotorch.transforms.spikes_auto_encoder)": [[12, "neurotorch.transforms.spikes_auto_encoder.SpikesAutoEncoder"]], "spikesencoder (class in neurotorch.transforms.spikes_encoders)": [[12, "neurotorch.transforms.spikes_encoders.SpikesEncoder"]], "spylifencoder (class in neurotorch.transforms.spikes_encoders)": [[12, "neurotorch.transforms.spikes_encoders.SpyLIFEncoder"]], "todevice (class in neurotorch.transforms.base)": [[12, "neurotorch.transforms.base.ToDevice"]], "totensor (class in neurotorch.transforms.base)": [[12, "neurotorch.transforms.base.ToTensor"]], "__call__() (neurotorch.transforms.vision.imgtospikes method)": [[12, "neurotorch.transforms.vision.ImgToSpikes.__call__"]], "__init__() (neurotorch.transforms.base.constantvaluestransform method)": [[12, "neurotorch.transforms.base.ConstantValuesTransform.__init__"]], "__init__() (neurotorch.transforms.base.identitytransform method)": [[12, "neurotorch.transforms.base.IdentityTransform.__init__"]], "__init__() (neurotorch.transforms.base.linearratetospikes method)": [[12, "neurotorch.transforms.base.LinearRateToSpikes.__init__"]], "__init__() (neurotorch.transforms.base.maybesoftmax method)": [[12, "neurotorch.transforms.base.MaybeSoftmax.__init__"]], "__init__() (neurotorch.transforms.base.reducefunctanh method)": [[12, "neurotorch.transforms.base.ReduceFuncTanh.__init__"]], "__init__() (neurotorch.transforms.base.reducemax method)": [[12, "neurotorch.transforms.base.ReduceMax.__init__"]], "__init__() (neurotorch.transforms.base.reducemean method)": [[12, "neurotorch.transforms.base.ReduceMean.__init__"]], "__init__() (neurotorch.transforms.base.reducesum method)": [[12, "neurotorch.transforms.base.ReduceSum.__init__"]], "__init__() (neurotorch.transforms.base.todevice method)": [[12, "neurotorch.transforms.base.ToDevice.__init__"]], "__init__() (neurotorch.transforms.base.totensor method)": [[12, "neurotorch.transforms.base.ToTensor.__init__"]], "__init__() (neurotorch.transforms.spikes_auto_encoder.spikesautoencoder method)": [[12, "neurotorch.transforms.spikes_auto_encoder.SpikesAutoEncoder.__init__"]], "__init__() (neurotorch.transforms.spikes_decoders.meanconv method)": [[12, "neurotorch.transforms.spikes_decoders.MeanConv.__init__"]], "__init__() (neurotorch.transforms.spikes_encoders.alifencoder method)": [[12, "neurotorch.transforms.spikes_encoders.ALIFEncoder.__init__"]], "__init__() (neurotorch.transforms.spikes_encoders.lifencoder method)": [[12, "neurotorch.transforms.spikes_encoders.LIFEncoder.__init__"]], "__init__() (neurotorch.transforms.spikes_encoders.spikesencoder method)": [[12, "neurotorch.transforms.spikes_encoders.SpikesEncoder.__init__"]], "__init__() (neurotorch.transforms.spikes_encoders.spylifencoder method)": [[12, "neurotorch.transforms.spikes_encoders.SpyLIFEncoder.__init__"]], "__init__() (neurotorch.transforms.vision.imgtospikes method)": [[12, "neurotorch.transforms.vision.ImgToSpikes.__init__"]], "__init__() (neurotorch.transforms.wrappers.callabletomodulewrapper method)": [[12, "neurotorch.transforms.wrappers.CallableToModuleWrapper.__init__"]], "decode() (neurotorch.transforms.spikes_auto_encoder.spikesautoencoder method)": [[12, "neurotorch.transforms.spikes_auto_encoder.SpikesAutoEncoder.decode"]], "device (neurotorch.transforms.base.todevice property)": [[12, "neurotorch.transforms.base.ToDevice.device"]], "device (neurotorch.transforms.spikes_auto_encoder.spikesautoencoder property)": [[12, "neurotorch.transforms.spikes_auto_encoder.SpikesAutoEncoder.device"]], "encode() (neurotorch.transforms.spikes_auto_encoder.spikesautoencoder method)": [[12, "neurotorch.transforms.spikes_auto_encoder.SpikesAutoEncoder.encode"]], "extra_repr() (neurotorch.transforms.base.reducemax method)": [[12, "neurotorch.transforms.base.ReduceMax.extra_repr"]], "extra_repr() (neurotorch.transforms.base.reducemean method)": [[12, "neurotorch.transforms.base.ReduceMean.extra_repr"]], "extra_repr() (neurotorch.transforms.base.reducesum method)": [[12, "neurotorch.transforms.base.ReduceSum.extra_repr"]], "extra_repr() (neurotorch.transforms.spikes_decoders.meanconv method)": [[12, "neurotorch.transforms.spikes_decoders.MeanConv.extra_repr"]], "firing_periods_to_spikes() (neurotorch.transforms.base.linearratetospikes method)": [[12, "neurotorch.transforms.base.LinearRateToSpikes.firing_periods_to_spikes"]], "firing_periods_to_spikes() (neurotorch.transforms.vision.imgtospikes method)": [[12, "neurotorch.transforms.vision.ImgToSpikes.firing_periods_to_spikes"]], "firing_periods_to_spikes_clip() (neurotorch.transforms.vision.imgtospikes method)": [[12, "neurotorch.transforms.vision.ImgToSpikes.firing_periods_to_spikes_clip"]], "firing_periods_to_spikes_loop() (neurotorch.transforms.vision.imgtospikes method)": [[12, "neurotorch.transforms.vision.ImgToSpikes.firing_periods_to_spikes_loop"]], "firing_times_to_spikes() (neurotorch.transforms.vision.imgtospikes method)": [[12, "neurotorch.transforms.vision.ImgToSpikes.firing_times_to_spikes"]], "forward() (neurotorch.transforms.base.constantvaluestransform method)": [[12, "neurotorch.transforms.base.ConstantValuesTransform.forward"]], "forward() (neurotorch.transforms.base.identitytransform method)": [[12, "neurotorch.transforms.base.IdentityTransform.forward"]], "forward() (neurotorch.transforms.base.linearratetospikes method)": [[12, "neurotorch.transforms.base.LinearRateToSpikes.forward"]], "forward() (neurotorch.transforms.base.maybesoftmax method)": [[12, "neurotorch.transforms.base.MaybeSoftmax.forward"]], "forward() (neurotorch.transforms.base.reducefunctanh method)": [[12, "neurotorch.transforms.base.ReduceFuncTanh.forward"]], "forward() (neurotorch.transforms.base.reducemax method)": [[12, "neurotorch.transforms.base.ReduceMax.forward"]], "forward() (neurotorch.transforms.base.reducemean method)": [[12, "neurotorch.transforms.base.ReduceMean.forward"]], "forward() (neurotorch.transforms.base.reducesum method)": [[12, "neurotorch.transforms.base.ReduceSum.forward"]], "forward() (neurotorch.transforms.base.todevice method)": [[12, "neurotorch.transforms.base.ToDevice.forward"]], "forward() (neurotorch.transforms.base.totensor method)": [[12, "neurotorch.transforms.base.ToTensor.forward"]], "forward() (neurotorch.transforms.spikes_auto_encoder.spikesautoencoder method)": [[12, "neurotorch.transforms.spikes_auto_encoder.SpikesAutoEncoder.forward"]], "forward() (neurotorch.transforms.spikes_decoders.meanconv method)": [[12, "neurotorch.transforms.spikes_decoders.MeanConv.forward"]], "forward() (neurotorch.transforms.spikes_encoders.spikesencoder method)": [[12, "neurotorch.transforms.spikes_encoders.SpikesEncoder.forward"]], "forward() (neurotorch.transforms.wrappers.callabletomodulewrapper method)": [[12, "neurotorch.transforms.wrappers.CallableToModuleWrapper.forward"]], "get_and_reset_regularization_loss() (neurotorch.transforms.spikes_auto_encoder.spikesautoencoder method)": [[12, "neurotorch.transforms.spikes_auto_encoder.SpikesAutoEncoder.get_and_reset_regularization_loss"]], "get_and_reset_regularization_loss() (neurotorch.transforms.spikes_encoders.spikesencoder method)": [[12, "neurotorch.transforms.spikes_encoders.SpikesEncoder.get_and_reset_regularization_loss"]], "get_prediction_trace() (neurotorch.transforms.spikes_auto_encoder.spikesautoencoder method)": [[12, "neurotorch.transforms.spikes_auto_encoder.SpikesAutoEncoder.get_prediction_trace"]], "get_raw_prediction() (neurotorch.transforms.spikes_auto_encoder.spikesautoencoder method)": [[12, "neurotorch.transforms.spikes_auto_encoder.SpikesAutoEncoder.get_raw_prediction"]], "neurotorch.transforms": [[12, "module-neurotorch.transforms"]], "neurotorch.transforms.base": [[12, "module-neurotorch.transforms.base"]], "neurotorch.transforms.spikes_auto_encoder": [[12, "module-neurotorch.transforms.spikes_auto_encoder"]], "neurotorch.transforms.spikes_decoders": [[12, "module-neurotorch.transforms.spikes_decoders"]], "neurotorch.transforms.spikes_encoders": [[12, "module-neurotorch.transforms.spikes_encoders"]], "neurotorch.transforms.vision": [[12, "module-neurotorch.transforms.vision"]], "neurotorch.transforms.wrappers": [[12, "module-neurotorch.transforms.wrappers"]], "pixels_to_firing_periods() (neurotorch.transforms.vision.imgtospikes method)": [[12, "neurotorch.transforms.vision.ImgToSpikes.pixels_to_firing_periods"]], "to() (neurotorch.transforms.base.todevice method)": [[12, "neurotorch.transforms.base.ToDevice.to"]], "to() (neurotorch.transforms.spikes_encoders.spikesencoder method)": [[12, "neurotorch.transforms.spikes_encoders.SpikesEncoder.to"]], "to_numpy() (in module neurotorch.transforms.base)": [[12, "neurotorch.transforms.base.to_numpy"]], "to_tensor() (in module neurotorch.transforms.base)": [[12, "neurotorch.transforms.base.to_tensor"]], "connectivityconvention (class in neurotorch.utils)": [[13, "neurotorch.utils.ConnectivityConvention"]], "itoj (neurotorch.utils.connectivityconvention attribute)": [[13, "neurotorch.utils.ConnectivityConvention.ItoJ"]], "jtoi (neurotorch.utils.connectivityconvention attribute)": [[13, "neurotorch.utils.ConnectivityConvention.JtoI"]], "batchwise_temporal_decay() (in module neurotorch.utils)": [[13, "neurotorch.utils.batchwise_temporal_decay"]], "batchwise_temporal_filter() (in module neurotorch.utils)": [[13, "neurotorch.utils.batchwise_temporal_filter"]], "batchwise_temporal_recursive_filter() (in module neurotorch.utils)": [[13, "neurotorch.utils.batchwise_temporal_recursive_filter"]], "clip_tensors_norm_() (in module neurotorch.utils)": [[13, "neurotorch.utils.clip_tensors_norm_"]], "compute_jacobian() (in module neurotorch.utils.autograd)": [[13, "neurotorch.utils.autograd.compute_jacobian"]], "dy_dw_local() (in module neurotorch.utils.autograd)": [[13, "neurotorch.utils.autograd.dy_dw_local"]], "filter_parameters() (in module neurotorch.utils.autograd)": [[13, "neurotorch.utils.autograd.filter_parameters"]], "format_pred_batch() (in module neurotorch.utils.formatting)": [[13, "neurotorch.utils.formatting.format_pred_batch"]], "format_pseudo_rn_seed() (in module neurotorch.utils.random)": [[13, "neurotorch.utils.random.format_pseudo_rn_seed"]], "from_other() (neurotorch.utils.connectivityconvention class method)": [[13, "neurotorch.utils.ConnectivityConvention.from_other"]], "from_str() (neurotorch.utils.connectivityconvention class method)": [[13, "neurotorch.utils.ConnectivityConvention.from_str"]], "get_all_params_combinations() (in module neurotorch.utils.collections)": [[13, "neurotorch.utils.collections.get_all_params_combinations"]], "get_contributing_params() (in module neurotorch.utils.autograd)": [[13, "neurotorch.utils.autograd.get_contributing_params"]], "get_meta_name() (in module neurotorch.utils.collections)": [[13, "neurotorch.utils.collections.get_meta_name"]], "get_meta_str() (in module neurotorch.utils.collections)": [[13, "neurotorch.utils.collections.get_meta_str"]], "hash_meta_str() (in module neurotorch.utils.collections)": [[13, "neurotorch.utils.collections.hash_meta_str"]], "hash_params() (in module neurotorch.utils.collections)": [[13, "neurotorch.utils.collections.hash_params"]], "legend_without_duplicate_labels_() (in module neurotorch.utils.visualise)": [[13, "neurotorch.utils.visualise.legend_without_duplicate_labels_"]], "linear_decay() (in module neurotorch.utils)": [[13, "neurotorch.utils.linear_decay"]], "list_insert_replace_at() (in module neurotorch.utils.collections)": [[13, "neurotorch.utils.collections.list_insert_replace_at"]], "list_of_callable_to_sequential() (in module neurotorch.utils.collections)": [[13, "neurotorch.utils.collections.list_of_callable_to_sequential"]], "mapping_update_recursively() (in module neurotorch.utils.collections)": [[13, "neurotorch.utils.collections.mapping_update_recursively"]], "maybe_apply_softmax() (in module neurotorch.utils)": [[13, "neurotorch.utils.maybe_apply_softmax"]], "maybe_unpack_singleton_dict() (in module neurotorch.utils.collections)": [[13, "neurotorch.utils.collections.maybe_unpack_singleton_dict"]], "neurotorch.utils": [[13, "module-neurotorch.utils"]], "neurotorch.utils.autograd": [[13, "module-neurotorch.utils.autograd"]], "neurotorch.utils.collections": [[13, "module-neurotorch.utils.collections"]], "neurotorch.utils.formatting": [[13, "module-neurotorch.utils.formatting"]], "neurotorch.utils.random": [[13, "module-neurotorch.utils.random"]], "neurotorch.utils.visualise": [[13, "module-neurotorch.utils.visualise"]], "plot_confusion_matrix() (in module neurotorch.utils.visualise)": [[13, "neurotorch.utils.visualise.plot_confusion_matrix"]], "ravel_compose_transforms() (in module neurotorch.utils)": [[13, "neurotorch.utils.ravel_compose_transforms"]], "recursive_detach() (in module neurotorch.utils.autograd)": [[13, "neurotorch.utils.autograd.recursive_detach"]], "recursive_detach_() (in module neurotorch.utils.autograd)": [[13, "neurotorch.utils.autograd.recursive_detach_"]], "save_params() (in module neurotorch.utils.collections)": [[13, "neurotorch.utils.collections.save_params"]], "sequence_get() (in module neurotorch.utils.collections)": [[13, "neurotorch.utils.collections.sequence_get"]], "set_seed() (in module neurotorch.utils.random)": [[13, "neurotorch.utils.random.set_seed"]], "unitary_rn_normal_matrix() (in module neurotorch.utils.random)": [[13, "neurotorch.utils.random.unitary_rn_normal_matrix"]], "unpack_out_hh() (in module neurotorch.utils.collections)": [[13, "neurotorch.utils.collections.unpack_out_hh"]], "unpack_singleton_dict() (in module neurotorch.utils.collections)": [[13, "neurotorch.utils.collections.unpack_singleton_dict"]], "unpack_tuple() (in module neurotorch.utils.collections)": [[13, "neurotorch.utils.collections.unpack_tuple"]], "unpack_x_hh_y() (in module neurotorch.utils.collections)": [[13, "neurotorch.utils.collections.unpack_x_hh_y"]], "vmap() (in module neurotorch.utils.autograd)": [[13, "neurotorch.utils.autograd.vmap"]], "zero_grad_params() (in module neurotorch.utils.autograd)": [[13, "neurotorch.utils.autograd.zero_grad_params"]], "umap_pca_report() (in module neurotorch.visualisation.report)": [[14, "neurotorch.visualisation.report.UMAP_PCA_report"]], "visualise (class in neurotorch.visualisation.time_series_visualisation)": [[14, "neurotorch.visualisation.time_series_visualisation.Visualise"]], "visualisedbscan (class in neurotorch.visualisation.time_series_visualisation)": [[14, "neurotorch.visualisation.time_series_visualisation.VisualiseDBSCAN"]], "visualisekmeans (class in neurotorch.visualisation.time_series_visualisation)": [[14, "neurotorch.visualisation.time_series_visualisation.VisualiseKMeans"]], "visualisepca (class in neurotorch.visualisation.time_series_visualisation)": [[14, "neurotorch.visualisation.time_series_visualisation.VisualisePCA"]], "visualiseumap (class in neurotorch.visualisation.time_series_visualisation)": [[14, "neurotorch.visualisation.time_series_visualisation.VisualiseUMAP"]], "__init__() (neurotorch.visualisation.time_series_visualisation.visualise method)": [[14, "neurotorch.visualisation.time_series_visualisation.Visualise.__init__"]], "__init__() (neurotorch.visualisation.time_series_visualisation.visualisedbscan method)": [[14, "neurotorch.visualisation.time_series_visualisation.VisualiseDBSCAN.__init__"]], "__init__() (neurotorch.visualisation.time_series_visualisation.visualisekmeans method)": [[14, "neurotorch.visualisation.time_series_visualisation.VisualiseKMeans.__init__"]], "__init__() (neurotorch.visualisation.time_series_visualisation.visualisepca method)": [[14, "neurotorch.visualisation.time_series_visualisation.VisualisePCA.__init__"]], "__init__() (neurotorch.visualisation.time_series_visualisation.visualiseumap method)": [[14, "neurotorch.visualisation.time_series_visualisation.VisualiseUMAP.__init__"]], "animate() (neurotorch.visualisation.time_series_visualisation.visualise method)": [[14, "neurotorch.visualisation.time_series_visualisation.Visualise.animate"]], "compute_umap_transform() (neurotorch.visualisation.time_series_visualisation.visualiseumap method)": [[14, "neurotorch.visualisation.time_series_visualisation.VisualiseUMAP.compute_umap_transform"]], "heatmap() (neurotorch.visualisation.time_series_visualisation.visualise method)": [[14, "neurotorch.visualisation.time_series_visualisation.Visualise.heatmap"]], "mix_report() (in module neurotorch.visualisation.report)": [[14, "neurotorch.visualisation.report.mix_report"]], "neurotorch.visualisation": [[14, "module-neurotorch.visualisation"]], "neurotorch.visualisation.connectome": [[14, "module-neurotorch.visualisation.connectome"]], "neurotorch.visualisation.report": [[14, "module-neurotorch.visualisation.report"]], "neurotorch.visualisation.time_series_visualisation": [[14, "module-neurotorch.visualisation.time_series_visualisation"]], "number_axes() (neurotorch.visualisation.time_series_visualisation.visualise static method)": [[14, "neurotorch.visualisation.time_series_visualisation.Visualise.number_axes"]], "permute_timeseries() (neurotorch.visualisation.time_series_visualisation.visualisekmeans method)": [[14, "neurotorch.visualisation.time_series_visualisation.VisualiseKMeans.permute_timeseries"]], "plot_single_timeseries_comparison() (neurotorch.visualisation.time_series_visualisation.visualise method)": [[14, "neurotorch.visualisation.time_series_visualisation.Visualise.plot_single_timeseries_comparison"]], "plot_timeseries() (neurotorch.visualisation.time_series_visualisation.visualise method)": [[14, "neurotorch.visualisation.time_series_visualisation.Visualise.plot_timeseries"]], "plot_timeseries_comparison() (neurotorch.visualisation.time_series_visualisation.visualise method)": [[14, "neurotorch.visualisation.time_series_visualisation.Visualise.plot_timeseries_comparison"]], "plot_timeseries_comparison_report() (neurotorch.visualisation.time_series_visualisation.visualise method)": [[14, "neurotorch.visualisation.time_series_visualisation.Visualise.plot_timeseries_comparison_report"]], "reduce_timeseries() (neurotorch.visualisation.time_series_visualisation.visualiseumap method)": [[14, "neurotorch.visualisation.time_series_visualisation.VisualiseUMAP.reduce_timeseries"]], "rigidplot() (neurotorch.visualisation.time_series_visualisation.visualise method)": [[14, "neurotorch.visualisation.time_series_visualisation.Visualise.rigidplot"]], "scatter_pca() (neurotorch.visualisation.time_series_visualisation.visualisepca method)": [[14, "neurotorch.visualisation.time_series_visualisation.VisualisePCA.scatter_pca"]], "scatter_umap() (neurotorch.visualisation.time_series_visualisation.visualiseumap method)": [[14, "neurotorch.visualisation.time_series_visualisation.VisualiseUMAP.scatter_umap"]], "trajectory_pca() (neurotorch.visualisation.time_series_visualisation.visualisepca method)": [[14, "neurotorch.visualisation.time_series_visualisation.VisualisePCA.trajectory_pca"]], "trajectory_umap() (neurotorch.visualisation.time_series_visualisation.visualiseumap method)": [[14, "neurotorch.visualisation.time_series_visualisation.VisualiseUMAP.trajectory_umap"]], "visualize_init_final_weights() (in module neurotorch.visualisation.connectome)": [[14, "neurotorch.visualisation.connectome.visualize_init_final_weights"]], "with_kmeans() (neurotorch.visualisation.time_series_visualisation.visualisepca method)": [[14, "neurotorch.visualisation.time_series_visualisation.VisualisePCA.with_kmeans"]], "with_kmeans() (neurotorch.visualisation.time_series_visualisation.visualiseumap method)": [[14, "neurotorch.visualisation.time_series_visualisation.VisualiseUMAP.with_kmeans"]]}})